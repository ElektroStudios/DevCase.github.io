<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>Kernel32.WriteFile(SafeFileHandle, IntPtr, UInt32, UInt32, IntPtr) Method</title>
    <meta name="Title" content="WriteFile(SafeFileHandle, IntPtr, UInt32, UInt32, IntPtr)" />
    <meta name="Help.Id" content="M:DevCase.Win32.NativeMethods.Kernel32.WriteFile(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IntPtr,System.UInt32,System.UInt32@,System.IntPtr)" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Win32.NativeMethods" />
    <meta name="guid" content="15110df7-8150-c9cd-312f-eaee36d2f9b7" />
    <meta name="Description" content="Writes data to the specified file or input/output (I/O) device.. This function is designed for both synchronous and asynchronous operation. For a similar function designed solely for asynchronous operation, see WriteFileEx." />
    <meta name="tocFile" content="../toc/ID0ZK0AJFFA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>Kernel<wbr />32<span id="LSTD919D643_0" data-languageSpecificText="cpp=::|nu=."></span>Write<wbr />File(Safe<wbr />File<wbr />Handle, Int<wbr />Ptr, UInt<wbr />32, UInt<wbr />32<span id="LSTD919D643_1" data-languageSpecificText="cpp=%"></span>, Int<wbr />Ptr) Method</h1>
            <div class="summary">
 Writes data to the specified file or input/output (I/O) device..
 <p />
 This function is designed for both synchronous and asynchronous operation. 
 For a similar function designed solely for asynchronous operation, see WriteFileEx.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="4b8ebc81-6ba2-6fac-af5b-8bb75ecef853.htm">DevCase.Win32.NativeMethods</a><br /><strong>Assembly:</strong> DevCase.net48 (in DevCase.net48.dll) Version: 6.0.0.0 (6.0)<br /><strong>XMLNS for XAML:</strong> Not mapped to an xmlns.<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="noLink">DllImportAttribute</span>("Kernel32.dll", ExactSpelling = true, SetLastError = true)]
<span class="keyword">public</span> <span class="keyword">static</span> <span class="noLink">bool</span> <span class="identifier">WriteFile</span>(
	<span class="noLink">SafeFileHandle</span> <span class="parameter">hFile</span>,
	<span class="noLink">IntPtr</span> <span class="parameter">buffer</span>,
	<span class="noLink">uint</span> <span class="parameter">numberOfBytesToWrite</span>,
	<span class="keyword">out</span> <span class="noLink">uint</span> <span class="parameter">refNumberOfBytesWritten</span>,
	[<span class="noLink">OptionalAttribute</span>] <span class="noLink">IntPtr</span> <span class="parameter">overlapped</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="noLink">DllImportAttribute</span>("Kernel32.dll", ExactSpelling := true, SetLastError := true&gt;]
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">WriteFile</span> ( 
	<span class="parameter">hFile</span> <span class="keyword">As</span> <span class="noLink">SafeFileHandle</span>,
	<span class="parameter">buffer</span> <span class="keyword">As</span> <span class="noLink">IntPtr</span>,
	<span class="parameter">numberOfBytesToWrite</span> <span class="keyword">As</span> <span class="noLink">UInteger</span>,
	&lt;<span class="noLink">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">refNumberOfBytesWritten</span> <span class="keyword">As</span> <span class="noLink">UInteger</span>,
	&lt;<span class="noLink">OptionalAttribute</span>&gt; <span class="parameter">overlapped</span> <span class="keyword">As</span> <span class="noLink">IntPtr</span>
) <span class="keyword">As</span> <span class="noLink">Boolean</span>

<span class="keyword">Dim</span> <span class="parameter">hFile</span> <span class="keyword">As</span> <span class="noLink">SafeFileHandle</span>
<span class="keyword">Dim</span> <span class="parameter">buffer</span> <span class="keyword">As</span> <span class="noLink">IntPtr</span>
<span class="keyword">Dim</span> <span class="parameter">numberOfBytesToWrite</span> <span class="keyword">As</span> <span class="noLink">UInteger</span>
<span class="keyword">Dim</span> <span class="parameter">refNumberOfBytesWritten</span> <span class="keyword">As</span> <span class="noLink">UInteger</span>
<span class="keyword">Dim</span> <span class="parameter">overlapped</span> <span class="keyword">As</span> <span class="noLink">IntPtr</span>

<span class="keyword">Dim</span> <span class="parameter">returnValue</span> <span class="keyword">As</span> <span class="noLink">Boolean</span>

<span class="parameter">returnValue</span> = <a href="094676a4-571b-ad1f-ef01-d8acf5ebed93.htm">Kernel32</a>.<span class="identifier">WriteFile</span>(<span class="parameter">hFile</span>, 
	<span class="parameter">buffer</span>, <span class="parameter">numberOfBytesToWrite</span>, <span class="parameter">refNumberOfBytesWritten</span>, 
	<span class="parameter">overlapped</span>)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
[<span class="noLink">DllImportAttribute</span>(L"Kernel32.dll", ExactSpelling = true, SetLastError = true)]
<span class="keyword">static</span> <span class="noLink">bool</span> <span class="identifier">WriteFile</span>(
	<span class="noLink">SafeFileHandle</span>^ <span class="parameter">hFile</span>, 
	<span class="noLink">IntPtr</span> <span class="parameter">buffer</span>, 
	<span class="noLink">unsigned int</span> <span class="parameter">numberOfBytesToWrite</span>, 
	[<span class="noLink">OutAttribute</span>] <span class="noLink">unsigned int</span>% <span class="parameter">refNumberOfBytesWritten</span>, 
	[<span class="noLink">OptionalAttribute</span>] <span class="noLink">IntPtr</span> <span class="parameter">overlapped</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="noLink">DllImportAttribute</span>("Kernel32.dll", ExactSpelling = true, SetLastError = true)&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">WriteFile</span> : 
        <span class="parameter">hFile</span> : <span class="noLink">SafeFileHandle</span> * 
        <span class="parameter">buffer</span> : <span class="noLink">IntPtr</span> * 
        <span class="parameter">numberOfBytesToWrite</span> : <span class="noLink">uint32</span> * 
        <span class="parameter">refNumberOfBytesWritten</span> : <span class="noLink">uint32</span> <span class="keyword">byref</span> * 
        [&lt;<span class="noLink">OptionalAttribute</span>&gt;] <span class="parameter">overlapped</span> : <span class="noLink">IntPtr</span> <span class="keyword">-&gt;</span> <span class="noLink">bool</span> </code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">hFile</span>  <span class="noLink">SafeFileHandle</span></dt><dd>
 A handle to the file or I/O device (for example, a file, file stream, physical disk, 
 volume, console buffer, tape drive, socket, communications resource, mailslot, or pipe).
 <p />
 The <span class="parameter">hFile</span> parameter must have been created with write access. 
 For more information, see Generic Access Rights and File Security and Access Rights.
 <p />
 For asynchronous read operations, <span class="parameter">hFile</span> can be 
 any handle that is opened with the <a href="0cdc7944-c002-6c71-e2c5-21dc23270caf.htm">Overlapped</a> flag by the 
 <a href="4c279059-6d21-48f1-fabd-e5a9fd291e4f.htm">CreateFile(String, FileAccessRights, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a> function, 
 or a socket handle returned by the socket or accept function.
 </dd><dt class="has-text-weight-normal"><span class="parameter">buffer</span>  <span class="noLink">IntPtr</span></dt><dd>
 A pointer to the buffer containing the data to be written to the file or device.
 <p />
 This buffer must remain valid for the duration of the write operation. 
 <p />
 The caller must not use this buffer until the write operation is completed.
 </dd><dt class="has-text-weight-normal"><span class="parameter">numberOfBytesToWrite</span>  <span class="noLink">UInt32</span></dt><dd>
 The number of bytes to be written to the file or device.
 <p />
 A value of zero specifies a null write operation. 
 <p />
 The behavior of a null write operation depends on the underlying file system or communications technology.
 <p /></dd><dt class="has-text-weight-normal"><span class="parameter">refNumberOfBytesWritten</span>  <span class="noLink">UInt32</span><span id="LSTD919D643_2" data-languageSpecificText="cpp=%"></span></dt><dd>
 A pointer to the variable that receives the number of bytes written when using a synchronous <span class="parameter">hFile</span> parameter.
 <p /><a href="485a35c5-66a0-2a1f-cf01-06052d99a52b.htm">WriteFile(SafeFileHandle, <span id="LSTD919D643_3" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTD919D643_4" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32<span id="LSTD919D643_5" data-languageSpecificText="cpp=%"></span>, NativeOverlapped<span id="LSTD919D643_6" data-languageSpecificText="cpp=%"></span>)</a> sets this value to zero before doing any work or error checking. 
 <p />
 Use NULL for this parameter if this is an asynchronous operation to avoid potentially erroneous results.
 <p />
 This parameter can be NULL only when the <span class="parameter">overlapped</span> parameter is not NULL.
 </dd><dt class="has-text-weight-normal"><span class="parameter">overlapped</span>  <span class="noLink">IntPtr</span>  (Optional)</dt><dd>
 A pointer to an OVERLAPPED structure is required if the 
 <span class="parameter">hFile</span> parameter was opened with <a href="0cdc7944-c002-6c71-e2c5-21dc23270caf.htm">Overlapped</a>, 
 otherwise this parameter can be NULL.
 <p />
 For an <span class="parameter">hFile</span> that supports byte offsets, 
 if you use this parameter you must specify a byte offset at which to start writing to the file or device. 
 This offset is specified by setting the Offset and OffsetHigh members of the OVERLAPPED structure. 
 For an hFile that does not support byte offsets, Offset and OffsetHigh are ignored.
 <p />
 To write to the end of file, specify both the Offset and OffsetHigh members of the 
 OVERLAPPED structure as 0xFFFFFFFF. 
 This is functionally equivalent to previously calling the <a href="4c279059-6d21-48f1-fabd-e5a9fd291e4f.htm">CreateFile(String, FileAccessRights, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a> function 
 to open <span class="parameter">hFile</span> using <a href="5a8502d4-92cf-473a-bcd4-5314f5e5d080.htm">AppendData</a> access.
 </dd></dl><h4 class="quickLinkHeader">Return Value</h4><span class="noLink">Boolean</span><br />
 If the function succeeds, the return value is <span class="keyword"><span id="LSTD919D643_7" data-languageSpecificText="vb=True|nu=true"></span></span>.
 <p />
 If the function fails, or is completing asynchronously, the return value is <span class="keyword"><span id="LSTD919D643_8" data-languageSpecificText="vb=False|nu=false"></span></span>.
 <p />
 To get extended error information, call <span class="noLink">GetLastWin32Error<span id="LSTD919D643_9" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>.
 <p />
 Note: The <span class="noLink">GetLastWin32Error<span id="LSTD919D643_10" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span> code <a href="3c01115c-f2e9-a5d5-cbf3-0510ace8d7de.htm">ERROR_IO_PENDING</a>
 is not a failure; it means the write operation is pending completion asynchronously.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Remarks</h2>
            <div id="IDBCSection">
              <a href="https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-writefile" target="_blank" rel="noopener noreferrer">https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-writefile</a>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="094676a4-571b-ad1f-ef01-d8acf5ebed93.htm">Kernel32 Class</a>
              </div>
              <div>
                <a href="d638719b-58bf-015e-656c-a176df217ac5.htm">WriteFile Overload</a>
              </div>
              <div>
                <a href="4b8ebc81-6ba2-6fac-af5b-8bb75ecef853.htm">DevCase.Win32.NativeMethods Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                  <ul class="menu">
                    <li>
                      <a class="quickLink">Parameters</a>
                    </li>
                    <li>
                      <a class="quickLink">Return Value</a>
                    </li>
                  </ul>
                </li>
                <li>
                  <a class="quickLink">Remarks</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
    <script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script>
  </body>
</html>