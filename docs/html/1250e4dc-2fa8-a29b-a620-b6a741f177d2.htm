<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>User32 Class</title>
    <meta name="Title" content="User32" />
    <meta name="Help.Id" content="T:DevCase.Win32.NativeMethods.User32" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Win32.NativeMethods" />
    <meta name="guid" content="1250e4dc-2fa8-a29b-a620-b6a741f177d2" />
    <meta name="Description" content="Platform Invocation methods (P/Invoke), access unmanaged code. User32.dll." />
    <meta name="tocFile" content="../toc/IDFFA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>User<wbr />32 Class</h1>
            <div class="summary">
 Platform Invocation methods (P/Invoke), access unmanaged code.
 <p />
 User32.dll.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="4b8ebc81-6ba2-6fac-af5b-8bb75ecef853.htm">DevCase.Win32.NativeMethods</a><br /><strong>Assembly:</strong> DevCase.net48 (in DevCase.net48.dll) Version: 6.0.0.0 (6.0)<br /><strong>XMLNS for XAML:</strong> Not mapped to an xmlns.<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="noLink">HideModuleNameAttribute</span>]
<span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">User32</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="noLink">HideModuleNameAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">User32</span>

<span class="keyword">Dim</span> <span class="parameter">instance</span> <span class="keyword">As</span> <span class="identifier">User32</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp">[<span class="noLink">HideModuleNameAttribute</span>]
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">User32</span> <span class="keyword">sealed</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="noLink">SealedAttribute</span>&gt;]
[&lt;<span class="noLink">HideModuleNameAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">User32</span> = <span class="keyword">class</span> <span class="keyword">end</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">User32</span></dd></dl></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Methods</h2>
            <div id="IDIEASection">
              <table id="MethodList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="6b16d13d-0606-cfba-d5b6-abc93b841010.htm">ActivateKeyboardLayout</a>
                  </td>
                  <td>
 Sets the input locale identifier (formerly called the keyboard layout handle) for the calling thread or the current process. 
 <p />
 The input locale identifier specifies a locale as well as the physical layout of the keyboard.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f46689f9-17d0-8e8e-27ed-0e7a8e083b9c.htm">AllowSetForegroundWindow</a>
                  </td>
                  <td>
 Enables the specified process to set the foreground window using the <a href="c9b5f546-c28b-def3-13d2-694fe9989f40.htm">SetForegroundWindow(IntPtr)</a> function. 
 <p />
 The calling process must already be able to set the foreground window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="78d6ee96-8c48-9c83-8f76-777c8b281100.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a>
                  </td>
                  <td>
 Produces special effects when showing or hiding a window.
 <p />
 This doesn't show the window so make sure you call <span class="noLink">Show<span id="LST44177590_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span> 
 or set <span class="noLink">Visible</span> property to <span class="keyword"><span id="LST44177590_1" data-languageSpecificText="vb=True|nu=true"></span></span> after calling <a href="78d6ee96-8c48-9c83-8f76-777c8b281100.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f22ad80a-321d-3fe0-bc7f-ce58eb00d8ae.htm">AnimateWindow(SafeHandle, Int32, WindowAnimation)</a>
                  </td>
                  <td>
 Produces special effects when showing or hiding a window.
 <p />
 This doesn't show the window so make sure you call <span class="noLink">Show<span id="LST44177590_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span> 
 or set <span class="noLink">Visible</span> property to <span class="keyword"><span id="LST44177590_3" data-languageSpecificText="vb=True|nu=true"></span></span> after calling <a href="78d6ee96-8c48-9c83-8f76-777c8b281100.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="df43882f-b9ea-c792-a437-d904e48ded32.htm">AnyPopup</a>
                  </td>
                  <td>
 Indicates whether an owned, visible, top-level pop-up, or overlapped window exists on the screen. 
 The function searches the entire screen, not just the calling application's client area.
 <p />
 This function is provided only for compatibility with 16-bit versions of Windows. It is generally not useful.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="ff14d196-d4f7-ce56-7081-162b83cf0883.htm">AppendMenu(IntPtr, UInt32, UIntPtr, String)</a>
                  </td>
                  <td>
 Appends a new item to the end of the specified menu bar, drop-down menu, submenu, or shortcut menu.
 <p />
 You can use this function to specify the content, appearance, and behavior of the menu item.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6c00ac92-8754-bcd0-9e22-a4a9b8aa1212.htm">AppendMenu(SafeHandle, UInt32, UIntPtr, String)</a>
                  </td>
                  <td>
 Appends a new item to the end of the specified menu bar, drop-down menu, submenu, or shortcut menu.
 <p />
 You can use this function to specify the content, appearance, and behavior of the menu item.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="19be5685-3153-aa19-e89b-375ad206fcb9.htm">AttachThreadInput</a>
                  </td>
                  <td>
 Attaches or detaches the input processing mechanism of one thread to that of another thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b1aeb941-fd1f-17a4-9861-beddb6c15566.htm">BeginDeferWindowPos</a>
                  </td>
                  <td>
 Allocates memory for a multiple-window- position structure and returns the handle to the structure.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="25db8f30-2034-2827-0c33-4d32817358ff.htm">BeginPaint(HandleRef, PaintStruct<span id="LST44177590_4" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Prepares the specified window for painting 
 and fills a <a href="0be8a7be-62bf-e15d-13ea-b18419a1bb79.htm">PaintStruct</a> structure with information about the painting.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="36d78bbb-502f-a8ef-dfaf-a8a9c6221966.htm">BeginPaint(IntPtr, PaintStruct<span id="LST44177590_5" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Prepares the specified window for painting 
 and fills a <a href="0be8a7be-62bf-e15d-13ea-b18419a1bb79.htm">PaintStruct</a> structure with information about the painting.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4348eb08-f06f-2840-a5ac-7fd90bf9b46d.htm">BeginPaint(SafeHandle, PaintStruct<span id="LST44177590_6" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Prepares the specified window for painting 
 and fills a <a href="0be8a7be-62bf-e15d-13ea-b18419a1bb79.htm">PaintStruct</a> structure with information about the painting.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7df39307-ea79-1bc6-3292-f06eea1645ab.htm">BlockInput</a>
                  </td>
                  <td>
 Blocks keyboard and mouse input events from reaching applications.
 <p />
 Note that only the thread that blocked input can successfully unblock input.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="60562a80-bf44-fc10-a9aa-e45979b1d225.htm">BringWindowToTop(IntPtr)</a>
                  </td>
                  <td>
 Brings the specified window to the top of the Z order. If the window is a top-level window, it is activated.
 <p />
 If the window is a child window, the top-level parent window associated with the child window is activated.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fa02383f-5a58-3f1a-1081-57c6b95864f0.htm">BringWindowToTop(SafeHandle)</a>
                  </td>
                  <td>
 Brings the specified window to the top of the Z order. If the window is a top-level window, it is activated.
 <p />
 If the window is a child window, the top-level parent window associated with the child window is activated.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0edd0433-a32f-0405-da47-35bacee3107f.htm">BroadcastSystemMessage(BroadcastSystemMessageFlags, BroadcastSystemMessageInfo<span id="LST44177590_7" data-languageSpecificText="cpp=%"></span>, WindowMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends a message to the specified recipients. 
 <p />
 The recipients can be applications, installable drivers, network drivers, 
 system-level device drivers, or any combination of these system components.
 <p />
 To receive additional information if the request is defined, 
 use the <a href="f8852aac-5651-7c0b-eea5-b5978d710ebc.htm">BroadcastSystemMessageEx(BroadcastSystemMessageFlags, BroadcastSystemMessageInfo<span id="LST44177590_8" data-languageSpecificText="cpp=%"></span>, WindowMessages, IntPtr, IntPtr, BroadcastSystemMessageExInfo<span id="LST44177590_9" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a58cae5d-5964-af31-dfb6-56921128c9fb.htm">BroadcastSystemMessage(BroadcastSystemMessageFlags, BroadcastSystemMessageInfo<span id="LST44177590_10" data-languageSpecificText="cpp=%"></span>, UInt32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends a message to the specified recipients. 
 <p />
 The recipients can be applications, installable drivers, network drivers, 
 system-level device drivers, or any combination of these system components.
 <p />
 To receive additional information if the request is defined, 
 use the <a href="f8852aac-5651-7c0b-eea5-b5978d710ebc.htm">BroadcastSystemMessageEx(BroadcastSystemMessageFlags, BroadcastSystemMessageInfo<span id="LST44177590_11" data-languageSpecificText="cpp=%"></span>, WindowMessages, IntPtr, IntPtr, BroadcastSystemMessageExInfo<span id="LST44177590_12" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f8852aac-5651-7c0b-eea5-b5978d710ebc.htm">BroadcastSystemMessageEx(BroadcastSystemMessageFlags, BroadcastSystemMessageInfo<span id="LST44177590_13" data-languageSpecificText="cpp=%"></span>, WindowMessages, IntPtr, IntPtr, BroadcastSystemMessageExInfo<span id="LST44177590_14" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends a message to the specified recipients. 
 <p />
 The recipients can be applications, installable drivers, network drivers, 
 system-level device drivers, or any combination of these system components.
 <p />
 This function is similar to <a href="0edd0433-a32f-0405-da47-35bacee3107f.htm">BroadcastSystemMessage(BroadcastSystemMessageFlags, BroadcastSystemMessageInfo<span id="LST44177590_15" data-languageSpecificText="cpp=%"></span>, WindowMessages, IntPtr, IntPtr)</a> except that this function can 
 return more information from the recipients
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5143887a-abdf-5372-7975-9a51c9f600b0.htm">BroadcastSystemMessageEx(BroadcastSystemMessageFlags, BroadcastSystemMessageInfo<span id="LST44177590_16" data-languageSpecificText="cpp=%"></span>, UInt32, IntPtr, IntPtr, BroadcastSystemMessageExInfo<span id="LST44177590_17" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends a message to the specified recipients. 
 <p />
 The recipients can be applications, installable drivers, network drivers, 
 system-level device drivers, or any combination of these system components.
 <p />
 This function is similar to <a href="0edd0433-a32f-0405-da47-35bacee3107f.htm">BroadcastSystemMessage(BroadcastSystemMessageFlags, BroadcastSystemMessageInfo<span id="LST44177590_18" data-languageSpecificText="cpp=%"></span>, WindowMessages, IntPtr, IntPtr)</a> except that this function can 
 return more information from the recipients
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c35585fb-78f4-d71f-da7e-177ed0e7cae6.htm">CalculatePopupWindowPosition</a>
                  </td>
                  <td>
 Calculates an appropriate pop-up window position using the specified anchor point, 
 pop-up window size, flags, and the optional exclude rectangle.
 <p />
 When the specified pop-up window size is smaller than the desktop window size, 
 use the <a href="c35585fb-78f4-d71f-da7e-177ed0e7cae6.htm">CalculatePopupWindowPosition(NativePoint<span id="LST44177590_19" data-languageSpecificText="cpp=%"></span>, NativeSize<span id="LST44177590_20" data-languageSpecificText="cpp=%"></span>, PopupWindowPositionFlags, NativeRectangle<span id="LST44177590_21" data-languageSpecificText="cpp=%"></span>, NativeSize<span id="LST44177590_22" data-languageSpecificText="cpp=%"></span>)</a> function to ensure that the pop-up window is fully visible 
 on the desktop window, regardless of the specified anchor point.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e3234753-12b0-bfdf-ef00-9690be4a9744.htm">CallNextHookEx(IntPtr, Int32, IntPtr, KeyboardLowLevelHookStruct<span id="LST44177590_23" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Passes the hook information to the next hook procedure in the current hook chain.
 <p />
 A hook procedure can call this function either before or after processing the hook information.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5211abd8-0d18-055e-689d-d62db09f4bdf.htm">CallNextHookEx(IntPtr, Int32, IntPtr, MouseLowLevelHookStruct<span id="LST44177590_24" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Passes the hook information to the next hook procedure in the current hook chain.
 <p />
 A hook procedure can call this function either before or after processing the hook information.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1849b45e-fba6-435c-9c52-20c500f397a2.htm">CallNextHookEx(IntPtr, Int32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Passes the hook information to the next hook procedure in the current hook chain.
 <p />
 A hook procedure can call this function either before or after processing the hook information.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b340d256-fb1c-cc46-3e9c-555f7c7c5d2f.htm">ChangeDisplaySettings</a>
                  </td>
                  <td>
 Changes the settings of the default display device to the specified graphics mode.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cd19adfa-5cd7-e284-1f9e-8ef4f9d7db51.htm">ChangeDisplaySettingsEx</a>
                  </td>
                  <td>
 Changes the settings of the specified display device to the specified graphics mode.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ef80e741-8161-46d6-8c6e-cacbd90e7226.htm">ChangeWindowMessageFilterEx(HandleRef, EditControlMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_25" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified edit-control (typically a <span class="noLink">TextBox</span>).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bf6c1c24-fbcd-f457-af98-f7d33ec43b4d.htm">ChangeWindowMessageFilterEx(HandleRef, ListBoxMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_26" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified <span class="noLink">ListBox</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ff9c1dbe-33ea-3c7f-7769-12fca3110616.htm">ChangeWindowMessageFilterEx(HandleRef, ListViewMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_27" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified <span class="noLink">ListView</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="142a11f3-86c7-a748-9e29-8b67a7676ab0.htm">ChangeWindowMessageFilterEx(HandleRef, ProgressBarMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_28" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified <span class="noLink">ProgressBar</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="27e624fe-955e-ca14-2793-ec5197f0030f.htm">ChangeWindowMessageFilterEx(HandleRef, ToolbarMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_29" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified ToolBar control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f0aa07ca-e8e7-9d38-2d2e-e5159539ec8b.htm">ChangeWindowMessageFilterEx(HandleRef, WindowMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_30" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dbec345d-0047-3205-3816-de0d6315f5dc.htm">ChangeWindowMessageFilterEx(HandleRef, UInt32, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_31" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="00022218-e7ce-30f2-7c3d-779ac72aa7f9.htm">ChangeWindowMessageFilterEx(IntPtr, EditControlMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_32" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified edit-control (typically a <span class="noLink">TextBox</span>).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="204ae56a-e323-9458-35a7-e14010233bf7.htm">ChangeWindowMessageFilterEx(IntPtr, ListBoxMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_33" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified <span class="noLink">ListBox</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="794dc3f6-3cda-5464-9ddd-4847fa82b864.htm">ChangeWindowMessageFilterEx(IntPtr, ListViewMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_34" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified <span class="noLink">ListView</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="db0a9c1e-9cfe-e44e-99b4-7bf3b42b8125.htm">ChangeWindowMessageFilterEx(IntPtr, ProgressBarMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_35" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified <span class="noLink">ProgressBar</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e7690d93-c628-0cc2-b7ba-1dafa541872f.htm">ChangeWindowMessageFilterEx(IntPtr, ToolbarMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_36" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified ToolBar control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="275b9ea8-15a9-df87-5899-7dc4d07d03a6.htm">ChangeWindowMessageFilterEx(IntPtr, WindowMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_37" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4fbfe403-b930-03cc-d0ac-c75c4711bd04.htm">ChangeWindowMessageFilterEx(IntPtr, UInt32, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_38" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6b0f10aa-d88e-0d5b-0cbc-7deecc07e1bc.htm">ChangeWindowMessageFilterEx(SafeHandle, EditControlMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_39" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified edit-control (typically a <span class="noLink">TextBox</span>).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b87c287b-9880-6f34-dca5-772411c1b049.htm">ChangeWindowMessageFilterEx(SafeHandle, ListBoxMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_40" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified <span class="noLink">ListBox</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1466c69a-71cc-95ef-03c6-ee80a191263f.htm">ChangeWindowMessageFilterEx(SafeHandle, ListViewMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_41" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified <span class="noLink">ListView</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="69af00e4-6588-18c8-052b-3003f4efba01.htm">ChangeWindowMessageFilterEx(SafeHandle, ProgressBarMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_42" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified <span class="noLink">ProgressBar</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="222ba745-98d3-baed-9588-93e8e3648e8d.htm">ChangeWindowMessageFilterEx(SafeHandle, ToolbarMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_43" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified ToolBar control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="756696f6-68f1-3cd0-df46-45be52b55ea9.htm">ChangeWindowMessageFilterEx(SafeHandle, WindowMessages, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_44" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1ec7dfde-950c-898b-c4ec-8a291e92091c.htm">ChangeWindowMessageFilterEx(SafeHandle, UInt32, ChangeWindowMessageFilterExAction, ChangeFilter<span id="LST44177590_45" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Modifies the <span class="code">User Interface Privilege Isolation</span> (<span class="code">UIPI</span>) message filter 
 for a specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="84bca3f3-ed6d-8273-d414-7c36554eff84.htm">ChildWindowFromPoint(IntPtr, NativePoint)</a>
                  </td>
                  <td>
 Determines which, if any, of the child windows belonging to a parent window contains the specified point. 
 <p />
 The search is restricted to immediate child windows. Grandchildren, and deeper descendant windows are not searched.
 <p />
 To skip certain child windows, use the <a href="e5247fb3-ca55-b23c-c37f-27c093a42b44.htm">ChildWindowFromPointEx(IntPtr, NativePoint, WindowSkipOptions)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="33083b4f-aad4-9c11-112a-a3572bfe4b26.htm">ChildWindowFromPoint(IntPtr, Point)</a>
                  </td>
                  <td>
 Determines which, if any, of the child windows belonging to a parent window contains the specified point. 
 <p />
 The search is restricted to immediate child windows. Grandchildren, and deeper descendant windows are not searched.
 <p />
 To skip certain child windows, use the <a href="e5247fb3-ca55-b23c-c37f-27c093a42b44.htm">ChildWindowFromPointEx(IntPtr, NativePoint, WindowSkipOptions)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e5247fb3-ca55-b23c-c37f-27c093a42b44.htm">ChildWindowFromPointEx(IntPtr, NativePoint, WindowSkipOptions)</a>
                  </td>
                  <td>
 Determines which, if any, of the child windows belonging to the specified parent window contains the specified point. 
 <p />
 The function can ignore invisible, disabled, and transparent child windows. 
 <p />
 The search is restricted to immediate child windows. Grandchildren and deeper descendants are not searched.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e352cb19-8900-8b03-271c-b885f529276f.htm">ChildWindowFromPointEx(IntPtr, Point, WindowSkipOptions)</a>
                  </td>
                  <td>
 Determines which, if any, of the child windows belonging to the specified parent window contains the specified point. 
 <p />
 The function can ignore invisible, disabled, and transparent child windows. 
 <p />
 The search is restricted to immediate child windows. Grandchildren and deeper descendants are not searched.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="992cd40e-792b-12bc-c1df-235f7049b82b.htm">ClientToScreen(IntPtr, NativePoint<span id="LST44177590_46" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the client-area coordinates of a specified point to screen coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e1a0ada3-1ef7-fc07-86f6-0b4a5ad84f2f.htm">ClientToScreen(IntPtr, Point<span id="LST44177590_47" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the client-area coordinates of a specified point to screen coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6e293ee6-f0bf-7f11-3732-b6db2391109d.htm">ClientToScreen(SafeHandle, NativePoint<span id="LST44177590_48" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the client-area coordinates of a specified point to screen coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5302401c-a57e-4360-a71f-0b61d1aa3f24.htm">ClientToScreen(SafeHandle, Point<span id="LST44177590_49" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the client-area coordinates of a specified point to screen coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="04805a39-435b-41b8-1adf-a95a26eb157f.htm">ClipCursor</a>
                  </td>
                  <td>
 Confines the cursor to a rectangular area on the screen. 
 <p />
 If a subsequent cursor position (set by the <a href="dbd36574-5258-5a12-0ef9-c4f2abf3b89d.htm">SetCursorPos(Int32, Int32)</a> function or the mouse) lies outside the rectangle, 
 the system automatically adjusts the position to keep the cursor inside the rectangular area.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9fa2c90a-65bc-aa81-8d0d-2c3490d8ec21.htm">CloseClipboard</a>
                  </td>
                  <td>
 Closes the clipboard.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4dcac85d-0ef0-4f21-c2e2-dd201ca7e7af.htm">CloseDesktop</a>
                  </td>
                  <td>
 Closes an open handle to a desktop object.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3900cc84-bc5e-d3f9-c88c-739db77a06d2.htm">CloseWindow</a>
                  </td>
                  <td>
 Minimizes (but does not destroy) the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="69fd9d6c-98a3-b5bd-68fd-9c14851e1a39.htm">CloseWindowStation</a>
                  </td>
                  <td>
 Closes an open window station handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="250c2a0a-2f92-2979-94cc-2fdaf48f7703.htm">CopyIcon</a>
                  </td>
                  <td>
 Copies the specified icon from another module to the current module.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="aeeb8a83-9e59-ec7c-cda2-e2a7acd026c3.htm">CopyRect(NativeRectangle<span id="LST44177590_50" data-languageSpecificText="cpp=%"></span>, NativeRectangle<span id="LST44177590_51" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Copies the coordinates of one <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> to another.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6ea82b08-100c-77f3-cd1b-1fa1cdb407ff.htm">CopyRect(Rectangle<span id="LST44177590_52" data-languageSpecificText="cpp=%"></span>, Rectangle<span id="LST44177590_53" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Copies the coordinates of one <span class="noLink">Rectangle</span> to another.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c15995ea-af68-10fa-892e-9d2d6e3b1482.htm">CountClipboardFormats</a>
                  </td>
                  <td>
 Retrieves the number of different data formats currently on the clipboard.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="26171043-a766-3552-f459-cbe0f523b9d9.htm">CreateCaret(IntPtr, IntPtr, Int32, Int32)</a>
                  </td>
                  <td>
 Creates a new shape for the system caret and assigns ownership of the caret to the specified window.
 <p />
 The caret shape can be a line, a block, or a bitmap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="48262658-52c2-b32d-82d2-c1c68fe7c86e.htm">CreateCaret(SafeHandle, IntPtr, Int32, Int32)</a>
                  </td>
                  <td>
 Creates a new shape for the system caret and assigns ownership of the caret to the specified window.
 <p />
 The caret shape can be a line, a block, or a bitmap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="145c9d6a-834e-5962-188d-504c64efed95.htm">CreateCursor</a>
                  </td>
                  <td>
 Creates a cursor having the specified size, bit patterns, and hot spot.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d84f8cc1-d8bd-e3ad-c7be-48a14982089c.htm">CreateIconFromResource</a>
                  </td>
                  <td>
 Creates an icon or cursor from resource bits describing the icon.
 <p />
 To specify a desired height or width, use the <a href="6ee9862e-d7ec-fc90-9c8d-0528a2c64bcc.htm">CreateIconFromResourceEx(Byte<span id="LST44177590_54" data-languageSpecificText="cpp=%"></span>, UInt32, Boolean, UInt32, Int32, Int32, CreateIconFromResourceFlags)</a> function
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6ee9862e-d7ec-fc90-9c8d-0528a2c64bcc.htm">CreateIconFromResourceEx</a>
                  </td>
                  <td>
 Creates an icon or cursor from resource bits describing the icon.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7f852402-3128-0d12-fd39-59602a940dd3.htm">CreateIconIndirect</a>
                  </td>
                  <td>
 Creates an icon or cursor from an <a href="79cf570d-11f2-71ff-f4b4-dfda764428ff.htm">IconInfo</a> structure.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1056b70d-b034-af8d-f42b-73cb20d7ad91.htm">CreateMenu</a>
                  </td>
                  <td>
 Creates a menu.
 <p />
 The menu is initially empty, but it can be filled with menu items by using the 
 <a href="e8dab2e5-2dbe-7e5e-2f7c-2d24141d9e3b.htm">InsertMenuItem(IntPtr, Int32, Boolean, MenuItemInfo<span id="LST44177590_55" data-languageSpecificText="cpp=%"></span>)</a>, <a href="ff14d196-d4f7-ce56-7081-162b83cf0883.htm">AppendMenu(IntPtr, UInt32, UIntPtr, String)</a>, and <a href="e8dab2e5-2dbe-7e5e-2f7c-2d24141d9e3b.htm">InsertMenuItem(IntPtr, Int32, Boolean, MenuItemInfo<span id="LST44177590_56" data-languageSpecificText="cpp=%"></span>)</a> functions. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d31d162b-3aa5-c567-452a-d6e9607da861.htm">CreateWindowEx</a>
                  </td>
                  <td>
 Creates an overlapped, pop-up, or child window with an extended window style. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2b0a6d16-2216-12f1-f727-1fbe88036b5f.htm">DefDlgProc</a>
                  </td>
                  <td>
 Calls the default dialog box window procedure to provide default processing for 
 any window messages that a dialog box with a private window class does not process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7641b14e-ee3e-75b6-7122-de2ac23d8fe8.htm">DeferWindowPos</a>
                  </td>
                  <td>
 Updates the specified multiple-window – position structure for the specified window. 
 <p />
 The function then returns a handle to the updated structure. 
 <p />
 The <a href="7641b14e-ee3e-75b6-7122-de2ac23d8fe8.htm">DeferWindowPos(IntPtr, IntPtr, IntPtr, Int32, Int32, Int32, Int32, SetWindowPosFlags)</a> function uses the information in this structure to 
 change the position and size of a number of windows simultaneously. 
 The <a href="b1aeb941-fd1f-17a4-9861-beddb6c15566.htm">BeginDeferWindowPos(Int32)</a> function creates the structure.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7c75b0f4-c20b-c2fa-3162-6525e956f9a2.htm">DefFrameProc</a>
                  </td>
                  <td>
 Provides default processing for any window messages that the window procedure of a 
 multiple-document interface (MDI) frame window does not process. 
 <p />
 All window messages that are not explicitly processed by the window procedure must be 
 passed to the <a href="7c75b0f4-c20b-c2fa-3162-6525e956f9a2.htm">DefFrameProc(IntPtr, IntPtr, UInt32, IntPtr, IntPtr)</a> function, 
 not the <a href="092836d2-d95f-a133-ec6a-23de2122c315.htm">DefWindowProc(IntPtr, UInt32, IntPtr, IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b6e2ca5f-ca97-afdf-bd71-9c53e53bbf02.htm">DefMDIChildProc</a>
                  </td>
                  <td>
 Provides default processing for any window message that the window procedure of a multiple-document interface (MDI) child window does not process. 
 <p />
 A window message not processed by the window procedure must be passed to the <a href="b6e2ca5f-ca97-afdf-bd71-9c53e53bbf02.htm">DefMDIChildProc(IntPtr, UInt32, IntPtr, IntPtr)</a> function, 
 not to the <a href="092836d2-d95f-a133-ec6a-23de2122c315.htm">DefWindowProc(IntPtr, UInt32, IntPtr, IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7472a9c6-b033-583a-ce3a-9deaba4138d4.htm">DefRawInputProc</a>
                  </td>
                  <td>
 Calls the default raw input procedure to provide default processing for any raw input messages that an application does not process. 
 <p />
 This function ensures that every message is processed. 
 <p /><a href="7472a9c6-b033-583a-ce3a-9deaba4138d4.htm">DefRawInputProc(<span id="LST44177590_57" data-languageSpecificText="cpp=array&lt;"></span>RawInput<span id="LST44177590_58" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, UInt32)</a> is called with the same parameters received by the window procedure.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="092836d2-d95f-a133-ec6a-23de2122c315.htm">DefWindowProc</a>
                  </td>
                  <td>
 Calls the default window procedure to provide default processing for any window messages that an application does not process. 
 <p />
 This function ensures that every message is processed. 
 <p /><a href="092836d2-d95f-a133-ec6a-23de2122c315.htm">DefWindowProc(IntPtr, UInt32, IntPtr, IntPtr)</a> is called with the same parameters received by the window procedure.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="505931ff-cf22-973b-120c-dca2c9325733.htm">DeleteMenu(IntPtr, UInt32, MenuPosition)</a>
                  </td>
                  <td>
 Deletes an item from the specified menu.
 <p />
 If the menu item opens a menu or submenu, this function destroys the handle to the menu or submenu 
 and frees the memory used by the menu or submenu. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b17f5e60-0094-b469-df9b-2ccac379c013.htm">DeleteMenu(SafeHandle, UInt32, MenuPosition)</a>
                  </td>
                  <td>
 Deletes an item from the specified menu.
 <p />
 If the menu item opens a menu or submenu, this function destroys the handle to the menu or submenu 
 and frees the memory used by the menu or submenu. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3fe8a078-2bf1-91bd-e824-178d54798ed9.htm">DestroyCaret</a>
                  </td>
                  <td>
 Destroys the caret's current shape, frees the caret from the window, and removes the caret from the screen. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="52ab01b6-97e6-f595-3aac-479a568db637.htm">DestroyCursor</a>
                  </td>
                  <td>
 Destroys a cursor and frees any memory the cursor occupied.
 <p />
 Do not use this function to destroy a shared cursor.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0cc8fd14-fdfa-75e8-7ee1-9ed4ade5c762.htm">DestroyIcon</a>
                  </td>
                  <td>
 Destroys an icon and frees any memory the icon occupied.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="128722e8-5cca-1165-4c57-6b8678a4f82f.htm">DestroyMenu(IntPtr)</a>
                  </td>
                  <td>
 Destroys the specified menu and frees any memory that the menu occupies.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="67733e32-7df7-67d3-fa46-4caa3eda8106.htm">DestroyMenu(SafeHandle)</a>
                  </td>
                  <td>
 Destroys the specified menu and frees any memory that the menu occupies.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8a150e7b-3d28-a7e2-716f-5eaeb31dedae.htm">DestroyWindow(IntPtr)</a>
                  </td>
                  <td>
 Destroys the specified window.
 The function sends <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_Destroy</a> and <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_NcDestroy</a> messages to the window 
 to deactivate it and remove the keyboard focus from it.
 <p />
 The function also destroys the window's menu, flushes the thread message queue, destroys timers, 
 removes clipboard ownership, and breaks the clipboard viewer chain (if the window is at the top of the viewer chain).
 <p />
 If the specified window is a parent or owner window, 
 <a href="8a150e7b-3d28-a7e2-716f-5eaeb31dedae.htm">DestroyWindow(IntPtr)</a> automatically destroys the associated child or owned windows when 
 it destroys the parent or owner window.
 <p />
 The function first destroys child or owned windows, and then it destroys the parent or owner window.
 <p /><a href="8a150e7b-3d28-a7e2-716f-5eaeb31dedae.htm">DestroyWindow(IntPtr)</a> also destroys modeless dialog boxes created by the <span class="code">CreateDialog</span> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="12b57ef8-783b-5252-f8b5-af9b6dec61ad.htm">DestroyWindow(SafeHandle)</a>
                  </td>
                  <td>
 Destroys the specified window.
 The function sends <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_Destroy</a> and <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_NcDestroy</a> messages to the window 
 to deactivate it and remove the keyboard focus from it.
 <p />
 The function also destroys the window's menu, flushes the thread message queue, destroys timers, 
 removes clipboard ownership, and breaks the clipboard viewer chain (if the window is at the top of the viewer chain).
 <p />
 If the specified window is a parent or owner window, 
 <a href="8a150e7b-3d28-a7e2-716f-5eaeb31dedae.htm">DestroyWindow(IntPtr)</a> automatically destroys the associated child or owned windows when 
 it destroys the parent or owner window.
 <p />
 The function first destroys child or owned windows, and then it destroys the parent or owner window.
 <p /><a href="8a150e7b-3d28-a7e2-716f-5eaeb31dedae.htm">DestroyWindow(IntPtr)</a> also destroys modeless dialog boxes created by the <span class="code">CreateDialog</span> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="de1c0da4-d993-b8e2-3758-3a0b1f085abf.htm">DisableProcessWindowsGhosting</a>
                  </td>
                  <td>
 Disables the window ghosting feature for the calling GUI process. 
 <p />
 Window ghosting is a Windows Manager feature that lets the user minimize, move, 
 or close the main window of an application that is not responding.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0f6c9ba0-7fb9-79b8-7266-7b3135efc1e3.htm">DispatchMessage</a>
                  </td>
                  <td>
 Dispatches a message to a window procedure. 
 <p />
 It is typically used to dispatch a message retrieved by the <a href="ed9e3db1-536a-b946-9925-1845c781216f.htm">GetMessage(NativeMessage<span id="LST44177590_59" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32, UInt32)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5c3ee0d7-bfad-817f-12b0-aed14a3a8e75.htm">DrawEdge(IntPtr, NativeRectangle<span id="LST44177590_60" data-languageSpecificText="cpp=%"></span>, DrawEdgeType, DrawEdgeFlags)</a>
                  </td>
                  <td>
 Draws a 3D edge or flat border on the specified device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a18c5d91-5534-dc87-a3f5-2ece9b7cd49e.htm">DrawEdge(IntPtr, Rectangle<span id="LST44177590_61" data-languageSpecificText="cpp=%"></span>, DrawEdgeType, DrawEdgeFlags)</a>
                  </td>
                  <td>
 Draws a 3D edge or flat border on the specified device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d0720672-8745-02bc-f7fd-3dfd2588c2d9.htm">DrawFrameControl(IntPtr, Rectangle<span id="LST44177590_62" data-languageSpecificText="cpp=%"></span>, DrawFrameControlType, DrawFrameControlButtonFlags)</a>
                  </td>
                  <td>
 Draws a frame control of the specified type and style on the specified device context for a button.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="08ed34cf-2542-57a2-3cd0-b64740fef3a7.htm">DrawFrameControl(IntPtr, Rectangle<span id="LST44177590_63" data-languageSpecificText="cpp=%"></span>, DrawFrameControlType, DrawFrameControlCaptionType)</a>
                  </td>
                  <td>
 Draws a frame control of the specified type and style on the specified device context for a button.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4097b5ef-e237-3bfb-9686-2eb4b0bdd938.htm">DrawFrameControl(IntPtr, Rectangle<span id="LST44177590_64" data-languageSpecificText="cpp=%"></span>, DrawFrameControlType, DrawFrameControlMenuType)</a>
                  </td>
                  <td>
 Draws a frame control of the specified type and style on the specified device context for a button.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="35ab07b7-7f73-c944-c423-02936a11cf18.htm">DrawFrameControl(IntPtr, Rectangle<span id="LST44177590_65" data-languageSpecificText="cpp=%"></span>, DrawFrameControlType, DrawFrameControlScrollFlags)</a>
                  </td>
                  <td>
 Draws a frame control of the specified type and style on the specified device context for a button.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1aefe8da-bf6a-77f8-0f85-f503be7bdf69.htm">EmptyClipboard</a>
                  </td>
                  <td>
 Empties the clipboard and frees handles to data in the clipboard. 
 <p />
 The function then assigns ownership of the clipboard to the window that currently has the clipboard open.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6fb5e79c-2df9-9a7c-3881-4cec24e095fc.htm">EnableMenuItem(IntPtr, UInt32, Int32)</a>
                  </td>
                  <td>
 Sets the state of the specified menu item.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bb527a5f-38bb-b4fa-a56a-4730239ece4b.htm">EnableMenuItem(SafeHandle, UInt32, Int32)</a>
                  </td>
                  <td>
 Sets the state of the specified menu item.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a3595ab5-daf9-9b88-22ec-2d6424438ce4.htm">EnableMouseInPointer</a>
                  </td>
                  <td>
 Enables the mouse to act as a pointer input device and send WM_POINTER* messages.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8deba716-4c0e-431d-bf04-87cc9b64e97a.htm">EnableNonClientDpiScaling</a>
                  </td>
                  <td>
 In high-DPI displays, enables automatic display scaling of the non-client area portions of the specified top-level window. 
 Must be called during the initialization of that window.
 <p />
 Note: Applications running at a DPI_AWARENESS_CONTEXT of DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 
 automatically scale their non-client areas by default. They do not need to call this function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="20387990-9752-baee-a6fa-dd79758d20cb.htm">EnableWindow(IntPtr, Boolean)</a>
                  </td>
                  <td>
 Enables or disables mouse and keyboard input to the specified window or control.
 <p />
 When input is disabled, the window does not receive input such as mouse clicks and key presses. 
 <p />
 When input is enabled, the window receives all input.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ec9704eb-4b38-cc32-f400-58093d707a58.htm">EnableWindow(SafeHandle, Boolean)</a>
                  </td>
                  <td>
 Enables or disables mouse and keyboard input to the specified window or control.
 <p />
 When input is disabled, the window does not receive input such as mouse clicks and key presses. 
 <p />
 When input is enabled, the window receives all input.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c946a941-92f7-55b7-f53f-066cce4f10a7.htm">EndDeferWindowPos</a>
                  </td>
                  <td>
 Simultaneously updates the position and size of one or more windows in a single screen-refreshing cycle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="73b0cdae-cfda-054d-7c84-56696a1505b3.htm">EndMenu</a>
                  </td>
                  <td>
 Ends the calling thread's active menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5a9389a2-dd03-f01f-9fad-640cdb72ff53.htm">EndPaint(HandleRef, PaintStruct<span id="LST44177590_66" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Marks the end of painting in the specified window. 
 <p />
 This function is required for each call to the <a href="36d78bbb-502f-a8ef-dfaf-a8a9c6221966.htm">BeginPaint(IntPtr, PaintStruct<span id="LST44177590_67" data-languageSpecificText="cpp=%"></span>)</a> function, 
 but only after painting is complete.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6e23914e-b6c8-ed1b-da25-bf50ba379832.htm">EndPaint(IntPtr, PaintStruct<span id="LST44177590_68" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Marks the end of painting in the specified window. 
 <p />
 This function is required for each call to the <a href="36d78bbb-502f-a8ef-dfaf-a8a9c6221966.htm">BeginPaint(IntPtr, PaintStruct<span id="LST44177590_69" data-languageSpecificText="cpp=%"></span>)</a> function, 
 but only after painting is complete.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3a1653ea-7834-312a-a273-7c6495b3788b.htm">EndPaint(SafeHandle, PaintStruct<span id="LST44177590_70" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Marks the end of painting in the specified window. 
 <p />
 This function is required for each call to the <a href="36d78bbb-502f-a8ef-dfaf-a8a9c6221966.htm">BeginPaint(IntPtr, PaintStruct<span id="LST44177590_71" data-languageSpecificText="cpp=%"></span>)</a> function, 
 but only after painting is complete.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="711bed1a-02e2-8861-5758-6192da41c583.htm">EndTask</a>
                  </td>
                  <td>
 Forcibly closes the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4c64b559-7107-d853-9cc0-43bc945ccf6e.htm">EnumChildWindows(IntPtr, Delegates<span id="LST44177590_72" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EnumChildWindowsProc, IntPtr)</a>
                  </td>
                  <td>
 Enumerates the child windows that belong to the specified parent window by passing the handle to each child window, 
 in turn, to an application-defined callback function.
 <p /><a href="4c64b559-7107-d853-9cc0-43bc945ccf6e.htm">EnumChildWindows(IntPtr, Delegates<span id="LST44177590_73" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EnumChildWindowsProc, IntPtr)</a> continues until the last child window is enumerated 
 or the callback function returns <span class="keyword"><span id="LST44177590_74" data-languageSpecificText="vb=False|nu=false"></span></span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4c8d80fc-5bb5-d017-c22c-c4f5a00c71da.htm">EnumChildWindows(SafeHandle, Delegates<span id="LST44177590_75" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EnumChildWindowsProc, IntPtr)</a>
                  </td>
                  <td>
 Enumerates the child windows that belong to the specified parent window by passing the handle to each child window, 
 in turn, to an application-defined callback function.
 <p /><a href="4c64b559-7107-d853-9cc0-43bc945ccf6e.htm">EnumChildWindows(IntPtr, Delegates<span id="LST44177590_76" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EnumChildWindowsProc, IntPtr)</a> continues until the last child window is enumerated 
 or the callback function returns <span class="keyword"><span id="LST44177590_77" data-languageSpecificText="vb=False|nu=false"></span></span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="516a0ea6-ea1d-97ff-2403-97c987166559.htm">EnumDesktops</a>
                  </td>
                  <td>
 Enumerates all desktops associated with the specified window station of the calling process. 
 <p />
 The function passes the name of each desktop, in turn, to an application-defined callback function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="57814601-f4bb-cb7f-0ba7-8845504e00a3.htm">EnumDesktopWindows</a>
                  </td>
                  <td>
 Enumerates all top-level windows associated with the specified desktop.
 <p />
 It passes the handle to each window, in turn, to an application-defined callback function
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="48b9d4c3-8e44-fb5c-1508-e015a8eeff48.htm">EnumDisplayDevices</a>
                  </td>
                  <td>
 Retrieves information about the display devices in the current session.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="81468e88-5eac-e9e3-b65c-8d0fba9791d4.htm">EnumDisplayMonitors</a>
                  </td>
                  <td>
 Enumerates display monitors (including invisible pseudo-monitors associated with the mirroring drivers) 
 that intersect a region formed by the intersection of a specified clipping rectangle 
 and the visible region of a device context.
 <p /><a href="81468e88-5eac-e9e3-b65c-8d0fba9791d4.htm">EnumDisplayMonitors(IntPtr, IntPtr, Delegates<span id="LST44177590_78" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EnumMonitorProc, IntPtr)</a> calls an application-defined <a href="307f95e8-de8c-d713-0999-097ce53220eb.htm">Delegates<span id="LST44177590_79" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EnumMonitorProc</a> callback function once 
 for each monitor that is enumerated.
 <p />
 Note that <span class="code">GetSystemMetrics</span> (<span class="code">SM_CMONITORS</span>) counts only the display monitors.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bf210651-39ac-ccd7-9554-171a1c6aa954.htm">EnumDisplaySettings(String, EnumDisplaySettingsMode, DevMode<span id="LST44177590_80" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves information about one of the graphics modes for a display device.
 <p />
 To retrieve information for all the graphics modes of a display device, make a series of calls to this function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a2532b04-7256-908b-85a9-3ba3b844b0b4.htm">EnumDisplaySettings(String, Int32, DevMode<span id="LST44177590_81" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves information about one of the graphics modes for a display device.
 <p />
 To retrieve information for all the graphics modes of a display device, make a series of calls to this function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6f0a6dc3-2189-fff2-6e72-20ae75397146.htm">EnumThreadWindows</a>
                  </td>
                  <td>
 Enumerates all nonchild windows associated with a thread by passing the handle to each window, 
 in turn, to an application-defined callback function.
 <p /><a href="6f0a6dc3-2189-fff2-6e72-20ae75397146.htm">EnumThreadWindows(UInt32, Delegates<span id="LST44177590_82" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EnumThreadWindowsProc, IntPtr)</a> continues until the last window is enumerated 
 or the callback function returns <span class="keyword"><span id="LST44177590_83" data-languageSpecificText="vb=False|nu=false"></span></span>.
 <p />
 To enumerate child windows of a particular window, use the <a href="4c64b559-7107-d853-9cc0-43bc945ccf6e.htm">EnumChildWindows(IntPtr, Delegates<span id="LST44177590_84" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EnumChildWindowsProc, IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6bbeeec5-4904-d90c-34c6-78bbd820076c.htm">EnumWindows</a>
                  </td>
                  <td>
 Enumerates all top-level windows on the screen by passing the handle to each window, in turn, 
 to an application-defined callback function.
 <p /><a href="6bbeeec5-4904-d90c-34c6-78bbd820076c.htm">EnumWindows(Delegates<span id="LST44177590_85" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EnumWindowsProc, IntPtr)</a> continues until the last top-level window is enumerated 
 or the callback function returns <span class="keyword"><span id="LST44177590_86" data-languageSpecificText="vb=False|nu=false"></span></span>. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ec82efa9-5da1-eee1-1ac9-0aef6b40067f.htm">EqualRect(NativeRectangle<span id="LST44177590_87" data-languageSpecificText="cpp=%"></span>, NativeRectangle<span id="LST44177590_88" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether the two specified <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> are equal 
 by comparing the coordinates of their upper-left and lower-right corners.
 <p />
 Note that the <a href="ec82efa9-5da1-eee1-1ac9-0aef6b40067f.htm">EqualRect(NativeRectangle<span id="LST44177590_89" data-languageSpecificText="cpp=%"></span>, NativeRectangle<span id="LST44177590_90" data-languageSpecificText="cpp=%"></span>)</a> function does not treat empty rectangles as equal if their coordinates are different.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1f498a29-bdd9-78eb-e074-1ce2c40fd48f.htm">EqualRect(Rectangle<span id="LST44177590_91" data-languageSpecificText="cpp=%"></span>, Rectangle<span id="LST44177590_92" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether the two specified <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> are equal 
 by comparing the coordinates of their upper-left and lower-right corners.
 <p />
 Note that the <a href="ec82efa9-5da1-eee1-1ac9-0aef6b40067f.htm">EqualRect(NativeRectangle<span id="LST44177590_93" data-languageSpecificText="cpp=%"></span>, NativeRectangle<span id="LST44177590_94" data-languageSpecificText="cpp=%"></span>)</a> function does not treat empty rectangles as equal if their coordinates are different.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Equals</span>
                  </td>
                  <td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="3420fa8a-071c-f159-f197-54567acf7e0b.htm">ExcludeUpdateRgn(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 prevents drawing within invalid areas of a window by excluding an updated region in the window from a clipping region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="461f7693-2572-c4ea-8330-67d25bb3f95d.htm">ExcludeUpdateRgn(IntPtr, SafeHandle)</a>
                  </td>
                  <td>
 prevents drawing within invalid areas of a window by excluding an updated region in the window from a clipping region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a9f8c1a8-3e3b-530d-5168-efe8c9107c73.htm">ExitWindowsEx</a>
                  </td>
                  <td>
 Logs off the interactive user, shuts down the system, or shuts down and restarts the system.
 <p />
 It sends the <span class="code">WM_QUERYENDSESSION</span> message to all applications to determine if they can be terminated.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3bef922a-f2cb-b91d-a9ff-a1a168256d35.htm">FillRect(IntPtr, NativeRectangle<span id="LST44177590_95" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Fills a rectangle by using the specified brush. 
 <p />
 This function includes the left and top borders, but excludes the right and bottom borders of the rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c23fef0d-1c7a-c4dc-b05a-debbd1f5699f.htm">FillRect(IntPtr, Rectangle<span id="LST44177590_96" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Fills a rectangle by using the specified brush. 
 <p />
 This function includes the left and top borders, but excludes the right and bottom borders of the rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ff3fe470-117e-2576-4951-dfa3b15d2731.htm">FindWindow</a>
                  </td>
                  <td>
 Retrieves a handle to the top-level window whose class name and window name match the specified strings.
 <p />
 This function does not search child windows. 
 This function does not perform a case-sensitive search.
 <p />
 To search child windows, beginning with a specified child window, use the <a href="dcbd796d-7552-1b92-e3a1-67d722551c05.htm">FindWindowEx(IntPtr, IntPtr, String, String)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dcbd796d-7552-1b92-e3a1-67d722551c05.htm">FindWindowEx(IntPtr, IntPtr, String, String)</a>
                  </td>
                  <td>
 Retrieves a handle to a window whose class name and window name match the specified strings.
 <p />
 The function searches child windows, beginning with the one following the specified child window.
 <p />
 This function does not perform a case-sensitive search.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6ee5e5f3-9543-82dc-8829-a25c9000bd0b.htm">FindWindowEx(SafeHandle, SafeHandle, String, String)</a>
                  </td>
                  <td>
 Retrieves a handle to a window whose class name and window name match the specified strings.
 <p />
 The function searches child windows, beginning with the one following the specified child window.
 <p />
 This function does not perform a case-sensitive search.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c506b738-27f5-7343-e51f-966e93a297bc.htm">FlashWindowEx</a>
                  </td>
                  <td>
 Flashes the specified window.
 <p />
 It does not change the active state of the window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="63e93afa-510c-fd78-894d-08a52fadf916.htm">FrameRect(IntPtr, NativeRectangle<span id="LST44177590_97" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Draws a border around the specified rectangle by using the specified brush. 
 <p />
 The width and height of the border are always one logical unit.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="90c43d3f-47e0-4e06-313a-2a35c25fe50d.htm">FrameRect(IntPtr, Rectangle<span id="LST44177590_98" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Draws a border around the specified rectangle by using the specified brush. 
 <p />
 The width and height of the border are always one logical unit.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6434d815-83dd-00d3-16cc-12fce2c34c8b.htm">GetActiveWindow</a>
                  </td>
                  <td>
 Retrieves the window handle to the active window attached to the calling thread's message queue.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4cda0c9b-04cb-1f4f-e03f-8b782cdc6ca7.htm">GetAncestor(IntPtr, GetAncestorFlags)</a>
                  </td>
                  <td>
 Retrieves the handle to the ancestor of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="121d7a92-dc64-d9db-0e56-723ca52ac55b.htm">GetAncestor(SafeHandle, GetAncestorFlags)</a>
                  </td>
                  <td>
 Retrieves the handle to the ancestor of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e9bef362-99bc-76df-4c8a-da5c37f54826.htm">GetAsyncKeyState(Int32)</a>
                  </td>
                  <td>
 Determines whether a key is up or down at the time the function is called, 
 and whether the key was pressed after a previous call to <a href="e9bef362-99bc-76df-4c8a-da5c37f54826.htm">GetAsyncKeyState(Int32)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="99c39d35-0656-2b2d-a2de-f5759b4beb22.htm">GetAsyncKeyState(Keys)</a>
                  </td>
                  <td>
 Determines whether a key is up or down at the time the function is called, 
 and whether the key was pressed after a previous call to <a href="e9bef362-99bc-76df-4c8a-da5c37f54826.htm">GetAsyncKeyState(Int32)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d334c87f-df20-bb4e-f84a-28ed6afc4576.htm">GetAwarenessFromDpiAwarenessContext</a>
                  </td>
                  <td>
 Retrieves the <a href="0158674c-ea1b-0390-f241-55ed83b8db7a.htm">DpiAwareness</a> value from a DPI_AWARENESS_CONTEXT.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ee2584bf-7b0c-43db-c63c-a98e91a50a43.htm">GetCapture</a>
                  </td>
                  <td>
 Retrieves a handle to the window (if any) that has captured the mouse. 
 <p />
 Only one window at a time can capture the mouse; 
 this window receives mouse input whether or not the cursor is within its borders.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8c8e7011-f6d2-b957-a738-929f3507e38d.htm">GetCaretBlinkTime</a>
                  </td>
                  <td>
 Retrieves the time required to invert the caret's pixels. The user can set this value.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3ebe2696-49ce-8b9d-23fc-60b2d72bbdba.htm">GetClassLong(HandleRef, ClassLongValues)</a>
                  </td>
                  <td>
 Retrieves the specified 32-bit (DWORD) value from the WNDCLASSEX structure associated with the specified window.
 <p /><p />
 Note: This function has been superseded by the <a href="2aa7ff05-ffaa-397c-5082-375cf65b9050.htm">GetClassLongPtr(IntPtr, ClassLongValues)</a> function. 
 <p />
 To write code that is compatible with both 32-bit and 64-bit versions of Windows, 
 use <a href="2aa7ff05-ffaa-397c-5082-375cf65b9050.htm">GetClassLongPtr(IntPtr, ClassLongValues)</a>. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dc532445-9445-bce8-460a-f3e4412ae876.htm">GetClassLong(IntPtr, ClassLongValues)</a>
                  </td>
                  <td>
 Retrieves the specified 32-bit (DWORD) value from the WNDCLASSEX structure associated with the specified window.
 <p /><p />
 Note: This function has been superseded by the <a href="2aa7ff05-ffaa-397c-5082-375cf65b9050.htm">GetClassLongPtr(IntPtr, ClassLongValues)</a> function. 
 <p />
 To write code that is compatible with both 32-bit and 64-bit versions of Windows, 
 use <a href="2aa7ff05-ffaa-397c-5082-375cf65b9050.htm">GetClassLongPtr(IntPtr, ClassLongValues)</a>. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8c04c6b0-ec06-c7a9-c35c-98fd44063c17.htm">GetClassLong(SafeHandle, ClassLongValues)</a>
                  </td>
                  <td>
 Retrieves the specified 32-bit (DWORD) value from the WNDCLASSEX structure associated with the specified window.
 <p /><p />
 Note: This function has been superseded by the <a href="2aa7ff05-ffaa-397c-5082-375cf65b9050.htm">GetClassLongPtr(IntPtr, ClassLongValues)</a> function. 
 <p />
 To write code that is compatible with both 32-bit and 64-bit versions of Windows, 
 use <a href="2aa7ff05-ffaa-397c-5082-375cf65b9050.htm">GetClassLongPtr(IntPtr, ClassLongValues)</a>. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f341e24d-3f45-4de3-bc15-5e3001462476.htm">GetClassLongPtr(HandleRef, ClassLongValues)</a>
                  </td>
                  <td>
 Retrieves the specified value from the WNDCLASSEX structure associated with the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2aa7ff05-ffaa-397c-5082-375cf65b9050.htm">GetClassLongPtr(IntPtr, ClassLongValues)</a>
                  </td>
                  <td>
 Retrieves the specified value from the WNDCLASSEX structure associated with the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1b39ad99-cc39-8a9e-5b65-d6cb3fd27c9c.htm">GetClassLongPtr(SafeHandle, ClassLongValues)</a>
                  </td>
                  <td>
 Retrieves the specified value from the WNDCLASSEX structure associated with the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ae61d5c9-8fea-3c91-8aa2-fda45f0552ae.htm">GetClassName(IntPtr, StringBuilder, Int32)</a>
                  </td>
                  <td>
 Retrieves the name of the class to which the specified window belongs.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="754a0ded-653b-da45-22de-030d707e34fa.htm">GetClassName(SafeHandle, StringBuilder, Int32)</a>
                  </td>
                  <td>
 Retrieves the name of the class to which the specified window belongs.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c083ab07-4687-2f44-e22e-024723cb8f7c.htm">GetClientRect(IntPtr, NativeRectangle<span id="LST44177590_99" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the coordinates of a window's client area.
 <p />
 The client coordinates specify the upper-left and lower-right corners of the client area.
 <p />
 Because client coordinates are relative to the upper-left corner of a window's client area, 
 the coordinates of the upper-left corner are (0,0). 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ddbb00bd-819b-a306-7685-8cba83187aea.htm">GetClientRect(IntPtr, Rectangle<span id="LST44177590_100" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the coordinates of a window's client area.
 <p />
 The client coordinates specify the upper-left and lower-right corners of the client area.
 <p />
 Because client coordinates are relative to the upper-left corner of a window's client area, 
 the coordinates of the upper-left corner are (0,0). 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f1bedce8-b09e-5b35-fd34-64aea1484f0b.htm">GetClientRect(SafeHandle, NativeRectangle<span id="LST44177590_101" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the coordinates of a window's client area.
 <p />
 The client coordinates specify the upper-left and lower-right corners of the client area.
 <p />
 Because client coordinates are relative to the upper-left corner of a window's client area, 
 the coordinates of the upper-left corner are (0,0). 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="be8c8db6-9086-5b11-84e1-99adbb403ac8.htm">GetClientRect(SafeHandle, Rectangle<span id="LST44177590_102" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the coordinates of a window's client area.
 <p />
 The client coordinates specify the upper-left and lower-right corners of the client area.
 <p />
 Because client coordinates are relative to the upper-left corner of a window's client area, 
 the coordinates of the upper-left corner are (0,0). 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ac1234d8-cc1f-25bc-7f49-e45b2bd1cdc6.htm">GetClipCursor</a>
                  </td>
                  <td>
 Retrieves the screen coordinates of the rectangular area to which the cursor is confined.
 <p />
 To confine the cursor to a rectangular area on the screen, use the <a href="04805a39-435b-41b8-1adf-a95a26eb157f.htm">ClipCursor(NativeRectangle<span id="LST44177590_103" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4ee649ef-cf23-34b7-fa21-9a02112167cd.htm">GetCursor</a>
                  </td>
                  <td>
 Retrieves a handle to the current cursor.
 <p />
 To get information on the global cursor, even if it is not owned by the current thread, 
 use <a href="9dcfce68-e06f-0791-21c6-33323d02b140.htm">GetCursorInfo(CursorInfo<span id="LST44177590_104" data-languageSpecificText="cpp=%"></span>)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9dcfce68-e06f-0791-21c6-33323d02b140.htm">GetCursorInfo</a>
                  </td>
                  <td>
 Retrieves information about the global cursor.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="930bc0f9-c4fa-225d-53ce-9ccd1cba7598.htm">GetCursorPos(NativePoint<span id="LST44177590_105" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the position of the mouse cursor, in screen coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a450b615-674b-5033-4851-20b0cb4a3662.htm">GetCursorPos(Point<span id="LST44177590_106" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the position of the mouse cursor, in screen coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b03b4b3d-e35a-f6d3-a703-ed461202bbfe.htm">GetDC(IntPtr)</a>
                  </td>
                  <td>
 Retrieves a <span class="noLink">IntPtr</span> handle to a device context (DC) for the client area of a specified window or for the entire screen.
 <p />
 You can use the returned handle in subsequent GDI functions to draw in the DC.
 <p />
 The device context is an opaque data structure, whose values are used internally by GDI.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="30ed108a-0d59-83e0-2f3d-3c0fdbda48b9.htm">GetDC(SafeHandle)</a>
                  </td>
                  <td>
 Retrieves a <span class="noLink">IntPtr</span> handle to a device context (DC) for the client area of a specified window or for the entire screen.
 <p />
 You can use the returned handle in subsequent GDI functions to draw in the DC.
 <p />
 The device context is an opaque data structure, whose values are used internally by GDI.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="06e0c4b8-ac6f-b28c-cca8-bae89475460f.htm">GetDesktopWindow</a>
                  </td>
                  <td>
 Retrieves a handle to the desktop window.
 <p />
 The desktop window is the area on top of which other windows are painted.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c1fe017b-dbb1-5c16-74e6-7957fd38c12a.htm">GetDisplayConfigBufferSizes</a>
                  </td>
                  <td>
 Retrieves the size of the buffers that are required to call the 
 <a href="b76f23dd-4865-03fb-37ec-8c8f0096327f.htm">QueryDisplayConfig(QueryDisplayConfigFlags, UInt32<span id="LST44177590_107" data-languageSpecificText="cpp=%"></span>, <span id="LST44177590_108" data-languageSpecificText="cpp=array&lt;"></span>DisplayConfigPathInfo<span id="LST44177590_109" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32<span id="LST44177590_110" data-languageSpecificText="cpp=%"></span>, <span id="LST44177590_111" data-languageSpecificText="cpp=array&lt;"></span>DisplayConfigModeInfo<span id="LST44177590_112" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, DisplayConfigTopologyId<span id="LST44177590_113" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="04d73372-1195-b819-04ed-c72f3ec44909.htm">GetDlgItem(IntPtr, Int32)</a>
                  </td>
                  <td>
 Retrieves a handle to a control in the specified dialog box.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4fb091c0-f0a5-8a08-6221-c765120b6501.htm">GetDlgItem(SafeHandle, Int32)</a>
                  </td>
                  <td>
 Retrieves a handle to a control in the specified dialog box.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="31e1a93d-9f6e-1ffb-0a4b-c112ff78633f.htm">GetDoubleClickTime</a>
                  </td>
                  <td>
 Retrieves the current double-click time for the mouse. 
 <p />
 A double-click is a series of two clicks of the mouse button, 
 the second occurring within a specified time after the first. 
 <p />
 The double-click time is the maximum number of milliseconds that may occur 
 between the first and second click of a double-click. 
 <p />
 The maximum double-click time is <span class="code">5000</span> milliseconds.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8025364e-f1c5-b90a-281d-47d6ba28e311.htm">GetDpiForSystem</a>
                  </td>
                  <td>
 Returns the system DPI.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6a9bebcf-4fed-a726-c8e4-03c76576f40e.htm">GetDpiForWindow</a>
                  </td>
                  <td>
 Returns the dots per inch (dpi) value for the associated window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6193f436-1366-ef13-52c1-303c3130ddf3.htm">GetDpiFromDpiAwarenessContext</a>
                  </td>
                  <td>
 Retrieves the DPI from a given DPI_AWARENESS_CONTEXT handle. 
 <p />
 This enables you to determine the DPI of a thread without needed to examine a window created within that thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c187758f-0955-e064-70f1-2e8edc2dc6ad.htm">GetFocus</a>
                  </td>
                  <td>
 Retrieves the handle to the window that has the keyboard focus, if the window is attached to the calling thread's message queue..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4f27ca64-5b20-9ee3-7fdc-48fcfe761a92.htm">GetForegroundWindow</a>
                  </td>
                  <td>
 Retrieves a handle to the foreground window (the window with which the user is currently working). 
 <p />
 The system assigns a slightly higher priority to the thread that creates the foreground window than it does to other threads.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3ef8f252-8194-22a3-103a-69847f5ec177.htm">GetGuiResources(IntPtr, GetGuiResourcesFlags)</a>
                  </td>
                  <td>
 Retrieves the count of handles to graphical user interface (GUI) objects in use by the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6040832b-f0b4-81f9-4103-a7f442a4f238.htm">GetGuiResources(SafeHandle, GetGuiResourcesFlags)</a>
                  </td>
                  <td>
 Retrieves the count of handles to graphical user interface (GUI) objects in use by the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetHashCode</span>
                  </td>
                  <td>Serves as the default hash function.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="89e3acb5-ae77-7449-c7fc-7bc5b8589eeb.htm">GetIconInfo</a>
                  </td>
                  <td>
 Retrieves information about the specified icon or cursor.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a44d38ef-ef10-23b7-21f0-dd1ac0610dc5.htm">GetIconInfoEx</a>
                  </td>
                  <td>
 Retrieves information about the specified icon or cursor.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d44abf0e-32f8-8e5a-8a8b-026cbd99454f.htm">GetInputState</a>
                  </td>
                  <td>
 Determines whether there are mouse-button or keyboard messages in the calling thread's message queue.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b17813fc-bad6-ed02-761f-96e5d958e7c9.htm">GetKBCodePage</a>
                  </td>
                  <td>
 Retrieves the current code page.
 <p />
 Note: This function is provided only for compatibility with 16-bit versions of Windows. 
 Applications should use the <a href="62d82d7d-5321-6955-4522-d733ac0d35f0.htm">GetOEMCodePage<span id="LST44177590_114" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> function to retrieve the OEM code-page identifier for the system.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="1e75b405-ac65-e293-1989-cddc3433777d.htm">GetKeyboardLayout</a>
                  </td>
                  <td>
 Retrieves the active input locale identifier (formerly called the keyboard layout).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cb314432-fb21-8fc6-3c88-62e50257ce03.htm">GetKeyboardLayoutName(IntPtr)</a>
                  </td>
                  <td>
 Retrieves the name of the active input locale identifier (formerly called the keyboard layout) for the system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9ab7a8c7-3030-4e93-9d0a-fa2b7ccaeeeb.htm">GetKeyboardLayoutName(StringBuilder)</a>
                  </td>
                  <td>
 Retrieves the name of the active input locale identifier (formerly called the keyboard layout) for the system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f23442e9-7966-df63-6f8d-0ca7b7edbde6.htm">GetKeyboardState</a>
                  </td>
                  <td>
 Copies the status of the 256 virtual keys to the specified buffer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a4f5f048-22e1-60be-a50f-06df501b195d.htm">GetKeyboardType</a>
                  </td>
                  <td>
 Retrieves information about the current keyboard.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c264eaf0-c1f6-3cc2-714a-7b9d83efbd32.htm">GetKeyState(Int32)</a>
                  </td>
                  <td>
 Retrieves the status of the specified virtual key.
 <p />
 The status specifies whether the key is up, down, or toggled (on, off—alternating each time the key is pressed).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d4477b54-7405-fb52-0fc1-fdd37c0e1fa8.htm">GetKeyState(Keys)</a>
                  </td>
                  <td>
 Retrieves the status of the specified virtual key.
 <p />
 The status specifies whether the key is up, down, or toggled (on, off—alternating each time the key is pressed).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bb3db5a5-2125-fcdd-3a65-047e810b2cb5.htm">GetKeyState(VirtualKeys)</a>
                  </td>
                  <td>
 Retrieves the status of the specified virtual key.
 <p />
 The status specifies whether the key is up, down, or toggled (on, off—alternating each time the key is pressed).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b80ad3a3-27f7-ccaf-d229-c5623ea671d5.htm">GetLastInputInfo</a>
                  </td>
                  <td>
 Retrieves the time of the last input (mouse or keyboard) event.
 <p />
 This function is useful for input idle detection. 
 However, <a href="b80ad3a3-27f7-ccaf-d229-c5623ea671d5.htm">GetLastInputInfo(LastInputInfo<span id="LST44177590_115" data-languageSpecificText="cpp=%"></span>)</a> does not provide system-wide user input information across all running sessions. 
 Rather, <a href="b80ad3a3-27f7-ccaf-d229-c5623ea671d5.htm">GetLastInputInfo(LastInputInfo<span id="LST44177590_116" data-languageSpecificText="cpp=%"></span>)</a> provides session-specific user input information for only the 
 session that invoked the function
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="63a90408-f9d0-94b9-c0d1-4263b40afb6a.htm">GetLayeredWindowAttributes(IntPtr, UInt32<span id="LST44177590_117" data-languageSpecificText="cpp=%"></span>, Byte<span id="LST44177590_118" data-languageSpecificText="cpp=%"></span>, LayeredWindowAttributesFlags<span id="LST44177590_119" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the opacity and transparency color key of a layered window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4156889e-a546-31fc-9e7f-2ffeead72082.htm">GetLayeredWindowAttributes(IntPtr, UInt32<span id="LST44177590_120" data-languageSpecificText="cpp=%"></span>, Int32<span id="LST44177590_121" data-languageSpecificText="cpp=%"></span>, LayeredWindowAttributesFlags<span id="LST44177590_122" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the opacity and transparency color key of a layered window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="edc8a808-9fc4-f765-27e7-0b5821267c15.htm">GetLayeredWindowAttributes(SafeHandle, UInt32<span id="LST44177590_123" data-languageSpecificText="cpp=%"></span>, Byte<span id="LST44177590_124" data-languageSpecificText="cpp=%"></span>, LayeredWindowAttributesFlags<span id="LST44177590_125" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the opacity and transparency color key of a layered window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4238f6bc-0e36-0083-d80b-4f8818f71b5c.htm">GetLayeredWindowAttributes(SafeHandle, UInt32<span id="LST44177590_126" data-languageSpecificText="cpp=%"></span>, Int32<span id="LST44177590_127" data-languageSpecificText="cpp=%"></span>, LayeredWindowAttributesFlags<span id="LST44177590_128" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the opacity and transparency color key of a layered window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f50ab491-9767-767e-71b8-1e5242913c61.htm">GetMenuItemCount(IntPtr)</a>
                  </td>
                  <td>
 Determines the number of items in the specified menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="17970983-2008-d090-f2e1-1ce7a32bfe8e.htm">GetMenuItemCount(SafeHandle)</a>
                  </td>
                  <td>
 Determines the number of items in the specified menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9c40f4f2-eb2a-e794-8ffe-3709dec43423.htm">GetMenuItemID(IntPtr, Int32)</a>
                  </td>
                  <td>
 Retrieves the menu item identifier of a menu item located at the specified position in a menu. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2dffc3ce-e22d-7148-ee15-d45aa0c5d52c.htm">GetMenuItemID(SafeHandle, Int32)</a>
                  </td>
                  <td>
 Retrieves the menu item identifier of a menu item located at the specified position in a menu. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2907e906-18f7-8eab-1eea-856167f768e4.htm">GetMenuItemInfo(IntPtr, UInt32, Boolean, MenuItemInfo<span id="LST44177590_129" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Gets the handle of the form's system menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6b9131aa-a544-d9ad-b604-7f4a96977164.htm">GetMenuItemInfo(SafeHandle, UInt32, Boolean, MenuItemInfo<span id="LST44177590_130" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Gets the handle of the form's system menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f6848179-18fb-0c14-a6f4-b4fde425d2c7.htm">GetMenuState(IntPtr, UInt32, MenuPosition)</a>
                  </td>
                  <td>
 Retrieves the menu flags associated with the specified menu item.
 <p />
 If the menu item opens a submenu, this function also returns the number of items in the submenu. 
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="74a482df-f03c-249f-b05f-06e79cd41e80.htm">GetMenuState(SafeHandle, UInt32, MenuPosition)</a>
                  </td>
                  <td>
 Retrieves the menu flags associated with the specified menu item.
 <p />
 If the menu item opens a submenu, this function also returns the number of items in the submenu. 
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="52fbfccd-b12d-d55d-51b3-fa2d9fa4aeb5.htm">GetMenuString(IntPtr, UInt32, StringBuilder, Int32, MenuPosition)</a>
                  </td>
                  <td>
 Copies the text string of the specified menu item into the specified buffer. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b8446045-51d1-c1c7-573a-e049c8c12389.htm">GetMenuString(SafeHandle, UInt32, StringBuilder, Int32, MenuPosition)</a>
                  </td>
                  <td>
 Copies the text string of the specified menu item into the specified buffer. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ed9e3db1-536a-b946-9925-1845c781216f.htm">GetMessage(NativeMessage<span id="LST44177590_131" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32, UInt32)</a>
                  </td>
                  <td>
 Retrieves a message from the calling thread's message queue. 
 <p />
 The function dispatches incoming sent messages until a posted message is available for retrieval.
 <p />
 Unlike <a href="ed9e3db1-536a-b946-9925-1845c781216f.htm">GetMessage(NativeMessage<span id="LST44177590_132" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32, UInt32)</a>, the <a href="9ddfdc9f-f422-ca4a-e2b9-836961993813.htm">PeekMessage(NativeMessage<span id="LST44177590_133" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32, UInt32, PeekMessageFlags)</a> function does not 
 wait for a message to be posted before returning.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="345b8570-5614-3655-901d-60bf75aac6e5.htm">GetMessage(NativeMessage<span id="LST44177590_134" data-languageSpecificText="cpp=%"></span>, HandleRef, UInt32, UInt32)</a>
                  </td>
                  <td>
 Retrieves a message from the calling thread's message queue. 
 <p />
 The function dispatches incoming sent messages until a posted message is available for retrieval.
 <p />
 Unlike <a href="ed9e3db1-536a-b946-9925-1845c781216f.htm">GetMessage(NativeMessage<span id="LST44177590_135" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32, UInt32)</a>, the <a href="9ddfdc9f-f422-ca4a-e2b9-836961993813.htm">PeekMessage(NativeMessage<span id="LST44177590_136" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32, UInt32, PeekMessageFlags)</a> function does not 
 wait for a message to be posted before returning.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c96d81f8-0d55-0cf6-8b7c-582c7d81a7c6.htm">GetMessageExtraInfo</a>
                  </td>
                  <td>
 Retrieves the extra message information for the current thread. 
 <p />
 Extra message information is an application- or driver-defined value associated with the current thread's message queue.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4b2ca7ca-fbb4-c83d-41e6-2b9743c2644f.htm">GetMessagePos</a>
                  </td>
                  <td>
 Retrieves the cursor position for the last message retrieved by the <a href="ed9e3db1-536a-b946-9925-1845c781216f.htm">GetMessage(NativeMessage<span id="LST44177590_137" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32, UInt32)</a> function.
 <p />
 To determine the current position of the cursor, use the <a href="930bc0f9-c4fa-225d-53ce-9ccd1cba7598.htm">GetCursorPos(NativePoint<span id="LST44177590_138" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="496356f0-b030-b9d1-6871-aaeb7a35c6a6.htm">GetMessageTime</a>
                  </td>
                  <td>
 Retrieves the message time for the last message retrieved by the GetMessage function. 
 <p />
 The time is a long integer that specifies the elapsed time, in milliseconds, 
 from the time the system was started to the time the message was created (that is, placed in the thread's message queue).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ab9e439e-6f1a-b367-b4c1-9f40a4d25f3c.htm">GetMonitorInfo(IntPtr, MonitorInfo<span id="LST44177590_139" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves information about a display monitor.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="15063ba2-50e5-991f-6602-950806cc444b.htm">GetMonitorInfo(IntPtr, MonitorInfoEx<span id="LST44177590_140" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves information about a display monitor.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="85eb75bb-c2bb-9283-e76d-b72df8a78cce.htm">GetMouseMovePointsEx</a>
                  </td>
                  <td>
 Retrieves a history of up to 64 previous coordinates of the mouse or pen.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f67a5cd8-7855-c378-6e82-fc81198bf36c.htm">GetNextWindow(IntPtr, GetNextWindowCmd)</a>
                  </td>
                  <td>
 Retrieves a handle to the next or previous window in the Z-Order.
 <p />
 The next window is below the specified window; the previous window is above. 
 <p />
 If the specified window is a topmost window, the function searches for a topmost window.
 <p />
 If the specified window is a top-level window, the function searches for a top-level window.
 <p />
 If the specified window is a child window, the function searches for a child window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b690e59a-1e0a-7984-7439-211cce819a3b.htm">GetNextWindow(SafeHandle, GetNextWindowCmd)</a>
                  </td>
                  <td>
 Retrieves a handle to the next or previous window in the Z-Order.
 <p />
 The next window is below the specified window; the previous window is above. 
 <p />
 If the specified window is a topmost window, the function searches for a topmost window.
 <p />
 If the specified window is a top-level window, the function searches for a top-level window.
 <p />
 If the specified window is a child window, the function searches for a child window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ea5ef08e-1681-043b-d529-f2d93bd3099f.htm">GetParent(HandleRef)</a>
                  </td>
                  <td>
 Retrieves a handle to the specified window's parent or owner. 
 <p />
 To retrieve a handle to a specified ancestor, use the <a href="4cda0c9b-04cb-1f4f-e03f-8b782cdc6ca7.htm">GetAncestor(IntPtr, GetAncestorFlags)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="244d1edd-c63f-529e-b9ba-bd461e688b13.htm">GetParent(IntPtr)</a>
                  </td>
                  <td>
 Retrieves a handle to the specified window's parent or owner. 
 <p />
 To retrieve a handle to a specified ancestor, use the <a href="4cda0c9b-04cb-1f4f-e03f-8b782cdc6ca7.htm">GetAncestor(IntPtr, GetAncestorFlags)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ad9d1d9a-f601-a47b-cf68-abd8f40d988d.htm">GetParent(SafeHandle)</a>
                  </td>
                  <td>
 Retrieves a handle to the specified window's parent or owner. 
 <p />
 To retrieve a handle to a specified ancestor, use the <a href="4cda0c9b-04cb-1f4f-e03f-8b782cdc6ca7.htm">GetAncestor(IntPtr, GetAncestorFlags)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e4287889-91f7-a552-7cfe-a7f12cc65bca.htm">GetPhysicalCursorPos</a>
                  </td>
                  <td>
 Retrieves the position of the cursor in physical coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="08d73c52-948a-d83a-6430-3bc5572fe546.htm">GetProcessWindowStation</a>
                  </td>
                  <td>
 Retrieves a handle to the current window station for the calling process..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="36c5b8c8-164a-2244-de71-c78c4476be81.htm">GetQueueStatus</a>
                  </td>
                  <td>
 Retrieves the type of messages found in the calling thread's message queue.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6691eb91-6096-66af-24de-dc49f979381b.htm">GetRawInputBuffer</a>
                  </td>
                  <td>
 Performs a buffered read of the raw input data.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a64529aa-7514-f55e-b745-7fe68b89745d.htm">GetRawInputData</a>
                  </td>
                  <td>
 Retrieves the raw input from the specified device.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3a9deda3-8885-f0bb-8868-85e5efd2cba0.htm">GetRawInputDeviceInfo(IntPtr, GetRawInputDeviceInfoCommand, IntPtr, UInt32<span id="LST44177590_141" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves information about the raw input device.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5726398f-1c5e-da3a-2405-123834611a2d.htm">GetRawInputDeviceInfo(IntPtr, UInt32, IntPtr, UInt32<span id="LST44177590_142" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves information about the raw input device.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1e0950fa-394b-da95-a10c-19e903438962.htm">GetRawInputDeviceList(IntPtr, UInt32<span id="LST44177590_143" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Enumerates the raw input devices attached to the system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="999a3122-bf4c-7475-80cb-ba76654d3157.htm">GetRawInputDeviceList(<span id="LST44177590_144" data-languageSpecificText="cpp=array&lt;"></span>RawInputDeviceList<span id="LST44177590_145" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32<span id="LST44177590_146" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Enumerates the raw input devices attached to the system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c6b3507a-9efb-3bc1-00bb-5c2ff9772065.htm">GetRegisteredRawInputDevices</a>
                  </td>
                  <td>
 Retrieves the information about the raw input devices for the current application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f3153618-6971-31d1-5d72-bab3c42d2119.htm">GetScrollInfo(IntPtr, ScrollBarOrientation, ScrollInfo<span id="LST44177590_147" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the parameters of a scroll bar, including the minimum and maximum scrolling positions, 
 the page size, and the position of the scroll box (thumb).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e6c764a1-fb53-014a-e974-afdcb5060580.htm">GetScrollInfo(SafeHandle, ScrollBarOrientation, ScrollInfo<span id="LST44177590_148" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the parameters of a scroll bar, including the minimum and maximum scrolling positions, 
 the page size, and the position of the scroll box (thumb).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="089bac71-8b8e-4c49-1f76-eaffcc5d0cad.htm">GetShellWindow</a>
                  </td>
                  <td>
 Retrieves a handle to the Shell's desktop window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e47ec21a-43db-ebae-f00f-9e974df209f4.htm">GetSystemDpiForProcess</a>
                  </td>
                  <td>
 Retrieves the system DPI associated with a given process. 
 <p />
 This is useful for avoiding compatibility issues that arise from sharing DPI-sensitive information 
 between multiple system-aware processes with different system DPI values.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9d8f9484-ffb3-78f5-da0c-7d486ac60b3f.htm">GetSystemMenu(HandleRef, Boolean)</a>
                  </td>
                  <td>
 Gets the handle of the form's system menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cddaceb1-438f-2dbc-5797-60d3885a0e87.htm">GetSystemMenu(IntPtr, Boolean)</a>
                  </td>
                  <td>
 Gets the handle of the form's system menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="40e6dc05-9c60-38fb-ee5f-c4529259c608.htm">GetSystemMenu(SafeHandle, Boolean)</a>
                  </td>
                  <td>
 Gets the handle of the form's system menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6cc305f8-396f-22a8-74f9-29625a415de4.htm">GetSystemMetricsForDpi</a>
                  </td>
                  <td>
 Retrieves the specified system metric or system configuration setting taking into account a provided DPI.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f4d2233c-fd07-e7dc-d55f-071dac53fd9b.htm">GetThreadDesktop</a>
                  </td>
                  <td>
 Retrieves a handle to the desktop assigned to the specified thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0094d44c-b902-ca97-b1eb-1976ce46f728.htm">GetThreadDpiAwarenessContext</a>
                  </td>
                  <td>
 Gets the DPI_AWARENESS_CONTEXT for the current thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e35ce756-2331-a0ca-0803-8aa42b1c2481.htm">GetTopWindow(IntPtr)</a>
                  </td>
                  <td>
 Examines the Z order of the child windows associated with the specified parent window 
 and retrieves a handle to the child window at the top of the Z order.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d6771f99-5662-7fc4-13ef-532d2cc8a3b9.htm">GetTopWindow(SafeHandle)</a>
                  </td>
                  <td>
 Examines the Z order of the child windows associated with the specified parent window 
 and retrieves a handle to the child window at the top of the Z order.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetType</span>
                  </td>
                  <td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="6ae70f28-a4b6-36ab-abbe-212ab34a1ca9.htm">GetUpdateRect(IntPtr, NativeRectangle<span id="LST44177590_149" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Retrieves the coordinates of the smallest rectangle that completely encloses the update region of the specified window. 
 <p /><a href="6ae70f28-a4b6-36ab-abbe-212ab34a1ca9.htm">GetUpdateRect(IntPtr, NativeRectangle<span id="LST44177590_150" data-languageSpecificText="cpp=%"></span>, Boolean)</a> retrieves the rectangle in logical coordinates. 
 If there is no update region, 
 <a href="6ae70f28-a4b6-36ab-abbe-212ab34a1ca9.htm">GetUpdateRect(IntPtr, NativeRectangle<span id="LST44177590_151" data-languageSpecificText="cpp=%"></span>, Boolean)</a> retrieves an empty rectangle (sets all coordinates to zero).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5afba114-ee81-11b7-ae80-21dda0ab364f.htm">GetUpdateRect(IntPtr, Rectangle<span id="LST44177590_152" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Retrieves the coordinates of the smallest rectangle that completely encloses the update region of the specified window. 
 <p /><a href="6ae70f28-a4b6-36ab-abbe-212ab34a1ca9.htm">GetUpdateRect(IntPtr, NativeRectangle<span id="LST44177590_153" data-languageSpecificText="cpp=%"></span>, Boolean)</a> retrieves the rectangle in logical coordinates. 
 If there is no update region, 
 <a href="6ae70f28-a4b6-36ab-abbe-212ab34a1ca9.htm">GetUpdateRect(IntPtr, NativeRectangle<span id="LST44177590_154" data-languageSpecificText="cpp=%"></span>, Boolean)</a> retrieves an empty rectangle (sets all coordinates to zero).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="61c6ee29-b195-5c0d-e9af-77da8ae6c183.htm">GetUpdateRect(SafeHandle, NativeRectangle<span id="LST44177590_155" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Retrieves the coordinates of the smallest rectangle that completely encloses the update region of the specified window. 
 <p /><a href="6ae70f28-a4b6-36ab-abbe-212ab34a1ca9.htm">GetUpdateRect(IntPtr, NativeRectangle<span id="LST44177590_156" data-languageSpecificText="cpp=%"></span>, Boolean)</a> retrieves the rectangle in logical coordinates. 
 If there is no update region, 
 <a href="6ae70f28-a4b6-36ab-abbe-212ab34a1ca9.htm">GetUpdateRect(IntPtr, NativeRectangle<span id="LST44177590_157" data-languageSpecificText="cpp=%"></span>, Boolean)</a> retrieves an empty rectangle (sets all coordinates to zero).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="874b0093-5e46-7a5d-9aac-19480b8cb99a.htm">GetUpdateRect(SafeHandle, Rectangle<span id="LST44177590_158" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Retrieves the coordinates of the smallest rectangle that completely encloses the update region of the specified window. 
 <p /><a href="6ae70f28-a4b6-36ab-abbe-212ab34a1ca9.htm">GetUpdateRect(IntPtr, NativeRectangle<span id="LST44177590_159" data-languageSpecificText="cpp=%"></span>, Boolean)</a> retrieves the rectangle in logical coordinates. 
 If there is no update region, 
 <a href="6ae70f28-a4b6-36ab-abbe-212ab34a1ca9.htm">GetUpdateRect(IntPtr, NativeRectangle<span id="LST44177590_160" data-languageSpecificText="cpp=%"></span>, Boolean)</a> retrieves an empty rectangle (sets all coordinates to zero).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2e1497d8-0abb-ed11-5da4-673aa272b573.htm">GetUpdateRgn(IntPtr, IntPtr, Boolean)</a>
                  </td>
                  <td>
 Retrieves the update region of a window by copying it into the specified region. 
 <p />
 The coordinates of the update region are relative to the upper-left corner of the window 
 (that is, they are client coordinates).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bd6603fb-78d5-dac6-8ebb-6d0562ba34ca.htm">GetUpdateRgn(SafeHandle, SafeHandle, Boolean)</a>
                  </td>
                  <td>
 Retrieves the update region of a window by copying it into the specified region. 
 <p />
 The coordinates of the update region are relative to the upper-left corner of the window 
 (that is, they are client coordinates).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8be78961-d2f6-6deb-01c7-bdb78bb7bbb7.htm">GetWindow(IntPtr, GetWindowCmd)</a>
                  </td>
                  <td>
 Retrieves a handle to a window that has the specified relationship (Z-Order or owner) to the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f3ee0276-a6ee-a317-064f-0cf6875aa922.htm">GetWindow(SafeHandle, GetWindowCmd)</a>
                  </td>
                  <td>
 Retrieves a handle to a window that has the specified relationship (Z-Order or owner) to the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f3f3dc22-1742-fc27-ed44-08a964ccc624.htm">GetWindowDC(IntPtr)</a>
                  </td>
                  <td>
 Retrieves the device context (DC) for the entire window, including title bar, menus, and scroll bars.
 <p />
 A window device context permits painting anywhere in a window, 
 because the origin of the device context is the upper-left corner of the window instead of the client area.
 <p /><a href="f3f3dc22-1742-fc27-ed44-08a964ccc624.htm">GetWindowDC(IntPtr)</a> assigns default attributes to the window device context 
 each time it retrieves the device context. Previous attributes are lost.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="12107e87-0c46-c49d-b629-bdab80fbdd8b.htm">GetWindowDC(SafeHandle)</a>
                  </td>
                  <td>
 Retrieves the device context (DC) for the entire window, including title bar, menus, and scroll bars.
 <p />
 A window device context permits painting anywhere in a window, 
 because the origin of the device context is the upper-left corner of the window instead of the client area.
 <p /><a href="f3f3dc22-1742-fc27-ed44-08a964ccc624.htm">GetWindowDC(IntPtr)</a> assigns default attributes to the window device context 
 each time it retrieves the device context. Previous attributes are lost.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6eeec82e-8517-dd57-eb68-4d4e0485d469.htm">GetWindowDpiAwarenessContext</a>
                  </td>
                  <td>
 Returns the DPI_AWARENESS_CONTEXT associated with a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fdd811fd-e993-02d4-9ac0-e8f0a7d1840b.htm">GetWindowInfo(IntPtr, NativeWindowInfo<span id="LST44177590_161" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves information about the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="748af6be-fc5f-9324-8cd5-2faf124104c0.htm">GetWindowInfo(SafeHandle, NativeWindowInfo<span id="LST44177590_162" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves information about the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="71eb15f1-b359-c087-85f2-286da9b148ec.htm">GetWindowLong(HandleRef, WindowLongValues)</a>
                  </td>
                  <td>
 Retrieves information about the specified window.
 <p />
 The function also retrieves the 32-bit (<span class="code">DWORD</span>) value at the specified offset into the extra window memory.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="5a7ea05f-04d8-f91d-eecd-2b3ecc14e418.htm">GetWindowLong(IntPtr, WindowLongValues)</a>
                  </td>
                  <td>
 Retrieves information about the specified window.
 <p />
 The function also retrieves the 32-bit (<span class="code">DWORD</span>) value at the specified offset into the extra window memory.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="3010f75a-87a1-4ca3-f90e-fce71ffc67bf.htm">GetWindowLong(SafeHandle, WindowLongValues)</a>
                  </td>
                  <td>
 Retrieves information about the specified window.
 <p />
 The function also retrieves the 32-bit (<span class="code">DWORD</span>) value at the specified offset into the extra window memory.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="8aed6dcd-401d-40d7-963e-bd188d062e18.htm">GetWindowLongPtr(HandleRef, WindowLongValues)</a>
                  </td>
                  <td>
 Retrieves information about the specified window.
 <p />
 The function also retrieves the value at a specified offset into the extra window memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e895837b-d83b-683a-1083-15247eafa92e.htm">GetWindowLongPtr(IntPtr, WindowLongValues)</a>
                  </td>
                  <td>
 Retrieves information about the specified window.
 <p />
 The function also retrieves the value at a specified offset into the extra window memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2154eeb4-fb06-7873-fedc-3207af7463ff.htm">GetWindowLongPtr(SafeHandle, WindowLongValues)</a>
                  </td>
                  <td>
 Retrieves information about the specified window.
 <p />
 The function also retrieves the value at a specified offset into the extra window memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="97ada2de-30f2-325a-83a9-62340696cccd.htm">GetWindowModuleFileName(IntPtr, StringBuilder, UInt32)</a>
                  </td>
                  <td>
 Retrieves the full path and file name of the module associated with the specified window handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6f76edb6-1d47-98fb-5678-160414e63563.htm">GetWindowModuleFileName(SafeHandle, StringBuilder, UInt32)</a>
                  </td>
                  <td>
 Retrieves the full path and file name of the module associated with the specified window handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="855c41c9-1e5d-de33-b4e0-069057c02103.htm">GetWindowPlacement(IntPtr, WindowPlacement<span id="LST44177590_163" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the show state and the restored, minimized, and maximized positions of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="45a147dc-dc1e-22f8-14d2-2a3fbebcade4.htm">GetWindowPlacement(SafeHandle, WindowPlacement<span id="LST44177590_164" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the show state and the restored, minimized, and maximized positions of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="eab28a75-cb2e-2584-81e3-c051c61706a0.htm">GetWindowRect(IntPtr, NativeRectangle<span id="LST44177590_165" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the bounding rectangle of the specified window. 
 <p />
 The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9c97aaf1-d2f7-30a2-e4d4-f66619ca8966.htm">GetWindowRect(IntPtr, Rectangle<span id="LST44177590_166" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the bounding rectangle of the specified window. 
 <p />
 The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="41fc661c-5fb9-d325-b479-dfb7f6a57547.htm">GetWindowRect(SafeHandle, NativeRectangle<span id="LST44177590_167" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the bounding rectangle of the specified window. 
 <p />
 The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6981fa66-d294-beca-c134-4e85ed64e043.htm">GetWindowRect(SafeHandle, Rectangle<span id="LST44177590_168" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the bounding rectangle of the specified window. 
 <p />
 The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6a3b3052-20ca-c21d-f88c-ce500d462705.htm">GetWindowRgn(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Obtains a copy of the window region of a window. 
 <p />
 The window region of a window is set by calling the SetWindowRgn function. 
 <p />
 The window region determines the area within the window where the system permits drawing. 
 <p />
 The system does not display any portion of a window that lies outside of the window region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1bc6b969-dbb3-db75-2a08-89f6898b0dca.htm">GetWindowRgn(SafeHandle, SafeHandle)</a>
                  </td>
                  <td>
 Obtains a copy of the window region of a window. 
 <p />
 The window region of a window is set by calling the SetWindowRgn function. 
 <p />
 The window region determines the area within the window where the system permits drawing. 
 <p />
 The system does not display any portion of a window that lies outside of the window region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4cec0837-f705-45a8-83a8-96206736e573.htm">GetWindowRgnBox(IntPtr, NativeRectangle<span id="LST44177590_169" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the tightest bounding rectangle for the window region of a window..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="47103492-7574-76c6-4b39-6a7be8a857ec.htm">GetWindowRgnBox(IntPtr, Rectangle<span id="LST44177590_170" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the tightest bounding rectangle for the window region of a window..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="54e21d65-e9f2-58ec-d24e-91934094bec3.htm">GetWindowRgnBox(SafeHandle, NativeRectangle<span id="LST44177590_171" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the tightest bounding rectangle for the window region of a window..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6869d7c0-efc6-cbf2-cd57-0540ecdc0a62.htm">GetWindowRgnBox(SafeHandle, Rectangle<span id="LST44177590_172" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the tightest bounding rectangle for the window region of a window..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="270957b3-6a33-f0a1-b9ca-3dcc0063d36a.htm">GetWindowText(IntPtr, StringBuilder, Int32)</a>
                  </td>
                  <td>
 Copies the text of the specified window's title bar (if it has one) into a buffer.
 <p />
 If the specified window is a control, the text of the control is copied.
 <p /><a href="270957b3-6a33-f0a1-b9ca-3dcc0063d36a.htm">GetWindowText(IntPtr, StringBuilder, Int32)</a> cannot retrieve the text of a control in another application than the calling application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="47792e03-f629-6743-546e-84455920b0ab.htm">GetWindowText(SafeHandle, StringBuilder, Int32)</a>
                  </td>
                  <td>
 Copies the text of the specified window's title bar (if it has one) into a buffer.
 <p />
 If the specified window is a control, the text of the control is copied.
 <p /><a href="270957b3-6a33-f0a1-b9ca-3dcc0063d36a.htm">GetWindowText(IntPtr, StringBuilder, Int32)</a> cannot retrieve the text of a control in another application than the calling application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="17e56a1f-504d-d533-1c7f-307c01e8b04d.htm">GetWindowTextLength</a>
                  </td>
                  <td>
 Retrieves the length, in characters, of the specified window's title bar text (if the window has a title bar). 
 <p />
 If the specified window is a control, the function retrieves the length of the text within the control. 
 However, <a href="17e56a1f-504d-d533-1c7f-307c01e8b04d.htm">GetWindowTextLength(IntPtr)</a> cannot retrieve the 
 length of the text of an edit control in another application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f0c2ad80-ff67-d45f-1821-f6e1686af78d.htm">GetWindowThreadProcessId(IntPtr, Int32<span id="LST44177590_173" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the identifier of the thread that created the specified window 
 and, optionally, the identifier of the process that created the window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bbde0689-bdd7-3754-a719-7adbd72c921a.htm">GetWindowThreadProcessId(SafeHandle, Int32<span id="LST44177590_174" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the identifier of the thread that created the specified window 
 and, optionally, the identifier of the process that created the window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6d371272-f485-9a6f-a003-a242154d3bd1.htm">GhostWindowFromHungWindow</a>
                  </td>
                  <td>
 Returns the handle on the window being ghosted. 
 <p />
 This function is the reciprocal of <a href="666966ad-3859-e68e-cf51-6b1259795eb6.htm">HungWindowFromGhostWindow(IntPtr)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3ee452c1-3a01-760c-ca34-6f1b96fa2de5.htm">HideCaret(IntPtr)</a>
                  </td>
                  <td>
 Removes the caret from the screen.
 <p />
 Hiding a caret does not destroy its current shape or invalidate the insertion point. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e3057e7b-4cb1-249b-ab26-791c5113520b.htm">HideCaret(SafeHandle)</a>
                  </td>
                  <td>
 Removes the caret from the screen.
 <p />
 Hiding a caret does not destroy its current shape or invalidate the insertion point. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="666966ad-3859-e68e-cf51-6b1259795eb6.htm">HungWindowFromGhostWindow</a>
                  </td>
                  <td>
 Returns the handle on the window being ghosted. 
 <p />
 This function is the reciprocal of <a href="6d371272-f485-9a6f-a003-a242154d3bd1.htm">GhostWindowFromHungWindow(IntPtr)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0c136a07-5742-01a7-49ba-93bb576a7817.htm">InflateRect(NativeRectangle<span id="LST44177590_175" data-languageSpecificText="cpp=%"></span>, Int32, Int32)</a>
                  </td>
                  <td>
 Increases or decreases the width and height of the specified <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a>. 
 <p />
 The <a href="0c136a07-5742-01a7-49ba-93bb576a7817.htm">InflateRect(NativeRectangle<span id="LST44177590_176" data-languageSpecificText="cpp=%"></span>, Int32, Int32)</a> function adds 'x' units to the left and right ends of the <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> 
 and 'y' units to the top and bottom. 
 <p />
 The <span class="parameter">x</span> and <span class="parameter">y</span> parameters are signed values; 
 positive values increase the width and height, and negative values decrease them.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f1aebaf4-81a7-85af-1016-d897411656f0.htm">InflateRect(Rectangle<span id="LST44177590_177" data-languageSpecificText="cpp=%"></span>, Int32, Int32)</a>
                  </td>
                  <td>
 Increases or decreases the width and height of the specified <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a>. 
 <p />
 The <a href="0c136a07-5742-01a7-49ba-93bb576a7817.htm">InflateRect(NativeRectangle<span id="LST44177590_178" data-languageSpecificText="cpp=%"></span>, Int32, Int32)</a> function adds 'x' units to the left and right ends of the <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> 
 and 'y' units to the top and bottom. 
 <p />
 The <span class="parameter">x</span> and <span class="parameter">y</span> parameters are signed values; 
 positive values increase the width and height, and negative values decrease them.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e8dab2e5-2dbe-7e5e-2f7c-2d24141d9e3b.htm">InsertMenuItem(IntPtr, Int32, Boolean, MenuItemInfo<span id="LST44177590_179" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Insert a menu item into an existing menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e6c143af-0e4a-566c-eb32-a5913f80cb4a.htm">InsertMenuItem(SafeHandle, Int32, Boolean, MenuItemInfo<span id="LST44177590_180" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Insert a menu item into an existing menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d954c178-7896-eec2-df1e-f773009a0ec4.htm">InternalGetWindowText</a>
                  </td>
                  <td>
 Copies the text of the specified window's title bar (if it has one) into a buffer.
 <p />
 This function is similar to the <a href="270957b3-6a33-f0a1-b9ca-3dcc0063d36a.htm">GetWindowText(IntPtr, StringBuilder, Int32)</a> function. 
 However, it obtains the window text directly from the window structure associated with the 
 specified window's handle and then always provides the text as a Unicode string. 
 <p />
 This is unlike <a href="270957b3-6a33-f0a1-b9ca-3dcc0063d36a.htm">GetWindowText(IntPtr, StringBuilder, Int32)</a> which obtains the text by sending the window a 
 <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_GetText</a> message. 
 <p />
 If the specified window is a control, the text of the control is obtained.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="683c8099-84c2-f988-a40f-0b95a063917a.htm">IntersectRect</a>
                  </td>
                  <td>
 Calculates the intersection of two source <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> 
 and places the coordinates of the intersection <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> 
 into the destination <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a>. 
 <p />
 If the source <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> do not intersect, 
 an empty <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> (in which all coordinates are set to zero) 
 is placed into the destination <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="462bbbe3-aeb5-4141-f80b-6e5a5b174ead.htm">InvalidateRect(IntPtr, NativeRectangle<span id="LST44177590_181" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Adds a rectangle to the specified window's update region. 
 <p />
 The update region represents the portion of the window's client area that must be redrawn.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5b5a222a-e513-2bd1-b361-59cbe6208240.htm">InvalidateRect(IntPtr, Rectangle<span id="LST44177590_182" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Adds a rectangle to the specified window's update region. 
 <p />
 The update region represents the portion of the window's client area that must be redrawn.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="67d15527-3d62-e573-952b-1d5345de6ae8.htm">InvalidateRect(IntPtr, IntPtr<span id="LST44177590_183" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Adds a rectangle to the specified window's update region. 
 <p />
 The update region represents the portion of the window's client area that must be redrawn.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="13f5d51b-10f5-3637-cd07-e70dfcb6e54e.htm">InvalidateRect(SafeHandle, NativeRectangle<span id="LST44177590_184" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Adds a rectangle to the specified window's update region. 
 <p />
 The update region represents the portion of the window's client area that must be redrawn.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="48ac4775-9f6e-7e0d-c792-9a41c7f329cf.htm">InvalidateRect(SafeHandle, Rectangle<span id="LST44177590_185" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Adds a rectangle to the specified window's update region. 
 <p />
 The update region represents the portion of the window's client area that must be redrawn.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2ba11c61-e744-13ef-9237-38f7a7a7d51d.htm">InvalidateRect(SafeHandle, IntPtr<span id="LST44177590_186" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Adds a rectangle to the specified window's update region. 
 <p />
 The update region represents the portion of the window's client area that must be redrawn.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e8e2b29a-6b57-3844-960d-2e9df841a32c.htm">InvalidateRgn(IntPtr, IntPtr, Boolean)</a>
                  </td>
                  <td>
 Invalidates the client area within the specified region by adding it to the current update region of a window. 
 <p />
 The invalidated region, along with all other areas in the update region, 
 is marked for painting when the next <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_Paint</a> message occurs.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f17212bb-6c39-d1fe-95ea-ea97d07eceeb.htm">InvalidateRgn(SafeHandle, SafeHandle, Boolean)</a>
                  </td>
                  <td>
 Invalidates the client area within the specified region by adding it to the current update region of a window. 
 <p />
 The invalidated region, along with all other areas in the update region, 
 is marked for painting when the next <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_Paint</a> message occurs.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c75e210f-e5ab-88c4-5e88-680a40c01c21.htm">InvertRect(IntPtr, NativeRectangle<span id="LST44177590_187" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Inverts a <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> in a window by performing a logical NOT operation on the 
 color values for each pixel in the rectangle's interior.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5a5aba06-49b3-5d80-aa8e-1ad1e362af61.htm">InvertRect(IntPtr, Rectangle<span id="LST44177590_188" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Inverts a <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> in a window by performing a logical NOT operation on the 
 color values for each pixel in the rectangle's interior.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="715eee11-5504-2c7e-49d8-0d0ab4399b48.htm">IsChild</a>
                  </td>
                  <td>
 Determines whether a window is a child window or descendant window of a specified parent window. 
 <p />
 A child window is the direct descendant of a specified parent window if that parent window is in the chain of parent windows; 
 the chain of parent windows leads from the original overlapped or pop-up window to the child window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4f0baf20-8a1d-ade8-3c40-5a58fd511812.htm">IsDialogMessage</a>
                  </td>
                  <td>
 Determines whether a message is intended for the specified dialog box and, if it is, processes the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d8c178af-b864-ff10-1cb2-98979227bb3e.htm">IsGuiThread</a>
                  </td>
                  <td>
 Determines whether the calling thread is already a GUI thread.
 <p />
 It can also optionally convert the thread to a GUI thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0f716b13-e502-5ab4-3a37-8e5da6d6c5e2.htm">IsHungAppWindow(IntPtr)</a>
                  </td>
                  <td>
 Determines whether the system considers that a specified application is not responding.
 An application is considered to be not responding if it is not waiting for input, is not in startup processing, 
 and has not called PeekMessage within the internal timeout period of 5 seconds. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="584800dd-86bc-e218-792e-42465345675e.htm">IsHungAppWindow(SafeHandle)</a>
                  </td>
                  <td>
 Determines whether the system considers that a specified application is not responding.
 An application is considered to be not responding if it is not waiting for input, is not in startup processing, 
 and has not called PeekMessage within the internal timeout period of 5 seconds. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6904b9ff-bcba-b5bd-ed2a-4209a4c70bda.htm">IsIconic(IntPtr)</a>
                  </td>
                  <td>
 Determines whether the specified window is minimized (iconic). 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d993a6db-859c-9e59-e3cc-aca849f96e50.htm">IsIconic(SafeHandle)</a>
                  </td>
                  <td>
 Determines whether the specified window is minimized (iconic). 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7322eb4a-9090-e7c7-359f-4a5b3eea8757.htm">IsImmersiveProcess</a>
                  </td>
                  <td>
 Determines whether the process belongs to a Windows Store app.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cff46358-fb07-392b-9cef-0bf7a4c52c3e.htm">IsMenu(IntPtr)</a>
                  </td>
                  <td>
 Determines whether a handle is a menu handle. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="49d06f2c-9d29-1c79-de86-d9642ab98af0.htm">IsMenu(SafeHandle)</a>
                  </td>
                  <td>
 Determines whether a handle is a menu handle. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f89d60ee-033e-7701-630f-9a73b662ee12.htm">IsMouseInPointerEnabled</a>
                  </td>
                  <td>
 Indicates whether <a href="a3595ab5-daf9-9b88-22ec-2d6424438ce4.htm">EnableMouseInPointer(Boolean)</a> is set for the 
 mouse to act as a pointer input device and send WM_POINTER* messages.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="019816f7-0940-f236-af48-90a9bd74c19a.htm">IsProcessDPIAware</a>
                  </td>
                  <td>
 Determines whether the current process is dots per inch (dpi) aware 
 such that it adjusts the sizes of UI elements to compensate for the dpi setting.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="861e6da5-f9cd-cc16-36df-4810d102fbc9.htm">IsRectEmpty(NativeRectangle<span id="LST44177590_189" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 determines whether the specified <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> is empty. 
 An empty <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> is one that has no area; that is, 
 the coordinate of the right side is less than or equal to the coordinate of the left side, 
 or the coordinate of the bottom side is less than or equal to the coordinate of the top side.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cc9ebef0-c6db-ab37-7d72-948f4ca18aee.htm">IsRectEmpty(Rectangle<span id="LST44177590_190" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 determines whether the specified <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> is empty. 
 An empty <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> is one that has no area; that is, 
 the coordinate of the right side is less than or equal to the coordinate of the left side, 
 or the coordinate of the bottom side is less than or equal to the coordinate of the top side.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="43049406-0585-8b7c-f8bf-9b436117fc18.htm">IsValidDpiAwarenessContext</a>
                  </td>
                  <td>
 Determines if a specified DPI_AWARENESS_CONTEXT is valid and supported by the current system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e6e51605-3809-337a-f15f-4abaabaea5bd.htm">IsWindow(IntPtr)</a>
                  </td>
                  <td>
 Determines whether the specified window handle identifies an existing window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fc821e3d-ed43-314a-eb1d-5832b9471310.htm">IsWindow(SafeHandle)</a>
                  </td>
                  <td>
 Determines whether the specified window handle identifies an existing window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f8046f63-170f-51a7-c805-b80a13a51a28.htm">IsWindowEnabled(IntPtr)</a>
                  </td>
                  <td>
 Determines whether the specified window is enabled for mouse and keyboard input.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5b08099b-e73e-8a1b-68eb-0ab067b4c018.htm">IsWindowEnabled(SafeHandle)</a>
                  </td>
                  <td>
 Determines whether the specified window is enabled for mouse and keyboard input.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ec4171a6-0e10-59cb-23e7-5e57c7733b11.htm">IsWindowUnicode</a>
                  </td>
                  <td>
 Determines whether the specified window is a native Unicode window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6b23ec64-4d66-61f2-da95-63b91412c7ae.htm">IsWindowVisible(IntPtr)</a>
                  </td>
                  <td>
 Determines the visibility state of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5fc36e1d-2dd1-73b4-cd0b-33ac12bca0a3.htm">IsWindowVisible(SafeHandle)</a>
                  </td>
                  <td>
 Determines the visibility state of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d8cb4ad6-8d54-2ed4-c493-c11f7fd828d0.htm">IsWinEventHookInstalled</a>
                  </td>
                  <td>
 Determines whether there is an installed WinEvent hook that might be notified of a specified event.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="942305c2-358c-ce9b-b083-b607b2f8fc80.htm">IsWow64Message</a>
                  </td>
                  <td>
 Determines whether the last message read from the current thread's queue originated from a WOW64 process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="83e6cee3-fe5f-184d-bf5a-5e199051a014.htm">IsZoomed(IntPtr)</a>
                  </td>
                  <td>
 Determines whether a window is maximized.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="565a0082-184e-d17d-4903-ba1453ccd09b.htm">IsZoomed(SafeHandle)</a>
                  </td>
                  <td>
 Determines whether a window is maximized.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7fb025cd-014f-5572-5eb7-ccce0005db83.htm">KeybdEvent(Byte, Byte, KeybdEventFlags, UIntPtr)</a>
                  </td>
                  <td>
 Synthesizes a keystroke. 
 <p />
 The system can use such a synthesized keystroke to generate a 
 <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_KeyDown</a> or <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_KeyUp</a> message. 
 <p />
 The keyboard driver's interrupt handler calls the <a href="5f7f369a-f7e0-9d24-9e20-eb5a7a6627aa.htm">KeybdEvent(VirtualKeys, Byte, KeybdEventFlags, UIntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5f7f369a-f7e0-9d24-9e20-eb5a7a6627aa.htm">KeybdEvent(VirtualKeys, Byte, KeybdEventFlags, UIntPtr)</a>
                  </td>
                  <td>
 Synthesizes a keystroke. 
 <p />
 The system can use such a synthesized keystroke to generate a 
 <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_KeyDown</a> or <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_KeyUp</a> message. 
 <p />
 The keyboard driver's interrupt handler calls the <a href="5f7f369a-f7e0-9d24-9e20-eb5a7a6627aa.htm">KeybdEvent(VirtualKeys, Byte, KeybdEventFlags, UIntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="65f81c80-96f3-4508-7078-a7481c000122.htm">LoadCursor</a>
                  </td>
                  <td>
 Loads the specified cursor resource from the executable (.EXE) file associated with an application instance.
 <p />
 Note: This function has been superseded by the <a href="9a65e2bf-e610-69b1-45b2-65824a768db1.htm">LoadImage(IntPtr, String, LoadImageType, Int32, Int32, LoadImageFlags)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="750485b8-c30e-e08c-168e-7e0d33332697.htm">LoadCursorFromFile</a>
                  </td>
                  <td>
 Creates a cursor based on data contained in a file. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7967c2ae-af7c-7d0c-aea3-124fc4ed2064.htm">LoadIcon</a>
                  </td>
                  <td>
 Loads the specified icon resource from the executable (.exe) file associated with an application instance.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9a65e2bf-e610-69b1-45b2-65824a768db1.htm">LoadImage</a>
                  </td>
                  <td>
 Loads an icon, cursor, animated cursor, or bitmap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="28ef14b1-91f8-4115-ff4b-72ba4afd4843.htm">LoadKeyboardLayout</a>
                  </td>
                  <td>
 Loads a new input locale identifier (formerly called the keyboard layout) into the system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4bb0e774-9e4b-0ba6-4d7e-9d0c39713f3a.htm">LoadString</a>
                  </td>
                  <td>
 Loads a string resource from the executable file associated with a specified module, 
 copies the string into a buffer, and appends a terminating null character.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b3fd52c9-a7c9-11c4-bec1-655af6934881.htm">LockSetForegroundWindow</a>
                  </td>
                  <td>
 The foreground process can call this function to disable calls to the 
 <a href="c9b5f546-c28b-def3-13d2-694fe9989f40.htm">SetForegroundWindow(IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="caaa7434-f1c4-6650-cf4c-6fbb4558c832.htm">LockWindowUpdate</a>
                  </td>
                  <td>
 Disables or enables drawing in the specified window. Only one window can be locked at a time.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cf58b021-7608-c406-afb9-543f12faf07f.htm">LockWorkStation</a>
                  </td>
                  <td>
 Locks the workstation's display.
 <p />
 Locking a workstation protects it from unauthorized use.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8128b903-c9b7-2060-6700-442c40f49b1a.htm">LogicalToPhysicalPoint</a>
                  </td>
                  <td>
 Converts the logical coordinates of a point in a window to physical coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1c0824a6-048a-487e-3da6-2d0c939e9500.htm">MapDialogRect(IntPtr, NativeRectangle<span id="LST44177590_191" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the specified dialog box units to screen units (pixels). 
 <p />
 The function replaces the coordinates in the specified <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> structure with the 
 converted coordinates, which allows the structure to be used to create a dialog box or 
 position a control within a dialog box.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7f7da229-cbae-380c-4284-9539769b0294.htm">MapDialogRect(IntPtr, Rectangle<span id="LST44177590_192" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the specified dialog box units to screen units (pixels). 
 <p />
 The function replaces the coordinates in the specified <span class="noLink">Rectangle</span> structure with the 
 converted coordinates, which allows the structure to be used to create a dialog box or 
 position a control within a dialog box.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e4220620-af48-e793-0565-9df05365bd15.htm">MapVirtualKey</a>
                  </td>
                  <td>
 Translates (maps) a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code.
 <p />
 To specify a handle to the keyboard layout to use for translating the specified code, 
 use the <a href="78e74e43-9636-9063-6728-9d92aca73a36.htm">MapVirtualKeyEx(UInt32, VirtualKeyMappingTypes, IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="78e74e43-9636-9063-6728-9d92aca73a36.htm">MapVirtualKeyEx</a>
                  </td>
                  <td>
 Translates (maps) a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code. 
 <p />
 The function translates the codes using the input language and an input locale identifier.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="00fde3d6-2afc-7f8d-dc27-f53b43746d63.htm">MapWindowPoints(IntPtr, IntPtr, NativePoint<span id="LST44177590_193" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Converts (maps) a set of points from a coordinate space relative to one window to a coordinate space relative to another window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a710732d-9798-622c-5c17-43bd84ba3256.htm">MapWindowPoints(IntPtr, IntPtr, NativeRectangle<span id="LST44177590_194" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Converts (maps) a set of points from a coordinate space relative to one window to a coordinate space relative to another window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="22a02f5a-8d7b-5f3f-9e80-0f5455dec7f5.htm">MapWindowPoints(IntPtr, IntPtr, Point<span id="LST44177590_195" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Converts (maps) a set of points from a coordinate space relative to one window to a coordinate space relative to another window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="29eff2fb-e28d-9d5a-69e8-f253f4e4a38e.htm">MapWindowPoints(IntPtr, IntPtr, Rectangle<span id="LST44177590_196" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Converts (maps) a set of points from a coordinate space relative to one window to a coordinate space relative to another window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="69a96834-1fa5-c5d5-04c5-3a981715a164.htm">MapWindowPoints(SafeHandle, SafeHandle, NativePoint<span id="LST44177590_197" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Converts (maps) a set of points from a coordinate space relative to one window to a coordinate space relative to another window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c2e60ca0-5676-1de9-3740-f9aaec948b69.htm">MapWindowPoints(SafeHandle, SafeHandle, NativeRectangle<span id="LST44177590_198" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Converts (maps) a set of points from a coordinate space relative to one window to a coordinate space relative to another window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e17f9dce-6d7b-fc6d-021f-e2c8ec6288ac.htm">MapWindowPoints(SafeHandle, SafeHandle, Point<span id="LST44177590_199" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Converts (maps) a set of points from a coordinate space relative to one window to a coordinate space relative to another window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f5ee68c4-2129-9cbe-0193-8f8e6e237ba1.htm">MapWindowPoints(SafeHandle, SafeHandle, Rectangle<span id="LST44177590_200" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Converts (maps) a set of points from a coordinate space relative to one window to a coordinate space relative to another window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="39f7e2a5-bd86-2deb-dcb4-1ab017bee545.htm">MessageBeep</a>
                  </td>
                  <td>
 Plays a waveform sound.
 <p />
 The waveform sound for each sound type is identified by an entry in the registry.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8050d47d-c358-eb4c-b148-c254c089c284.htm">MonitorFromPoint(NativePoint, MonitorFromFlags)</a>
                  </td>
                  <td>
 Retrieves a handle to the display monitor that contains a specified point.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="017921e4-abd5-cba5-f19c-4d1b8f978b9d.htm">MonitorFromPoint(Point, MonitorFromFlags)</a>
                  </td>
                  <td>
 Retrieves a handle to the display monitor that contains a specified point.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7cbaf112-1603-f36b-d471-75821e276c7b.htm">MonitorFromRect(NativeRectangle<span id="LST44177590_201" data-languageSpecificText="cpp=%"></span>, MonitorFromFlags)</a>
                  </td>
                  <td>
 Retrieves a handle to the display monitor that has the largest area of intersection with a specified rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5b3ab170-cd7b-c387-db81-74f13e229753.htm">MonitorFromRect(Rectangle<span id="LST44177590_202" data-languageSpecificText="cpp=%"></span>, MonitorFromFlags)</a>
                  </td>
                  <td>
 Retrieves a handle to the display monitor that has the largest area of intersection with a specified rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2d14edb5-0089-1a81-91bd-4585f0d525e5.htm">MonitorFromWindow(IntPtr, MonitorFromFlags)</a>
                  </td>
                  <td>
 Retrieves a handle to the display monitor that has the largest area of intersection with the 
 bounding rectangle of a specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="33b00a7c-5a74-cbdb-a8a2-81209deeed16.htm">MonitorFromWindow(SafeHandle, MonitorFromFlags)</a>
                  </td>
                  <td>
 Retrieves a handle to the display monitor that has the largest area of intersection with the 
 bounding rectangle of a specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9855e2af-ce35-22f5-158e-6ed590539bca.htm">MouseEvent</a>
                  </td>
                  <td>
 Synthesizes mouse motion and button clicks.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="6efca09c-d2a7-14cd-3f0b-2cfdee6436b4.htm">MoveWindow(IntPtr, Int32, Int32, Int32, Int32, Boolean)</a>
                  </td>
                  <td>
 Changes the position and dimensions of the specified window.
 <p />
 For a top-level window, the position and dimensions are relative to the upper-left corner of the screen.
 <p />
 For a child window, they are relative to the upper-left corner of the parent window's client area.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="61431309-0c71-26a0-d4a1-1192a116d14b.htm">MoveWindow(SafeHandle, Int32, Int32, Int32, Int32, Boolean)</a>
                  </td>
                  <td>
 Changes the position and dimensions of the specified window.
 <p />
 For a top-level window, the position and dimensions are relative to the upper-left corner of the screen.
 <p />
 For a child window, they are relative to the upper-left corner of the parent window's client area.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f8c88c32-92e6-7861-5d87-2bddd021d8c0.htm">NotifyWinEvent</a>
                  </td>
                  <td>
 Signals the system that a predefined event occurred. 
 <p />
 If any client applications have registered a hook function for the event, 
 the system calls the client's hook function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="85431c96-11c1-6289-51ca-275f4cd37433.htm">OffsetRect(NativeRectangle<span id="LST44177590_203" data-languageSpecificText="cpp=%"></span>, Int32, Int32)</a>
                  </td>
                  <td>
 Moves the specified <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> by the specified offsets. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="94116804-b2c0-0adc-4e96-500f6b8d19f5.htm">OffsetRect(Rectangle<span id="LST44177590_204" data-languageSpecificText="cpp=%"></span>, Int32, Int32)</a>
                  </td>
                  <td>
 Moves the specified <span class="noLink">Rectangle</span> by the specified offsets. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0de0b787-5f67-6885-2c9a-14b57667c877.htm">OpenClipboard</a>
                  </td>
                  <td>
 Opens the clipboard for examination and prevents other applications from modifying the clipboard content.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="149defea-4e44-3f65-f5d3-2ccedab55064.htm">OpenIcon(IntPtr)</a>
                  </td>
                  <td>
 Restores a minimized (iconic) window to its previous size and position; it then activates the window. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="44782141-9315-83b3-94fd-270617d84a80.htm">OpenIcon(SafeHandle)</a>
                  </td>
                  <td>
 Restores a minimized (iconic) window to its previous size and position; it then activates the window. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="260a46e8-3a45-3f71-f8b0-ddbde7e86c98.htm">OpenIconicWindow(IntPtr)</a>
                  </td>
                  <td>
 Restores a minimized (iconic) window to its previous size and position; it then activates the window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="27a3dfbc-c628-c666-27b4-e475d436afe6.htm">OpenIconicWindow(SafeHandle)</a>
                  </td>
                  <td>
 Restores a minimized (iconic) window to its previous size and position; it then activates the window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9ddfdc9f-f422-ca4a-e2b9-836961993813.htm">PeekMessage(NativeMessage<span id="LST44177590_205" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32, UInt32, PeekMessageFlags)</a>
                  </td>
                  <td>
 Dispatches incoming sent messages, checks the thread message queue for a posted message, and retrieves the message (if any exist).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a852b48e-abbf-15a9-97de-5cd1705d31b2.htm">PeekMessage(NativeMessage<span id="LST44177590_206" data-languageSpecificText="cpp=%"></span>, HandleRef, UInt32, UInt32, PeekMessageFlags)</a>
                  </td>
                  <td>
 Dispatches incoming sent messages, checks the thread message queue for a posted message, and retrieves the message (if any exist).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ae507033-9fd7-54bd-a832-ae75d82ccf89.htm">PhysicalToLogicalPoint(IntPtr, NativePoint<span id="LST44177590_207" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the physical coordinates of a point in a window to logical coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bfb9985e-8cd8-5ad3-4fbf-41587ad393ee.htm">PhysicalToLogicalPoint(IntPtr, Point<span id="LST44177590_208" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the physical coordinates of a point in a window to logical coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="901072e1-06d4-d122-9e4e-dd4c5121eec9.htm">PostMessage(HandleRef, EditControlMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified edit-control (typically a <span class="noLink">TextBox</span>) and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2d2e795f-3825-18be-3f8e-59498a52747c.htm">PostMessage(HandleRef, ListBoxMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified <span class="noLink">ListBox</span> control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9a289602-c27e-e4fb-16d7-ee15e6989032.htm">PostMessage(HandleRef, ListViewMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified <span class="noLink">ListView</span> control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8f5150c2-673d-7fe8-7aec-43d49a18f872.htm">PostMessage(HandleRef, ProgressBarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified <span class="noLink">ProgressBar</span> control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9fc097f1-3734-2018-6c0e-aec6dd5746a1.htm">PostMessage(HandleRef, ToolbarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified ToolBar control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c1e1628a-90f4-99a3-9c72-7fed97dc67f8.htm">PostMessage(HandleRef, WindowMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="25cc018b-db51-af25-eac6-c9a786605359.htm">PostMessage(HandleRef, WindowMessages, IntPtr, String)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="17988418-d3af-20be-ba86-1e1e8867b1d5.htm">PostMessage(HandleRef, WindowMessages, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="105ab4f7-98c2-456f-d16e-30687f76f811.htm">PostMessage(HandleRef, Int32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9651f01e-be2c-9112-6e46-905c02c8be8f.htm">PostMessage(HandleRef, Int32, IntPtr, String)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f94ee657-2064-1740-03ba-7939cd6da9f0.htm">PostMessage(HandleRef, Int32, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="caa51048-1599-ba26-e170-e9cd12c0ad82.htm">PostMessage(IntPtr, EditControlMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified edit-control (typically a <span class="noLink">TextBox</span>) and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e581a4c4-61f4-d34d-378d-626eec17dafb.htm">PostMessage(IntPtr, ListBoxMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified <span class="noLink">ListBox</span> control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a1c05bf5-f981-99b7-c60b-a0a12378f479.htm">PostMessage(IntPtr, ListViewMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified <span class="noLink">ListView</span> control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a63a4911-6fe6-60c3-48fe-28589c340ad9.htm">PostMessage(IntPtr, ProgressBarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified <span class="noLink">ProgressBar</span> control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="26ae9b72-21b3-e6cf-5b7f-0e7b7daa7475.htm">PostMessage(IntPtr, ToolbarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified ToolBar control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3815db6e-cb6d-1387-6a46-8256bc3e198d.htm">PostMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dcbd1a3e-65b1-03ba-c530-681509417f12.htm">PostMessage(IntPtr, WindowMessages, IntPtr, String)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6949f7c2-c904-f4ef-f1a1-144bf710466a.htm">PostMessage(IntPtr, WindowMessages, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="43aad658-ed4e-d3fe-fedd-1efbb37cdcf7.htm">PostMessage(IntPtr, Int32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8418e836-8c34-6cdd-fc05-cf8ed110a946.htm">PostMessage(IntPtr, Int32, IntPtr, String)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="796ad112-a7fb-de70-4cef-ab60c62a0a58.htm">PostMessage(IntPtr, Int32, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d41e083f-90e1-e3a8-65cc-0446df54db51.htm">PostMessage(SafeHandle, EditControlMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified edit-control (typically a <span class="noLink">TextBox</span>) and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b7f40483-d802-74a5-d000-51ea5e61243b.htm">PostMessage(SafeHandle, ListBoxMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified <span class="noLink">ListBox</span> control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="087811cc-c5e2-1c5b-c6db-3928059f5e29.htm">PostMessage(SafeHandle, ListViewMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified <span class="noLink">ListView</span> control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b9d5b1d4-b7dd-8c51-a3ff-96ebf1525260.htm">PostMessage(SafeHandle, ProgressBarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified <span class="noLink">ProgressBar</span> control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d6af9212-c3de-6759-2b81-58e32a74203b.htm">PostMessage(SafeHandle, ToolbarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified ToolBar control and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d1fb2164-3c81-2cdf-a150-b1caa46900ca.htm">PostMessage(SafeHandle, WindowMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="820453fa-fead-599c-6c69-2057e4ce8704.htm">PostMessage(SafeHandle, WindowMessages, IntPtr, String)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="765a0991-b6eb-9d3b-1e75-fcafedb51bd1.htm">PostMessage(SafeHandle, WindowMessages, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="759760c7-22b0-7135-27d8-095acdb4f237.htm">PostMessage(SafeHandle, Int32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c66766a9-6b3d-80e2-f6bb-721332ec7ac8.htm">PostMessage(SafeHandle, Int32, IntPtr, String)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="053038b7-e82c-5152-6c92-1a83fdbeff3d.htm">PostMessage(SafeHandle, Int32, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Places (posts) a message in the message queue associated with the thread that created 
 the specified window and returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ec2d0876-8cdd-63f9-b720-ee77f17cde94.htm">PostQuitMessage</a>
                  </td>
                  <td>
 Indicates to the system that a thread has made a request to terminate (quit). 
 <p />
 It is typically used in response to a <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_Destroy</a> message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3151eaa3-bb15-8f25-a6f8-91b6e546eb49.htm">PostThreadMessage(Int32, WindowMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message to the message queue of the specified thread.
 <p />
 It returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="adc7b647-a631-ac25-96de-a41fa562f343.htm">PostThreadMessage(Int32, Int32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Places (posts) a message to the message queue of the specified thread.
 <p />
 It returns without waiting for the thread to process the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b9eb24e7-ca6d-57e4-5322-03a721708778.htm">PtInRect(NativeRectangle<span id="LST44177590_209" data-languageSpecificText="cpp=%"></span>, NativePoint)</a>
                  </td>
                  <td>
 Determines whether the specified point lies within the specified rectangle.
 <p />
 A point is within a rectangle if it lies on the left or top side or is within all four sides.
 <p />
 A point on the right or bottom side is considered outside the rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3f887197-d710-cd3b-48cf-01ddc017fe83.htm">PtInRect(Rectangle<span id="LST44177590_210" data-languageSpecificText="cpp=%"></span>, Point)</a>
                  </td>
                  <td>
 Determines whether the specified point lies within the specified rectangle.
 <p />
 A point is within a rectangle if it lies on the left or top side or is within all four sides.
 <p />
 A point on the right or bottom side is considered outside the rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b76f23dd-4865-03fb-37ec-8c8f0096327f.htm">QueryDisplayConfig(QueryDisplayConfigFlags, UInt32<span id="LST44177590_211" data-languageSpecificText="cpp=%"></span>, <span id="LST44177590_212" data-languageSpecificText="cpp=array&lt;"></span>DisplayConfigPathInfo<span id="LST44177590_213" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32<span id="LST44177590_214" data-languageSpecificText="cpp=%"></span>, <span id="LST44177590_215" data-languageSpecificText="cpp=array&lt;"></span>DisplayConfigModeInfo<span id="LST44177590_216" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, DisplayConfigTopologyId<span id="LST44177590_217" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves information about all possible display paths for 
 all display devices, or views, in the current setting.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8deeee1c-97c6-6354-802f-6c2375a2ea1a.htm">QueryDisplayConfig(QueryDisplayConfigFlags, UInt32<span id="LST44177590_218" data-languageSpecificText="cpp=%"></span>, <span id="LST44177590_219" data-languageSpecificText="cpp=array&lt;"></span>DisplayConfigPathInfo<span id="LST44177590_220" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32<span id="LST44177590_221" data-languageSpecificText="cpp=%"></span>, <span id="LST44177590_222" data-languageSpecificText="cpp=array&lt;"></span>DisplayConfigModeInfo<span id="LST44177590_223" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IntPtr)</a>
                  </td>
                  <td>
 Retrieves information about all possible display paths for 
 all display devices, or views, in the current setting.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dbfec7b9-65cd-e7ef-cd13-8d108a6f25da.htm">RealChildWindowFromPoint(IntPtr, NativePoint)</a>
                  </td>
                  <td>
 Retrieves a handle to the child window at the specified point. 
 <p />
 The search is restricted to immediate child windows; grandchildren and deeper descendant windows are not searched.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="677a6c94-5076-0437-c781-23117c6bb021.htm">RealChildWindowFromPoint(IntPtr, Point)</a>
                  </td>
                  <td>
 Retrieves a handle to the child window at the specified point. 
 <p />
 The search is restricted to immediate child windows; grandchildren and deeper descendant windows are not searched.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d71546a2-d1f6-d6fc-e9e1-1190de0893dc.htm">RealGetWindowClass</a>
                  </td>
                  <td>
 Retrieves a string that specifies the window type.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a8a147d2-17f8-2001-448f-2736e727736b.htm">RedrawWindow(IntPtr, NativeRectangle<span id="LST44177590_224" data-languageSpecificText="cpp=%"></span>, IntPtr, RedrawWindowFlags)</a>
                  </td>
                  <td>
 Updates the specified rectangle or region in a window's client area.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8ab16c47-b733-17c3-cd17-cec5af3124d3.htm">RedrawWindow(IntPtr, Rectangle<span id="LST44177590_225" data-languageSpecificText="cpp=%"></span>, IntPtr, RedrawWindowFlags)</a>
                  </td>
                  <td>
 Updates the specified rectangle or region in a window's client area.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dd0a8de3-4cd5-8f97-479e-ab6fcdec78d7.htm">RedrawWindow(IntPtr, IntPtr, IntPtr, RedrawWindowFlags)</a>
                  </td>
                  <td>
 Updates the specified rectangle or region in a window's client area.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2a4de98d-e62b-1179-4236-dde70baf064d.htm">RedrawWindow(SafeHandle, NativeRectangle<span id="LST44177590_226" data-languageSpecificText="cpp=%"></span>, IntPtr, RedrawWindowFlags)</a>
                  </td>
                  <td>
 Updates the specified rectangle or region in a window's client area.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d72c7517-45f4-bc5f-4c74-c02465ecb383.htm">RedrawWindow(SafeHandle, Rectangle<span id="LST44177590_227" data-languageSpecificText="cpp=%"></span>, IntPtr, RedrawWindowFlags)</a>
                  </td>
                  <td>
 Updates the specified rectangle or region in a window's client area.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2ce1655c-41aa-5870-a8fd-5518c3371340.htm">RedrawWindow(SafeHandle, IntPtr, IntPtr, RedrawWindowFlags)</a>
                  </td>
                  <td>
 Updates the specified rectangle or region in a window's client area.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e882cec8-880d-43c8-4626-e0370b8cecd1.htm">RegisterHotKey(IntPtr, Int32, UInt32, UInt32)</a>
                  </td>
                  <td>
 Defines a system-wide hotkey.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="93a4ea72-4625-97ab-b60c-83970ce3fbb7.htm">RegisterHotKey(SafeHandle, Int32, UInt32, UInt32)</a>
                  </td>
                  <td>
 Defines a system-wide hotkey.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="96225eee-b021-327b-23b7-5f304dc420cf.htm">RegisterRawInputDevices</a>
                  </td>
                  <td>
 Registers the devices that supply the raw input data.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b8c0a950-50b1-1aa7-55ac-19d417e6da6e.htm">RegisterWindowMessage</a>
                  </td>
                  <td>
 Defines a new window message that is guaranteed to be unique throughout the system.
 <p />
 The message value can be used when sending or posting messages.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a53a77e2-2578-2c36-b066-5a48a91d1287.htm">ReleaseCapture</a>
                  </td>
                  <td>
 Releases the mouse capture from a window in the current thread and restores normal mouse input processing. 
 <p />
 A window that has captured the mouse receives all mouse input, regardless of the position of the cursor, 
 except when a mouse button is clicked while the cursor hot spot is in the window of another thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fdd402c4-267e-a500-c165-b939555f71ba.htm">ReleaseDC(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Releases a device context (DC), freeing it for use by other applications.
 <p />
 The effect of the <a href="fdd402c4-267e-a500-c165-b939555f71ba.htm">ReleaseDC(IntPtr, IntPtr)</a> function depends on the type of DC. 
 It frees only common and window DCs. 
 It has no effect on class or private DCs.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="07013ec4-c7a4-8577-786e-252f795f8236.htm">ReleaseDC(SafeHandle, IntPtr)</a>
                  </td>
                  <td>
 Releases a device context (DC), freeing it for use by other applications.
 <p />
 The effect of the <a href="fdd402c4-267e-a500-c165-b939555f71ba.htm">ReleaseDC(IntPtr, IntPtr)</a> function depends on the type of DC. 
 It frees only common and window DCs. 
 It has no effect on class or private DCs.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bd23b417-7bc2-cbc1-cb23-03f06aa7df77.htm">ReplyMessage</a>
                  </td>
                  <td>
 Replies to a message sent from another thread by the <a href="b0d6302f-ec01-911b-f49b-a27801e96cb0.htm">SendMessage(IntPtr, EditControlMessages, IntPtr, IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="758421da-9209-f843-42fa-33071549191e.htm">ScreenToClient(IntPtr, NativePoint<span id="LST44177590_228" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the screen coordinates of a specified point on the screen to client-area coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f795adeb-eee0-189e-e6d9-a54195f8b5ea.htm">ScreenToClient(IntPtr, Point<span id="LST44177590_229" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the screen coordinates of a specified point on the screen to client-area coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="88ca4381-43b0-ab80-606c-f4985c069dbd.htm">ScreenToClient(SafeHandle, NativePoint<span id="LST44177590_230" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the screen coordinates of a specified point on the screen to client-area coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e76f64dd-ec69-c260-519c-d052b2fb16ef.htm">ScreenToClient(SafeHandle, Point<span id="LST44177590_231" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Converts the screen coordinates of a specified point on the screen to client-area coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3f37fe7c-bd98-5930-5690-70fc4f678c67.htm">SendInput</a>
                  </td>
                  <td>
 Synthesizes keystrokes, mouse motions, and button clicks.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e3c11563-72bc-b0ef-ed39-ff555c10f1d2.htm">SendMessage(HandleRef, EditControlMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a edit-control (typically a <span class="noLink">TextBox</span>).
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a6cd6e47-bf3a-9ca3-4aec-f146075478be.htm">SendMessage(HandleRef, ListBoxMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListBox</span> control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5b83e79e-7f4c-dd15-ddbc-bfe8af1dadde.htm">SendMessage(HandleRef, ListViewMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListView</span> control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b16e89e1-aed8-e1de-4095-1cf3933c9e5e.htm">SendMessage(HandleRef, ProgressBarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ProgressBar</span> control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="340b29da-7ba5-7560-7795-dbcfaa3f3eae.htm">SendMessage(HandleRef, ToolbarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3b6805e7-7c73-1bec-a7d3-6f0cbf710b81.htm">SendMessage(HandleRef, ToolbarMessages, IntPtr, String)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9b6329b8-11aa-7c55-79f0-bbe1f670f15a.htm">SendMessage(HandleRef, ToolbarMessages, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="61d86a25-b003-e276-1998-cc1be20ecad9.htm">SendMessage(HandleRef, WindowMessages, IntPtr, Point<span id="LST44177590_232" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4e870e7b-74a1-7430-f886-695e08177fb1.htm">SendMessage(HandleRef, WindowMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="29295852-d4ca-d618-38bb-f968c23455e3.htm">SendMessage(HandleRef, WindowMessages, IntPtr, String)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fdb9e31f-ab8c-7f2e-1997-8d86fc7668db.htm">SendMessage(HandleRef, WindowMessages, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ccf81876-a5cb-4b51-f009-b82a5a3d9227.htm">SendMessage(HandleRef, Int32, IntPtr, Point<span id="LST44177590_233" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a9893a8b-853a-a996-43ea-febd59ef0e7e.htm">SendMessage(HandleRef, Int32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f368bb0f-a1cc-af45-33db-cacbbcb71f77.htm">SendMessage(HandleRef, Int32, IntPtr, String)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="048db1ec-4431-41c1-6cc8-41319e18ee75.htm">SendMessage(HandleRef, Int32, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b0d6302f-ec01-911b-f49b-a27801e96cb0.htm">SendMessage(IntPtr, EditControlMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a edit-control (typically a <span class="noLink">TextBox</span>).
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="eb9767fa-b2f5-e9b3-8c11-2707d270c106.htm">SendMessage(IntPtr, ListBoxMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListBox</span> control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="98c1f2a3-5683-df7a-6fe7-52bfe3049acb.htm">SendMessage(IntPtr, ListViewMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListView</span> control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="86f444e1-2deb-f5a7-aafd-6df0c94e68e4.htm">SendMessage(IntPtr, ProgressBarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ProgressBar</span> control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="055d213e-2997-11df-c6e6-6be76092aabf.htm">SendMessage(IntPtr, ToolbarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fe6586d2-ea60-6368-2969-755d00c141b0.htm">SendMessage(IntPtr, ToolbarMessages, IntPtr, String)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1a141866-df68-33dd-32a9-a8f1edcccb58.htm">SendMessage(IntPtr, ToolbarMessages, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="09b070fd-37a7-96db-a26e-483bb6dd3b70.htm">SendMessage(IntPtr, WindowMessages, IntPtr, Point<span id="LST44177590_234" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2f6ac9ae-13b6-9808-1fa3-baf01f386794.htm">SendMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="26a374dd-bd5c-87a3-4d79-22eb887e03e3.htm">SendMessage(IntPtr, WindowMessages, IntPtr, String)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b64d7ac3-8290-eaf1-57ea-c0b55d997f5e.htm">SendMessage(IntPtr, WindowMessages, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dc656586-9bdf-b5ae-1650-6973c8d52159.htm">SendMessage(IntPtr, Int32, IntPtr, Point<span id="LST44177590_235" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="920cac17-7c3f-5075-b979-746eaf72a879.htm">SendMessage(IntPtr, Int32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="56f4bccc-89b3-6ba8-6e07-41782d674d32.htm">SendMessage(IntPtr, Int32, IntPtr, String)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="baac74d4-71f7-1ed3-a045-97825610f408.htm">SendMessage(IntPtr, Int32, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6873e79a-42bd-6564-0227-c95d0e7e1107.htm">SendMessage(SafeHandle, EditControlMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a edit-control (typically a <span class="noLink">TextBox</span>).
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9d024b68-a130-2123-1e46-b7ca4f3ef8bb.htm">SendMessage(SafeHandle, ListBoxMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListBox</span> control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8c2c7939-f846-3a0d-1575-bc3d8f89ba0b.htm">SendMessage(SafeHandle, ListViewMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListView</span> control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e017fa7c-354a-732a-a6e1-3b3c6c6cab84.htm">SendMessage(SafeHandle, ProgressBarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ProgressBar</span> control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5cc54355-ad38-52f7-5fdc-021cc073a256.htm">SendMessage(SafeHandle, ToolbarMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="df42008d-a9b3-6e4a-428f-79d15568b872.htm">SendMessage(SafeHandle, ToolbarMessages, IntPtr, String)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5b57c512-f7e2-bd8c-5370-9c4976691d58.htm">SendMessage(SafeHandle, ToolbarMessages, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9ae529c3-f111-ae83-eb21-c2ba8bdb43fa.htm">SendMessage(SafeHandle, WindowMessages, IntPtr, Point<span id="LST44177590_236" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1d2b3d5f-1e7e-383c-7cca-3b63741797d7.htm">SendMessage(SafeHandle, WindowMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6ec8d247-c927-e157-638e-f9ce65e39f2b.htm">SendMessage(SafeHandle, WindowMessages, IntPtr, String)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="56f871e2-4a42-a761-3acd-52d3bd6e65fa.htm">SendMessage(SafeHandle, WindowMessages, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="910eb1bb-4509-e0b3-53d5-2916802d784c.htm">SendMessage(SafeHandle, Int32, IntPtr, Point<span id="LST44177590_237" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2d42daef-c8a9-ba5e-f1ed-e1f3f4f96965.htm">SendMessage(SafeHandle, Int32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="47821bb6-4db5-7d30-61c8-06a46309b88c.htm">SendMessage(SafeHandle, Int32, IntPtr, String)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="96f0b71b-cf7b-b467-cbda-0c27649b3a36.htm">SendMessage(SafeHandle, Int32, IntPtr, StringBuilder)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows.
 <p />
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f868749e-7182-34c9-41ae-9696c7cb96e3.htm">SendMessageTimeout(HandleRef, EditControlMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_238" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a edit-control (typically a <span class="noLink">TextBox</span>).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="70e21795-7084-e603-8fac-a84622b90c7d.htm">SendMessageTimeout(HandleRef, ListBoxMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_239" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListBox</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9325ada2-b282-a3e5-5254-3b1014cefc21.htm">SendMessageTimeout(HandleRef, ListViewMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_240" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListView</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2397fd60-543d-089e-6988-67be77eddd2f.htm">SendMessageTimeout(HandleRef, ProgressBarMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_241" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ProgressBar</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5e0d6f9a-7927-1dbf-11af-7dfd0715428c.htm">SendMessageTimeout(HandleRef, ToolbarMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_242" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="873f4c5a-6ce0-c1ca-2376-7fd369e9dd34.htm">SendMessageTimeout(HandleRef, WindowMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_243" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="63f3ac92-e0f3-de0e-f61f-91a80ae716a6.htm">SendMessageTimeout(HandleRef, WindowMessages, IntPtr, String, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_244" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="21a22f79-dc09-9e2d-00e2-45c8dfda9982.htm">SendMessageTimeout(HandleRef, WindowMessages, IntPtr, StringBuilder, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_245" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0053c244-acd3-a330-9e97-6a608f6d9389.htm">SendMessageTimeout(HandleRef, Int32, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_246" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3dd84921-3dcd-99c6-9732-cbe708d06b2f.htm">SendMessageTimeout(HandleRef, Int32, IntPtr, String, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_247" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ca0f321b-e8fd-2d4f-922d-91d79ba97200.htm">SendMessageTimeout(HandleRef, Int32, IntPtr, StringBuilder, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_248" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="06ee7383-a9be-846d-40cb-96c8e98e20ef.htm">SendMessageTimeout(IntPtr, EditControlMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_249" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a edit-control (typically a <span class="noLink">TextBox</span>).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3f59fd7d-2e31-87f0-576f-d04e5c482f99.htm">SendMessageTimeout(IntPtr, ListBoxMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_250" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListBox</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3cf46050-c2fc-501d-2ee2-60d3c9de3adb.htm">SendMessageTimeout(IntPtr, ListViewMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_251" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListView</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="56d751e6-506f-8498-563f-7601dbe716fd.htm">SendMessageTimeout(IntPtr, ProgressBarMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_252" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ProgressBar</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="35f285eb-7bcb-fd0e-2f0e-5395750d8744.htm">SendMessageTimeout(IntPtr, ToolbarMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_253" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8a37173c-7669-1055-ed94-311ba62ed23b.htm">SendMessageTimeout(IntPtr, WindowMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_254" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="10198284-1f9d-7665-f33c-e3f6db7fdeec.htm">SendMessageTimeout(IntPtr, WindowMessages, IntPtr, String, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_255" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bb774e44-34d3-c950-38a1-b1b98b85413a.htm">SendMessageTimeout(IntPtr, WindowMessages, IntPtr, StringBuilder, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_256" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4081bf8c-bbbc-5684-22a5-63d8141eedf1.htm">SendMessageTimeout(IntPtr, Int32, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_257" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bfe85755-9c17-171e-e3ba-6de10a6a8152.htm">SendMessageTimeout(IntPtr, Int32, IntPtr, String, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_258" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a348649b-867f-d618-ad44-0245a8b67983.htm">SendMessageTimeout(IntPtr, Int32, IntPtr, StringBuilder, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_259" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="83944c80-d0c5-cced-d0dc-53a06918c185.htm">SendMessageTimeout(SafeHandle, EditControlMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_260" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a edit-control (typically a <span class="noLink">TextBox</span>).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="37b84c15-4d09-2f5a-5ce8-d15830a61fd5.htm">SendMessageTimeout(SafeHandle, ListBoxMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_261" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListBox</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="553183e3-30d8-7427-d755-992af836b15a.htm">SendMessageTimeout(SafeHandle, ListViewMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_262" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ListView</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c84f1b97-9650-a50e-95f1-aa0d72105393.htm">SendMessageTimeout(SafeHandle, ProgressBarMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_263" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a <span class="noLink">ProgressBar</span> control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="73f972f8-2d20-9baa-766f-e44f1b258375.htm">SendMessageTimeout(SafeHandle, ToolbarMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_264" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a ToolBar control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7de2d3be-4b0d-c04d-f4e6-4ce3c8a9627e.htm">SendMessageTimeout(SafeHandle, WindowMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_265" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="96246415-862b-4c2c-9c52-68bc6fa488f3.htm">SendMessageTimeout(SafeHandle, WindowMessages, IntPtr, String, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_266" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b12a731e-a2d8-bb79-aa21-eab9e1aa8a61.htm">SendMessageTimeout(SafeHandle, WindowMessages, IntPtr, StringBuilder, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_267" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4e02b31c-bb8d-d9d9-c603-1116176336ab.htm">SendMessageTimeout(SafeHandle, Int32, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_268" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9a8feb35-5f78-39b5-57cf-eca0fe5c0946.htm">SendMessageTimeout(SafeHandle, Int32, IntPtr, String, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_269" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3e3377b9-7626-7bbc-6a17-a727e4bb3b8f.htm">SendMessageTimeout(SafeHandle, Int32, IntPtr, StringBuilder, SendMessageTimeoutFlags, Int32, IntPtr<span id="LST44177590_270" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sends the specified message to a window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2f9158b2-2dd4-60a2-35ab-a14067c9bdd8.htm">SendNotifyMessage(HandleRef, WindowMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows. 
 <p />
 If the window was created by the calling thread, 
 <a href="8fe71898-f5bc-30dd-507e-16eefc2adf34.htm">SendNotifyMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a> calls the window procedure for the window and does not 
 return until the window procedure has processed the message. 
 <p />
 If the window was created by a different thread, 
 <a href="8fe71898-f5bc-30dd-507e-16eefc2adf34.htm">SendNotifyMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a> passes the message to the window procedure and returns immediately; 
 it does not wait for the window procedure to finish processing the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dc9dc77d-ea90-6f08-2a94-14e2b4d568da.htm">SendNotifyMessage(HandleRef, UInt32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows. 
 <p />
 If the window was created by the calling thread, 
 <a href="8fe71898-f5bc-30dd-507e-16eefc2adf34.htm">SendNotifyMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a> calls the window procedure for the window and does not 
 return until the window procedure has processed the message. 
 <p />
 If the window was created by a different thread, 
 <a href="8fe71898-f5bc-30dd-507e-16eefc2adf34.htm">SendNotifyMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a> passes the message to the window procedure and returns immediately; 
 it does not wait for the window procedure to finish processing the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8fe71898-f5bc-30dd-507e-16eefc2adf34.htm">SendNotifyMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows. 
 <p />
 If the window was created by the calling thread, 
 <a href="8fe71898-f5bc-30dd-507e-16eefc2adf34.htm">SendNotifyMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a> calls the window procedure for the window and does not 
 return until the window procedure has processed the message. 
 <p />
 If the window was created by a different thread, 
 <a href="8fe71898-f5bc-30dd-507e-16eefc2adf34.htm">SendNotifyMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a> passes the message to the window procedure and returns immediately; 
 it does not wait for the window procedure to finish processing the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1d175732-ff65-4fcf-1d0e-0fa6301ce191.htm">SendNotifyMessage(IntPtr, UInt32, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Sends the specified message to a window or windows. 
 <p />
 If the window was created by the calling thread, 
 <a href="8fe71898-f5bc-30dd-507e-16eefc2adf34.htm">SendNotifyMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a> calls the window procedure for the window and does not 
 return until the window procedure has processed the message. 
 <p />
 If the window was created by a different thread, 
 <a href="8fe71898-f5bc-30dd-507e-16eefc2adf34.htm">SendNotifyMessage(IntPtr, WindowMessages, IntPtr, IntPtr)</a> passes the message to the window procedure and returns immediately; 
 it does not wait for the window procedure to finish processing the message.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6cd1f92e-f139-b57d-c669-5fa114048248.htm">SetActiveWindow(IntPtr)</a>
                  </td>
                  <td>
 Activates a window. The window must be attached to the calling thread's message queue.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a23ef196-ec55-45e2-3186-ec31776d2085.htm">SetActiveWindow(SafeHandle)</a>
                  </td>
                  <td>
 Activates a window. The window must be attached to the calling thread's message queue. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b650d43d-c2d5-81da-0953-98094c0d877f.htm">SetCapture</a>
                  </td>
                  <td>
 Sets the mouse capture to the specified window belonging to the current thread.
 <p /><a href="b650d43d-c2d5-81da-0953-98094c0d877f.htm">SetCapture(IntPtr)</a> captures mouse input either when the mouse is over the capturing window, 
 or when the mouse button was pressed while the mouse was over the capturing window and the button is still down.
 <p />
 Only one window at a time can capture the mouse.
 <p />
 If the mouse cursor is over a window created by another thread, 
 the system will direct mouse input to the specified window only if a mouse button is down.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8a6c7758-6a65-c6a1-cce0-0a7f481b70a5.htm">SetCaretBlinkTime</a>
                  </td>
                  <td>
 Sets the caret blink time to the specified number of milliseconds.
 <p />
 The blink time is the elapsed time, in milliseconds, required to invert the caret's pixels. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="193dafd6-8226-c9f8-7e1f-280632635ada.htm">SetCaretPos</a>
                  </td>
                  <td>
 Moves the caret to the specified coordinates.
 <p />
 If the window that owns the caret was created with the <span class="code">CS_OWNDC</span> class style, 
 then the specified coordinates are subject to the mapping mode of the device context associated with that window. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e5d8c5c6-6191-fcb3-28a0-027cc0904d0c.htm">SetClassLong(HandleRef, ClassLongValues, UInt32)</a>
                  </td>
                  <td>
 Replaces the specified 32-bit (long) value at the specified offset into the extra class memory 
 or the WNDCLASSEX structure for the class to which the specified window belongs.
 <p />
 Note: This function has been superseded by the <a href="102fca76-7db1-655d-047e-073f4ffe725f.htm">SetClassLongPtr(IntPtr, ClassLongValues, IntPtr)</a> function. 
 <p />
 To write code that is compatible with both 32-bit and 64-bit versions of Windows, 
 use <a href="102fca76-7db1-655d-047e-073f4ffe725f.htm">SetClassLongPtr(IntPtr, ClassLongValues, IntPtr)</a>. 
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="24c5df83-2efd-1355-2f9e-8a849624b8f7.htm">SetClassLong(IntPtr, ClassLongValues, UInt32)</a>
                  </td>
                  <td>
 Replaces the specified 32-bit (long) value at the specified offset into the extra class memory 
 or the WNDCLASSEX structure for the class to which the specified window belongs.
 <p />
 Note: This function has been superseded by the <a href="102fca76-7db1-655d-047e-073f4ffe725f.htm">SetClassLongPtr(IntPtr, ClassLongValues, IntPtr)</a> function. 
 <p />
 To write code that is compatible with both 32-bit and 64-bit versions of Windows, 
 use <a href="102fca76-7db1-655d-047e-073f4ffe725f.htm">SetClassLongPtr(IntPtr, ClassLongValues, IntPtr)</a>. 
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="564b7263-e998-d73b-152e-0947f105ba96.htm">SetClassLong(SafeHandle, ClassLongValues, UInt32)</a>
                  </td>
                  <td>
 Replaces the specified 32-bit (long) value at the specified offset into the extra class memory 
 or the WNDCLASSEX structure for the class to which the specified window belongs.
 <p />
 Note: This function has been superseded by the <a href="102fca76-7db1-655d-047e-073f4ffe725f.htm">SetClassLongPtr(IntPtr, ClassLongValues, IntPtr)</a> function. 
 <p />
 To write code that is compatible with both 32-bit and 64-bit versions of Windows, 
 use <a href="102fca76-7db1-655d-047e-073f4ffe725f.htm">SetClassLongPtr(IntPtr, ClassLongValues, IntPtr)</a>. 
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="3b14184c-d6b0-4b99-6c33-6cc6e94ca670.htm">SetClassLongPtr(HandleRef, ClassLongValues, IntPtr)</a>
                  </td>
                  <td>
 Replaces the specified value at the specified offset in the extra class memory 
 or the WNDCLASSEX structure for the class to which the specified window belongs.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="102fca76-7db1-655d-047e-073f4ffe725f.htm">SetClassLongPtr(IntPtr, ClassLongValues, IntPtr)</a>
                  </td>
                  <td>
 Replaces the specified value at the specified offset in the extra class memory 
 or the WNDCLASSEX structure for the class to which the specified window belongs.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="07b425b9-420a-6639-b286-8cade7c22326.htm">SetClassLongPtr(SafeHandle, ClassLongValues, IntPtr)</a>
                  </td>
                  <td>
 Replaces the specified value at the specified offset in the extra class memory 
 or the WNDCLASSEX structure for the class to which the specified window belongs.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1e808f63-8a15-642e-ee37-d070eb055792.htm">SetCursor</a>
                  </td>
                  <td>
 Sets the cursor shape.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dbd36574-5258-5a12-0ef9-c4f2abf3b89d.htm">SetCursorPos</a>
                  </td>
                  <td>
 Moves the cursor to the specified screen coordinates. 
 <p />
 If the new coordinates are not within the screen rectangle set by the most recent <a href="04805a39-435b-41b8-1adf-a95a26eb157f.htm">ClipCursor(NativeRectangle<span id="LST44177590_271" data-languageSpecificText="cpp=%"></span>)</a> function call, 
 the system automatically adjusts the coordinates so that the cursor stays within the rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="59db6c7a-b5b6-04a4-b9d3-5cb8f6772ed6.htm">SetDisplayConfig</a>
                  </td>
                  <td>
 Modifies the display topology, source, and target modes by exclusively enabling the 
 specified paths in the current session.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0dbd2e53-6715-816b-d5e7-b0b33e8868f8.htm">SetDoubleClickTime</a>
                  </td>
                  <td>
 Sets the double-click time for the mouse. 
 <p />
 A double-click is a series of two clicks of the mouse button, 
 the second occurring within a specified time after the first. 
 <p />
 The double-click time is the maximum number of milliseconds that may occur 
 between the first and second click of a double-click. 
 <p />
 The maximum double-click time is <span class="code">5000</span> milliseconds.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4f80311e-f1a0-a1f6-8780-7d5cd0c259f8.htm">SetFocus</a>
                  </td>
                  <td>
 Sets the keyboard focus to the specified window. 
 <p />
 The window must be attached to the calling thread's message queue.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c9b5f546-c28b-def3-13d2-694fe9989f40.htm">SetForegroundWindow(IntPtr)</a>
                  </td>
                  <td>
 Brings the thread that created the specified window into the foreground and activates the window. 
 <p />
 Keyboard input is directed to the window, and various visual cues are changed for the user. 
 <p />
 The system assigns a slightly higher priority to the thread that created the foreground window than it does to other threads.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="67cd7d34-3e61-eef5-d30b-25ec9182d14f.htm">SetForegroundWindow(SafeHandle)</a>
                  </td>
                  <td>
 Brings the thread that created the specified window into the foreground and activates the window. 
 <p />
 Keyboard input is directed to the window, and various visual cues are changed for the user. 
 <p />
 The system assigns a slightly higher priority to the thread that created the foreground window than it does to other threads.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e9204934-6d09-aa90-27f1-5a1ba9a2cae2.htm">SetKeyboardState</a>
                  </td>
                  <td>
 Copies an array of keyboard key states into the calling thread's keyboard input-state table. 
 <p />
 This is the same table accessed by the <a href="f23442e9-7966-df63-6f8d-0ca7b7edbde6.htm">GetKeyboardState(<span id="LST44177590_272" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST44177590_273" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a> 
 and <a href="bb3db5a5-2125-fcdd-3a65-047e810b2cb5.htm">GetKeyState(VirtualKeys)</a> functions. 
 <p />
 Changes made to this table do not affect keyboard input to any other thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0e88f680-bfe4-05eb-bcc8-a35b92f1480d.htm">SetLayeredWindowAttributes(IntPtr, UInt32, Int32, LayeredWindowAttributesFlags)</a>
                  </td>
                  <td>
 Sets the opacity and transparency color key of a layered window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d0fce8fe-7eed-7879-dd30-cee563932bfe.htm">SetLayeredWindowAttributes(SafeHandle, UInt32, Int32, LayeredWindowAttributesFlags)</a>
                  </td>
                  <td>
 Sets the opacity and transparency color key of a layered window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="215dd404-891f-e296-3132-911bd89e2492.htm">SetMenuInfo(IntPtr, MenuInfo<span id="LST44177590_274" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sets information for a specified menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="33cc093b-8819-0a7e-1d1b-3d0501a84d26.htm">SetMenuInfo(SafeHandle, MenuInfo<span id="LST44177590_275" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sets information for a specified menu.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fbdba3b6-eb57-f0dc-a854-130265d97bf1.htm">SetMenuItemBitmaps(IntPtr, UInt32, MenuPosition, SafeBitmapHandle, SafeBitmapHandle)</a>
                  </td>
                  <td>
 Associates the specified bitmap with a menu item. 
 <p />
 Whether the menu item is selected or clear, 
 the system displays the appropriate bitmap next to the menu item.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5d44580d-5211-6575-cc45-9cf88dda6368.htm">SetMenuItemBitmaps(IntPtr, UInt32, MenuPosition, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Associates the specified bitmap with a menu item. 
 <p />
 Whether the menu item is selected or clear, 
 the system displays the appropriate bitmap next to the menu item.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9d4addcd-a988-1ff0-74f3-96199867f5c1.htm">SetMenuItemBitmaps(SafeHandle, UInt32, MenuPosition, SafeBitmapHandle, SafeBitmapHandle)</a>
                  </td>
                  <td>
 Associates the specified bitmap with a menu item. 
 <p />
 Whether the menu item is selected or clear, 
 the system displays the appropriate bitmap next to the menu item.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d20cf54f-5e02-7d9b-fc7a-d9a7efbe92fb.htm">SetMenuItemBitmaps(SafeHandle, UInt32, MenuPosition, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Associates the specified bitmap with a menu item. 
 <p />
 Whether the menu item is selected or clear, 
 the system displays the appropriate bitmap next to the menu item.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="91a08280-6acd-c89d-4ef7-a3bfe50d4241.htm">SetMenuItemInfo(IntPtr, UInt32, Boolean, MenuItemInfo<span id="LST44177590_276" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Changes information about a menu item.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8ff69477-6a8a-d8b1-175b-b49f26a06e78.htm">SetMenuItemInfo(SafeHandle, UInt32, Boolean, MenuItemInfo<span id="LST44177590_277" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Changes information about a menu item.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="51609570-8c3e-d729-07ad-5be4dede8606.htm">SetMessageExtraInfo</a>
                  </td>
                  <td>
 Sets the extra message information for the current thread. 
 <p />
 Extra message information is an application- or driver-defined value associated with the current thread's message queue. 
 <p />
 An application can use the <a href="c96d81f8-0d55-0cf6-8b7c-582c7d81a7c6.htm">GetMessageExtraInfo<span id="LST44177590_278" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> function to retrieve a thread's extra message information.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5ede5c49-61e8-affc-8f57-3ea0199309cc.htm">SetParent(HandleRef, IntPtr)</a>
                  </td>
                  <td>
 Changes the parent window of the specified child window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="805ba647-53d3-ad45-9199-1902457b5795.htm">SetParent(HandleRef, HandleRef)</a>
                  </td>
                  <td>
 Changes the parent window of the specified child window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e65568a8-7eeb-4601-905c-ce07578cd1d5.htm">SetParent(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Changes the parent window of the specified child window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="31868669-43ad-8a7e-d6ac-3d0046364cd8.htm">SetParent(SafeHandle, IntPtr)</a>
                  </td>
                  <td>
 Changes the parent window of the specified child window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="43fdc499-3015-ef50-2f8b-85a858f44da7.htm">SetParent(SafeHandle, SafeHandle)</a>
                  </td>
                  <td>
 Changes the parent window of the specified child window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5a4610d1-0bd8-43da-6e4a-e20f4bc6fe02.htm">SetPhysicalCursorPos</a>
                  </td>
                  <td>
 Sets the position of the cursor in physical coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3ffbe270-c7e0-c4d3-cb78-9b53f894a347.htm">SetProcessDPIAware</a>
                  </td>
                  <td>
 Sets the process-default DPI awareness to system-DPI awareness. 
 <p />
 This is equivalent to calling <a href="934abca8-0912-7033-5f22-aa1dc507602c.htm">SetProcessDpiAwarenessContext(IntPtr)</a> with a 
 DPI_AWARENESS_CONTEXT value of DPI_AWARENESS_CONTEXT_SYSTEM_AWARE. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="934abca8-0912-7033-5f22-aa1dc507602c.htm">SetProcessDpiAwarenessContext</a>
                  </td>
                  <td>
 Sets the current process to a specified dots per inch (dpi) awareness context. 
 <p />
 The DPI awareness contexts are from the DPI_AWARENESS_CONTEXT value.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4213c66f-332a-26d4-8f11-2156492f3e36.htm">SetProcessRestrictionExemption</a>
                  </td>
                  <td>
 Exempts the calling process from restrictions preventing desktop processes from interacting with the Windows Store app environment. 
 This function is used by development and debugging tools.
 <p />
 This function only succeeds if a developer license is present on the system. 
 Once successful the calling process will be able to perform the following actions, 
 subject to User Interface Privilege Isolation (UIPI) restrictions:
 <p />
  - Attach global hooks (and event hooks) to Windows Store app processes. 
 <p />
  - Attach input queues between Windows Store app processes, Windows Store app browsers, system processes, and desktop application processes.
 <p />
  - Change foreground arbitrarily between the Windows Store app and desktop environments. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="baa6eae5-800a-f406-2b7a-c6a15d98a7ea.htm">SetProcessWindowStation</a>
                  </td>
                  <td>
 Assigns the specified window station to the calling process. 
 This enables the process to access objects in the window station such as desktops, the clipboard, and global atoms. 
 <p />
 All subsequent operations on the window station use the access rights granted to <span class="parameter">hWinSta</span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e27ece6b-a2ee-e790-e3f5-1555f5134e5e.htm">SetRect(NativeRectangle<span id="LST44177590_279" data-languageSpecificText="cpp=%"></span>, Int32, Int32, Int32, Int32)</a>
                  </td>
                  <td>
 Sets the coordinates of the specified rectangle. 
 <p />
 This is equivalent to assigning the left, top, right, and bottom arguments to the 
 appropriate members of the <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> structure.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5a9b3f11-96dd-70db-0022-deff8a597030.htm">SetRect(Rectangle<span id="LST44177590_280" data-languageSpecificText="cpp=%"></span>, Int32, Int32, Int32, Int32)</a>
                  </td>
                  <td>
 Sets the coordinates of the specified rectangle. 
 <p />
 This is equivalent to assigning the left, top, right, and bottom arguments to the 
 appropriate members of the <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> structure.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e4c36349-51cb-e433-73f9-744c48768869.htm">SetRectEmpty(NativeRectangle<span id="LST44177590_281" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates an empty <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> in which all coordinates are set to zero.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0ee3f5d6-0048-3f3a-fd9d-bb0a78252b3d.htm">SetRectEmpty(Rectangle<span id="LST44177590_282" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates an empty <span class="noLink">Rectangle</span> in which all coordinates are set to zero.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="90b88abe-9d11-10d7-0951-2b015365c732.htm">SetScrollInfo(IntPtr, ScrollBarOrientation, ScrollInfo<span id="LST44177590_283" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Sets the parameters of a scroll bar, including the minimum and maximum scrolling positions, 
 the page size, and the position of the scroll box (thumb).
 <p />
 The function also redraws the scroll bar, if requested.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2db9fb2b-6738-4a3e-e266-c256343b9a2f.htm">SetScrollInfo(SafeHandle, ScrollBarOrientation, ScrollInfo<span id="LST44177590_284" data-languageSpecificText="cpp=%"></span>, Boolean)</a>
                  </td>
                  <td>
 Sets the parameters of a scroll bar, including the minimum and maximum scrolling positions, 
 the page size, and the position of the scroll box (thumb).
 <p />
 The function also redraws the scroll bar, if requested.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="19a7c168-33bb-8f19-41e5-c77e02dc22f4.htm">SetSysColors</a>
                  </td>
                  <td>
 Sets the colors for the specified display elements. 
 <p />
 Display elements are the various parts of a window and the display that appear on the system display screen.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="af2dfa38-f374-2c60-1899-8a751c1f36b7.htm">SetSystemCursor</a>
                  </td>
                  <td>
 Enables an application to customize the system cursors. 
 <p />
 It replaces the contents of the system cursor specified by the  parameter 
 with the contents of the cursor specified by the  parameter 
 and then destroys . 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b7600dd4-ba74-2f7f-2d73-4f6ee6786159.htm">SetThreadDesktop</a>
                  </td>
                  <td>
 Assigns the specified desktop to the calling thread. All subsequent operations on the desktop use the access rights granted to the desktop.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="434a13c3-e983-2b65-e59f-2e1640b82ea4.htm">SetThreadDpiAwarenessContext</a>
                  </td>
                  <td>
 Set the DPI awareness for the current thread to the provided value.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bd773e3b-bda1-f084-2086-efed0d13e1ae.htm">SetWindowLong(HandleRef, WindowLongValues, UInt32)</a>
                  </td>
                  <td>
 Changes an attribute of the specified window.
 <p />
 The function also sets the 32-bit (<span class="code">LONG</span>) value at the specified offset into the extra window memory.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="6f48a5ec-30b9-68bd-4444-c592c465b4b1.htm">SetWindowLong(IntPtr, WindowLongValues, UInt32)</a>
                  </td>
                  <td>
 Changes an attribute of the specified window.
 <p />
 The function also sets the 32-bit (<span class="code">LONG</span>) value at the specified offset into the extra window memory.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="b8857914-a96a-eea6-41bf-af8fdb954aa9.htm">SetWindowLong(SafeHandle, WindowLongValues, UInt32)</a>
                  </td>
                  <td>
 Changes an attribute of the specified window.
 <p />
 The function also sets the 32-bit (<span class="code">LONG</span>) value at the specified offset into the extra window memory.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="039cc3c0-6e7c-5c81-1f0c-4bbc832a549f.htm">SetWindowLongPtr(HandleRef, WindowLongValues, IntPtr)</a>
                  </td>
                  <td>
 Changes an attribute of the specified window.
 <p />
 The function also sets a value at the specified offset in the extra window memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="76f89094-6d66-fdf6-8b9b-1278565f7df4.htm">SetWindowLongPtr(IntPtr, WindowLongValues, IntPtr)</a>
                  </td>
                  <td>
 Changes an attribute of the specified window.
 <p />
 The function also sets a value at the specified offset in the extra window memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c9e59f40-7674-4146-825d-a880ce01196e.htm">SetWindowLongPtr(SafeHandle, WindowLongValues, IntPtr)</a>
                  </td>
                  <td>
 Changes an attribute of the specified window.
 <p />
 The function also sets a value at the specified offset in the extra window memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6817182f-d600-2f25-4453-7d0b0e5fd2b6.htm">SetWindowPlacement(IntPtr, WindowPlacement<span id="LST44177590_285" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sets the show state and the restored, minimized, and maximized positions of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fc822b3c-b192-a631-b18f-393c70856758.htm">SetWindowPlacement(SafeHandle, WindowPlacement<span id="LST44177590_286" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Sets the show state and the restored, minimized, and maximized positions of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="865c57bf-1ce2-84a9-a058-fab11c7985a6.htm">SetWindowPos(IntPtr, IntPtr, Int32, Int32, Int32, Int32, SetWindowPosFlags)</a>
                  </td>
                  <td>
 Changes the size, position, and Z order of a child, pop-up, or top-level window.
 <p />
 These windows are ordered according to their appearance on the screen.
 <p />
 The topmost window receives the highest rank and is the first window in the Z order.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="40aff008-ddef-3bd4-f3ce-b426e14f4629.htm">SetWindowPos(SafeHandle, IntPtr, Int32, Int32, Int32, Int32, SetWindowPosFlags)</a>
                  </td>
                  <td>
 Changes the size, position, and Z order of a child, pop-up, or top-level window.
 <p />
 These windows are ordered according to their appearance on the screen.
 <p />
 The topmost window receives the highest rank and is the first window in the Z order.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0035e11c-82c4-6d06-d8ff-89c07dea2a94.htm">SetWindowRgn(IntPtr, IntPtr, Boolean)</a>
                  </td>
                  <td>
 Sets the window region of a window. 
 <p />
 The window region determines the area within the window where the system permits drawing. 
 <p />
 The system does not display any portion of a window that lies outside of the window region
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fda87cb2-0f10-991b-5e73-67f72817944d.htm">SetWindowRgn(SafeHandle, SafeHandle, Boolean)</a>
                  </td>
                  <td>
 Sets the window region of a window. 
 <p />
 The window region determines the area within the window where the system permits drawing. 
 <p />
 The system does not display any portion of a window that lies outside of the window region
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="535ad313-c00e-ee3c-b68a-64b1693aadb9.htm">SetWindowsHookEx</a>
                  </td>
                  <td>
 Installs an application-defined hook procedure into a hook chain.
 <p />
 You would install a hook procedure to monitor the system for certain types of events.
 <p />
 These events are associated either with a specific thread or with all threads in the same desktop as the calling thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b9a3b371-27c4-7e2c-8ec9-befeda4861c2.htm">SetWindowText(IntPtr, String)</a>
                  </td>
                  <td>
 Changes the text of the specified window's title bar (if it has one). 
 <p />
 If the specified window is a control, the text of the control is changed. 
 <p />
 However, <a href="b9a3b371-27c4-7e2c-8ec9-befeda4861c2.htm">SetWindowText(IntPtr, String)</a> cannot change the text of a control in another application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d6f6afcb-c6c9-1668-ccdb-6f44ded0a4e0.htm">SetWindowText(SafeHandle, String)</a>
                  </td>
                  <td>
 Changes the text of the specified window's title bar (if it has one). 
 <p />
 If the specified window is a control, the text of the control is changed. 
 <p />
 However, <a href="b9a3b371-27c4-7e2c-8ec9-befeda4861c2.htm">SetWindowText(IntPtr, String)</a> cannot change the text of a control in another application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7a7a7c4a-8617-c3ee-9e8d-d9ef90836a36.htm">ShowCaret(IntPtr)</a>
                  </td>
                  <td>
 Makes the caret visible on the screen at the caret's current position.
 <p />
 When the caret becomes visible, it begins flashing automatically.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="78ac3617-81c8-0196-c8b8-34ebc579d383.htm">ShowCaret(SafeHandle)</a>
                  </td>
                  <td>
 Makes the caret visible on the screen at the caret's current position.
 <p />
 When the caret becomes visible, it begins flashing automatically.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c0e4c0b4-3c8d-829f-5029-165ed6bc5682.htm">ShowCursor</a>
                  </td>
                  <td>
 Displays or hides the cursor. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0ec5d80e-4fe2-5a21-b3a2-94063335af01.htm">ShowScrollBar(IntPtr, ScrollBarOrientation, Boolean)</a>
                  </td>
                  <td>
 Shows or hides the specified scrollbar of a Control/Window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0a2b3960-6280-e167-a153-b317e7ba6a9e.htm">ShowScrollBar(SafeHandle, ScrollBarOrientation, Boolean)</a>
                  </td>
                  <td>
 Shows or hides the specified scrollbar of a Control/Window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="df00774c-f311-e85e-46ef-c4c1a317c704.htm">ShowWindow(IntPtr, NativeWindowState)</a>
                  </td>
                  <td>
 Sets the specified window's show state.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8effad69-af7e-93ce-6eaa-bc21384b31e1.htm">ShowWindow(SafeHandle, NativeWindowState)</a>
                  </td>
                  <td>
 Sets the specified window's show state.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e07bd14a-1da4-cef6-a4d1-0edbd899a3d5.htm">ShowWindowAsync(IntPtr, NativeWindowState)</a>
                  </td>
                  <td>
 Sets the specified window's show state.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3131320c-a6fc-3112-d2cc-997075d993e2.htm">ShowWindowAsync(SafeHandle, NativeWindowState)</a>
                  </td>
                  <td>
 Sets the specified window's show state.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="581baba5-1189-e548-5f24-195cde7a658e.htm">ShutdownBlockReasonCreate</a>
                  </td>
                  <td>
 Indicates that the system cannot be shut down and sets a reason string to be displayed to the 
 user if system shutdown is initiated.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dcdb6c64-f7af-94de-792f-a8c91f564445.htm">ShutdownBlockReasonDestroy</a>
                  </td>
                  <td>
 Indicates that the system can be shut down and frees the reason string.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c4d93ed7-4a65-c185-7abf-20996d579453.htm">ShutdownBlockReasonQuery</a>
                  </td>
                  <td>
 Retrieves the reason string set by the <a href="581baba5-1189-e548-5f24-195cde7a658e.htm">ShutdownBlockReasonCreate(IntPtr, String)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="310fc96c-aa1a-e17c-c66e-b89170522766.htm">SoundSentry</a>
                  </td>
                  <td>
 Triggers a visual signal to indicate that a sound is playing.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c3036bc5-1628-a8c5-4cea-0cf22f3861ae.htm">SubtractRect(NativeRectangle<span id="LST44177590_287" data-languageSpecificText="cpp=%"></span>, NativeRectangle<span id="LST44177590_288" data-languageSpecificText="cpp=%"></span>, NativeRectangle<span id="LST44177590_289" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines the coordinates of a <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> 
 formed by subtracting one <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> from another.
 <p />
 The function only subtracts the <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> specified by <span class="parameter">refSrcRect2</span> 
 from the <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> specified by <span class="parameter">refSrcRect1</span> 
 when the rectangles intersect completely in either the x- or y- direction. 
 <p />
 For example, if <span class="parameter">refSrcRect1</span> has the coordinates {10, 10, 100, 100} 
 and <span class="parameter">refSrcRect2</span> has the coordinates {50, 50, 150, 150}, 
 the function sets the coordinates of the <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> pointed to 
 by <span class="parameter">refDstRect</span> to {10, 10, 100, 100}. 
 <p />
 If <span class="parameter">refSrcRect1</span> has the coordinates {10, 10, 100, 100} 
 and <span class="parameter">refSrcRect2</span> has the coordinates {50, 10, 150, 150}, 
 however, the function sets the coordinates of the <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> pointed to 
 by <span class="parameter">refDstRect</span> to {10, 10, 50, 100}. 
 <p />
 In other words, the resulting <a href="a95225c3-c28f-bc3d-96fb-41b127df7301.htm">NativeRectangle</a> is the bounding box of the geometric difference.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a3983ba4-f98d-b2fa-5822-2a4ab2fea988.htm">SubtractRect(Rectangle<span id="LST44177590_290" data-languageSpecificText="cpp=%"></span>, Rectangle<span id="LST44177590_291" data-languageSpecificText="cpp=%"></span>, Rectangle<span id="LST44177590_292" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines the coordinates of a <span class="noLink">Rectangle</span> 
 formed by subtracting one <span class="noLink">Rectangle</span> from another.
 <p />
 The function only subtracts the <span class="noLink">Rectangle</span> specified by <span class="parameter">refSrcRect2</span> 
 from the <span class="noLink">Rectangle</span> specified by <span class="parameter">refSrcRect1</span> 
 when the rectangles intersect completely in either the x- or y- direction. 
 <p />
 For example, if <span class="parameter">refSrcRect1</span> has the coordinates {10, 10, 100, 100} 
 and <span class="parameter">refSrcRect2</span> has the coordinates {50, 50, 150, 150}, 
 the function sets the coordinates of the <span class="noLink">Rectangle</span> pointed to 
 by <span class="parameter">refDstRect</span> to {10, 10, 100, 100}. 
 <p />
 If <span class="parameter">refSrcRect1</span> has the coordinates {10, 10, 100, 100} 
 and <span class="parameter">refSrcRect2</span> has the coordinates {50, 10, 150, 150}, 
 however, the function sets the coordinates of the <span class="noLink">Rectangle</span> pointed to 
 by <span class="parameter">refDstRect</span> to {10, 10, 50, 100}. 
 <p />
 In other words, the resulting <span class="noLink">Rectangle</span> is the bounding box of the geometric difference.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="12ca103b-0b5e-897d-65dc-de10e0acbe29.htm">SwapMouseButton</a>
                  </td>
                  <td>
 Reverses or restores the meaning of the left and right mouse buttons.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5abc2645-dcf5-3590-c064-77317ad38e8b.htm">SwitchDesktop</a>
                  </td>
                  <td>
 Makes the specified desktop visible and activates it. 
 This enables the desktop to receive input from the user. 
 <p />
 The calling process must have DESKTOP_SWITCHDESKTOP access to the desktop for the 
 <a href="5abc2645-dcf5-3590-c064-77317ad38e8b.htm">SwitchDesktop(IntPtr)</a> function to succeed.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4749e781-6fd6-36a7-8658-e3be53244371.htm">SwitchToThisWindow(IntPtr, Boolean)</a>
                  </td>
                  <td>
 Switches focus to the specified window and brings it to the foreground.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f950eaf1-1b22-0f56-44d8-bc329b00826f.htm">SwitchToThisWindow(SafeHandle, Boolean)</a>
                  </td>
                  <td>
 Switches focus to the specified window and brings it to the foreground.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5777d09b-7c75-af00-f45b-2fd07ab7c4e6.htm">SystemParametersInfo(SystemParametersActionFlags, Boolean, Boolean<span id="LST44177590_293" data-languageSpecificText="cpp=%"></span>, SystemParametersWinIniFlags)</a>
                  </td>
                  <td>
 Retrieves or sets the value of one of the system-wide parameters.
 <p />
 This function can also update the user profile while setting a parameter.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ec5427bd-1778-5cd2-b2fc-c953be77adad.htm">SystemParametersInfo(SystemParametersActionFlags, Boolean, UInt32, SystemParametersWinIniFlags)</a>
                  </td>
                  <td>
 Retrieves or sets the value of one of the system-wide parameters.
 <p />
 This function can also update the user profile while setting a parameter.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="13d86ee6-8e64-79c5-6bae-9889dc7cf502.htm">SystemParametersInfo(SystemParametersActionFlags, Int32, UInt32, SystemParametersWinIniFlags)</a>
                  </td>
                  <td>
 Retrieves or sets the value of one of the system-wide parameters.
 <p />
 This function can also update the user profile while setting a parameter.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d2c260ed-73fb-c0b5-daf3-22594985e231.htm">SystemParametersInfo(SystemParametersActionFlags, UInt32, Boolean<span id="LST44177590_294" data-languageSpecificText="cpp=%"></span>, SystemParametersWinIniFlags)</a>
                  </td>
                  <td>
 Retrieves or sets the value of one of the system-wide parameters.
 <p />
 This function can also update the user profile while setting a parameter.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="87841758-808a-f1c3-e052-461a463cd97d.htm">SystemParametersInfo(SystemParametersActionFlags, UInt32, Int64, SystemParametersWinIniFlags)</a>
                  </td>
                  <td>
 Retrieves or sets the value of one of the system-wide parameters.
 <p />
 This function can also update the user profile while setting a parameter.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b8d0de0c-6b22-785c-9986-49fa65fa7694.htm">SystemParametersInfo(SystemParametersActionFlags, UInt32, String, SystemParametersWinIniFlags)</a>
                  </td>
                  <td>
 Retrieves or sets the value of one of the system-wide parameters.
 <p />
 This function can also update the user profile while setting a parameter.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9403a8ab-c721-0dee-1feb-3b7610d17296.htm">SystemParametersInfo(SystemParametersActionFlags, UInt32, StringBuilder, SystemParametersWinIniFlags)</a>
                  </td>
                  <td>
 Retrieves or sets the value of one of the system-wide parameters.
 <p />
 This function can also update the user profile while setting a parameter.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7ebe9838-dccc-7d00-ed9d-a388e3c94c0a.htm">SystemParametersInfo(SystemParametersActionFlags, UInt32, UInt32<span id="LST44177590_295" data-languageSpecificText="cpp=%"></span>, SystemParametersWinIniFlags)</a>
                  </td>
                  <td>
 Retrieves or sets the value of one of the system-wide parameters.
 <p />
 This function can also update the user profile while setting a parameter.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cb144434-06f1-1bb1-c985-6973f5bfa97c.htm">SystemParametersInfo(SystemParametersActionFlags, UInt32, UInt64<span id="LST44177590_296" data-languageSpecificText="cpp=%"></span>, SystemParametersWinIniFlags)</a>
                  </td>
                  <td>
 Retrieves or sets the value of one of the system-wide parameters.
 <p />
 This function can also update the user profile while setting a parameter.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c68d9b5b-854a-f953-3b40-969f0e486823.htm">ToAscii</a>
                  </td>
                  <td>
 Translates the specified virtual-key code and keyboard state to the corresponding character or characters. 
 <p />
 The function translates the code using the input language and physical keyboard layout identified by the keyboard layout handle.
 <p />
 To specify a handle to the keyboard layout to use to translate the specified code, use the <a href="b0e81f81-d54a-a978-2904-74b2998b6f1d.htm">ToAsciiEx(UInt32, UInt32, <span id="LST44177590_297" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST44177590_298" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32<span id="LST44177590_299" data-languageSpecificText="cpp=%"></span>, UInt32, IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b0e81f81-d54a-a978-2904-74b2998b6f1d.htm">ToAsciiEx</a>
                  </td>
                  <td>
 Translates the specified virtual-key code and keyboard state to the corresponding character or characters. 
 <p />
 The function translates the code using the input language and physical keyboard layout identified by the input locale identifier.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ToString</span>
                  </td>
                  <td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="bbfbbd83-a719-83ce-28a8-5902b41f4829.htm">ToUnicodeEx</a>
                  </td>
                  <td>
 Translates the specified virtual-key code and keyboard state to the corresponding Unicode character or characters.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3a440d1b-8bb5-3b35-bcdb-3dbf5ccc8183.htm">TrackPopupMenu</a>
                  </td>
                  <td>
 Displays a shortcut menu at the specified location and tracks the selection of items on the menu. 
 The shortcut menu can appear anywhere on the screen..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="547bc14c-3c04-fc01-d7e9-9c99aa27ceed.htm">TranslateMessage</a>
                  </td>
                  <td>
 Translates virtual-key messages into character messages. 
 
 The character messages are posted to the calling thread's message queue, 
 to be read the next time the thread calls the <a href="ed9e3db1-536a-b946-9925-1845c781216f.htm">GetMessage(NativeMessage<span id="LST44177590_300" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32, UInt32)</a> 
 or <a href="9ddfdc9f-f422-ca4a-e2b9-836961993813.htm">PeekMessage(NativeMessage<span id="LST44177590_301" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32, UInt32, PeekMessageFlags)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d4c45c87-9717-5728-a017-b1a87fcfbe92.htm">UnhookWindowsHookEx</a>
                  </td>
                  <td>
 Removes a hook procedure installed in a hook chain by the <a href="535ad313-c00e-ee3c-b68a-64b1693aadb9.htm">SetWindowsHookEx(HookType, Delegates<span id="LST44177590_302" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>HookProc, IntPtr, UInt32)</a> function. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6e63b50a-efd0-8923-8602-4b3e60f21163.htm">UnionRect(NativeRectangle<span id="LST44177590_303" data-languageSpecificText="cpp=%"></span>, NativeRectangle<span id="LST44177590_304" data-languageSpecificText="cpp=%"></span>, NativeRectangle<span id="LST44177590_305" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates the union of two rectangles. The union is the smallest rectangle that contains both source rectangles.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="eceadec4-ec18-c385-7da3-d3e3b62417c1.htm">UnionRect(Rectangle<span id="LST44177590_306" data-languageSpecificText="cpp=%"></span>, Rectangle<span id="LST44177590_307" data-languageSpecificText="cpp=%"></span>, Rectangle<span id="LST44177590_308" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates the union of two rectangles. The union is the smallest rectangle that contains both source rectangles.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2aea079d-2d7e-5d43-5f77-3e28494d1590.htm">UnloadKeyboardLayout</a>
                  </td>
                  <td>
 Unloads an input locale identifier (formerly called a keyboard layout).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f70ba910-439b-bfec-89d5-c3eb145e6bc3.htm">UnregisterHotKey(IntPtr, Int32)</a>
                  </td>
                  <td>
 Unregisters a hotkey previously registered with <a href="e882cec8-880d-43c8-4626-e0370b8cecd1.htm">RegisterHotKey(IntPtr, Int32, UInt32, UInt32)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="18fca38f-acea-35ff-c8c5-ed2bcc261f9a.htm">UnregisterHotKey(SafeHandle, Int32)</a>
                  </td>
                  <td>
 Unregisters a hotkey previously registered with <a href="e882cec8-880d-43c8-4626-e0370b8cecd1.htm">RegisterHotKey(IntPtr, Int32, UInt32, UInt32)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f545e84d-4399-3fac-3749-4958c0cbdd7a.htm">UpdateLayeredWindow(IntPtr, IntPtr, NativePoint<span id="LST44177590_309" data-languageSpecificText="cpp=%"></span>, NativeSize<span id="LST44177590_310" data-languageSpecificText="cpp=%"></span>, IntPtr, NativePoint<span id="LST44177590_311" data-languageSpecificText="cpp=%"></span>, Int32, BlendFunction<span id="LST44177590_312" data-languageSpecificText="cpp=%"></span>, UpdateLayeredWindowflags)</a>
                  </td>
                  <td>
 Updates the position, size, shape, content, and translucency of a layered window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f62ff27c-5de7-f9e8-bc0e-a4eacd5eca99.htm">UpdateLayeredWindow(IntPtr, IntPtr, Point<span id="LST44177590_313" data-languageSpecificText="cpp=%"></span>, Size<span id="LST44177590_314" data-languageSpecificText="cpp=%"></span>, IntPtr, Point<span id="LST44177590_315" data-languageSpecificText="cpp=%"></span>, Int32, BlendFunction<span id="LST44177590_316" data-languageSpecificText="cpp=%"></span>, UpdateLayeredWindowflags)</a>
                  </td>
                  <td>
 Updates the position, size, shape, content, and translucency of a layered window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ca33e6a3-ada1-c349-1253-f7734f1d373c.htm">UpdateLayeredWindow(SafeHandle, IntPtr, NativePoint<span id="LST44177590_317" data-languageSpecificText="cpp=%"></span>, NativeSize<span id="LST44177590_318" data-languageSpecificText="cpp=%"></span>, IntPtr, NativePoint<span id="LST44177590_319" data-languageSpecificText="cpp=%"></span>, Int32, BlendFunction<span id="LST44177590_320" data-languageSpecificText="cpp=%"></span>, UpdateLayeredWindowflags)</a>
                  </td>
                  <td>
 Updates the position, size, shape, content, and translucency of a layered window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="70194ac1-9359-4f84-8527-5526fdc2e870.htm">UpdateLayeredWindow(SafeHandle, IntPtr, Point<span id="LST44177590_321" data-languageSpecificText="cpp=%"></span>, Size<span id="LST44177590_322" data-languageSpecificText="cpp=%"></span>, IntPtr, Point<span id="LST44177590_323" data-languageSpecificText="cpp=%"></span>, Int32, BlendFunction<span id="LST44177590_324" data-languageSpecificText="cpp=%"></span>, UpdateLayeredWindowflags)</a>
                  </td>
                  <td>
 Updates the position, size, shape, content, and translucency of a layered window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d99d952e-daf1-64c4-e80b-05ce419a6fa2.htm">UpdateWindow(IntPtr)</a>
                  </td>
                  <td>
 Updates the client area of the specified window 
 by sending a <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_Paint</a> message to the window if the window's update region is not empty. 
 <p />
 The function sends a <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_Paint</a> message directly to the window procedure of the specified window, 
 bypassing the application queue. If the update region is empty, no message is sent.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3d7208e1-ea3b-7e0c-04cb-f3ecb1bb40f2.htm">UpdateWindow(SafeHandle)</a>
                  </td>
                  <td>
 Updates the client area of the specified window 
 by sending a <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_Paint</a> message to the window if the window's update region is not empty. 
 <p />
 The function sends a <a href="408e96a1-f83e-f5c4-2cbc-88ec497ecec4.htm">WM_Paint</a> message directly to the window procedure of the specified window, 
 bypassing the application queue. If the update region is empty, no message is sent.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ae0d651d-33bd-870e-cf16-64343416f061.htm">ValidateRect(IntPtr, NativeRectangle<span id="LST44177590_325" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Validates the client area within a rectangle by removing the rectangle from the update region of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7a0301f7-f885-dc3a-c68a-1c53bb49dfbf.htm">ValidateRect(IntPtr, Rectangle<span id="LST44177590_326" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Validates the client area within a rectangle by removing the rectangle from the update region of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ae051444-dbf4-d63a-fc18-d994c47f39a3.htm">ValidateRect(SafeHandle, NativeRectangle<span id="LST44177590_327" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Validates the client area within a rectangle by removing the rectangle from the update region of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="27d6c2a0-86a6-5d21-be03-0cc63ec47c52.htm">ValidateRect(SafeHandle, Rectangle<span id="LST44177590_328" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Validates the client area within a rectangle by removing the rectangle from the update region of the specified window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8c2327ea-5d67-f7d1-f393-3b4a5990dc49.htm">ValidateRgn(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Validates the client area within a region by removing the region from the current update region of the specified window..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9ee02a8d-18fd-1292-435d-99fedac3c1ed.htm">ValidateRgn(SafeHandle, SafeHandle)</a>
                  </td>
                  <td>
 Validates the client area within a region by removing the region from the current update region of the specified window..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ce14336c-e7be-4238-8bb6-887daa78a797.htm">VkKeyScan</a>
                  </td>
                  <td>
 Translates a character to the corresponding virtual-key code and shift state for the current keyboard.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="e564e805-01dc-3307-b66f-8c422357eeb9.htm">VkKeyScanEx</a>
                  </td>
                  <td>
 Translates a character to the corresponding virtual-key code and shift state.
 <p />
 The function translates the character using the input language and 
 physical keyboard layout identified by the input locale identifier.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4f427045-c500-a70b-f906-807b63252316.htm">WaitForInputIdle</a>
                  </td>
                  <td>
 Waits until the specified process has finished processing its initial input 
 and is waiting for user input with no input pending, 
 or until the time-out interval has elapsed.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9ba0e193-5fc3-7a6c-e5ca-1b562182496e.htm">WaitMessage</a>
                  </td>
                  <td>
 Yields control to other threads when a thread has no other messages in its message queue. 
 <p />
 The <a href="9ba0e193-5fc3-7a6c-e5ca-1b562182496e.htm">WaitMessage<span id="LST44177590_329" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> function suspends the thread and does not return until a 
 new message is placed in the thread's message queue.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="76a8bba2-8096-91a5-4f9e-43ed9627c256.htm">WindowFromDC</a>
                  </td>
                  <td>
 Returns a handle to the window associated with the specified display device context (DC). 
 <p />
 Output functions that use the specified device context draw into this window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="30c5383b-3f12-266b-dc4d-cccef2482a64.htm">WindowFromPhysicalPoint(NativePoint)</a>
                  </td>
                  <td>
 Retrieves a handle to the window that contains the specified physical point.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5ceffa10-e86b-6c7f-448a-b1e40ca9b7c9.htm">WindowFromPhysicalPoint(Point)</a>
                  </td>
                  <td>
 Retrieves a handle to the window that contains the specified physical point.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d1299890-0bf0-3929-3e34-638f4dfd00bf.htm">WindowFromPoint(NativePoint)</a>
                  </td>
                  <td>
 Retrieves a handle to the window that contains the specified point.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dea0bf94-e33a-ded1-12cb-dd8ca3903084.htm">WindowFromPoint(Point)</a>
                  </td>
                  <td>
 Retrieves a handle to the window that contains the specified point.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Extension Methods</h2>
            <div id="IDAEASection">
              <table id="ExtensionList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="4fc2bde6-7e68-b4f7-8406-9f998fc4201d.htm">CanConvertTo</a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="d438a76e-0b10-2e5a-19bb-33849b67af0e.htm">CanConvertTo<span id="LST44177590_330" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST44177590_331" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="be81447a-a248-2281-1117-bfc740d6232c.htm">ConvertTo<span id="LST44177590_332" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST44177590_333" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, an exception is thrown.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="8021acba-836d-7ab5-0827-131cef22840b.htm">ConvertTo<span id="LST44177590_334" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST44177590_335" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, returns the specified default value.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="90e0095b-fa87-d162-71b4-0b19729ac296.htm">IsDisposable</a>
                  </td>
                  <td>
 Determines whether the specified object is a disposable type 
 (i.e., it implements <span class="noLink">IDisposable</span> interface).
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="b6518cbc-eac7-374e-f53c-70aa031bf15b.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="a447b4b7-8d2e-a234-f910-4749678e12f8.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="4ed5be38-075c-b944-23d9-9298e43d9f2a.htm">ThrowIfNull<span id="LST44177590_336" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TException<span id="LST44177590_337" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Throws the specified exception if the source object is null.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="4b8ebc81-6ba2-6fac-af5b-8bb75ecef853.htm">DevCase.Win32.NativeMethods Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                </li>
                <li>
                  <a class="quickLink">Methods</a>
                </li>
                <li>
                  <a class="quickLink">Extension Methods</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
    <script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script>
  </body>
</html>