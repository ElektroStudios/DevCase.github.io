<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>Kernel32 Methods</title>
    <meta name="Title" content="Methods" />
    <meta name="Help.Id" content="Methods.T:DevCase.Win32.NativeMethods.Kernel32" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Win32.NativeMethods" />
    <meta name="guid" content="ef1a85f7-f1e1-f2fc-6045-ab931c1aac4b" />
    <meta name="tocFile" content="../toc/IDJFFA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase Class Library 5.0</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="TopicContent" class="column content is-7">
            <h1>Kernel<wbr />32 Methods</h1>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Methods</h2>
            <div id="IDFDASection">
              <table id="MethodList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="76308d98-8ff4-3f81-924f-1a0b6710d2f3.htm">AddAtom</a>
                  </td>
                  <td>
 Adds a character string to the local atom table and returns a unique value (an atom) identifying the string.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="74b40f5b-fb8f-ce1a-611f-a814d7900006.htm">AddDllDirectory</a>
                  </td>
                  <td>
 Adds a directory to the process DLL search path.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5972a9f7-680d-53d1-69dc-437866a50d9b.htm">AddSIDToBoundaryDescriptor</a>
                  </td>
                  <td>
 Adds a security identifier (SID) to the specified boundary descriptor.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0f30321a-c197-3905-90b9-b7283306d591.htm">AllocateUserPhysicalPages(IntPtr, IntPtr<span id="LST25F871C9_0" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Allocates physical memory pages to be mapped and unmapped within any Address Windowing Extensions (AWE) region
 of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c8347541-38d9-f340-c848-3f304aa521b8.htm">AllocateUserPhysicalPages(IntPtr, UIntPtr<span id="LST25F871C9_1" data-languageSpecificText="cpp=%"></span>, UIntPtr)</a>
                  </td>
                  <td>
 Allocates physical memory pages to be mapped and unmapped within any Address Windowing Extensions (AWE) region
 of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5d5c6fe8-fddd-e1d6-9da1-eb6f3b30ba88.htm">AllocateUserPhysicalPagesNuma(IntPtr, IntPtr<span id="LST25F871C9_2" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Allocates physical memory pages to be mapped and unmapped within any Address Windowing Extensions (AWE) region
 of a specified process and specifies the NUMA node for the physical memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ce4950aa-1538-5ba7-45a0-63faace763ff.htm">AllocateUserPhysicalPagesNuma(IntPtr, UIntPtr<span id="LST25F871C9_3" data-languageSpecificText="cpp=%"></span>, UIntPtr, UInt32)</a>
                  </td>
                  <td>
 Allocates physical memory pages to be mapped and unmapped within any Address Windowing Extensions (AWE) region
 of a specified process and specifies the NUMA node for the physical memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5c07af4c-7227-e8b2-4e36-5b88b160647c.htm">AllocConsole</a>
                  </td>
                  <td>
 Allocates a new console for the calling process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="37d23802-25ae-c5e2-6dd6-5e6d3eb527d0.htm">ApplicationRecoveryFinished</a>
                  </td>
                  <td>
 Indicates that the calling application has completed its data recovery.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="10b7283d-bc59-05cc-1038-76fb4af58c28.htm">ApplicationRecoveryInProgress</a>
                  </td>
                  <td>
 Indicates that the calling application is continuing to recover data.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b4437ae1-eed5-a7c9-7125-f09687410a89.htm">AppPolicyGetCreateFileAccess</a>
                  </td>
                  <td>
 Retrieves a value indicating whether a process has full or restricted access to the I/O devices 
 (file, file stream, directory, physical disk, volume, console buffer, tape drive, communications resource, mailslot, and pipe).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8e370e8f-8021-125e-ce73-1fc6df029808.htm">AppPolicyGetProcessTerminationMethod</a>
                  </td>
                  <td>
 Retrieves the method used to end a process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="faca48f1-2d0b-d46c-b5c3-38e04ffaccfe.htm">AppPolicyGetShowDeveloperDiagnostic</a>
                  </td>
                  <td>
 Retrieves the method used for a process to surface developer information, such as asserts, to the user.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0b363839-3798-c21a-334a-058bebcf4905.htm">AppPolicyGetThreadInitializationType</a>
                  </td>
                  <td>
 Retrieves the kind of initialization that should be automatically performed for a process when beginthread[ex] creates a thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="82c188cd-d8af-3f86-83ef-5827fc397e8d.htm">AreFileApisANSI</a>
                  </td>
                  <td>
 Determines whether the file I/O functions are using the ANSI or OEM character set code page.
 <p />
 This function is useful for 8-bit console input and output operations.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6d2973b1-4a4e-0b74-1f2a-3b6047485e2e.htm">AttachConsole</a>
                  </td>
                  <td>
 Attaches the calling process to the console of the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5bf199b4-753f-0ddd-8eee-ab40c6b22c94.htm">BackupRead</a>
                  </td>
                  <td>
 This function can be used to back up a file or directory, including the security information. 
 <p />
 This function reads data associated with a specified file or directory into a buffer, 
 which can then be written to the backup medium using the WriteFile function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3358eb12-273d-2803-7e9d-7ff46ffa34e9.htm">BackupSeek</a>
                  </td>
                  <td>
 Seeks forward in a data stream initially accessed by using the 
 <a href="5bf199b4-753f-0ddd-8eee-ab40c6b22c94.htm">BackupRead(SafeFileHandle, IntPtr, UInt32, UInt32<span id="LST25F871C9_4" data-languageSpecificText="cpp=%"></span>, Boolean, Boolean, IntPtr<span id="LST25F871C9_5" data-languageSpecificText="cpp=%"></span>)</a> or BackupWrite function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="db8e0b2e-a6ae-31af-6753-be631733acc3.htm">BaseFlushAppcompatCache</a>
                  </td>
                  <td>
 Flushes the application compatibility cache.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e4f600e6-6518-cfb8-ee25-985ccd78fd62.htm">Beep</a>
                  </td>
                  <td>
 Generates simple tones on the speaker.
 <p />
 The function is synchronous;
 it performs an alertable wait and does not return control to its caller until the sound finishes.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a1a21ee0-6d79-48ac-1107-48878eeeccb1.htm">BeginUpdateResource</a>
                  </td>
                  <td>
 Retrieves a handle that can be used by the <a href="a32ac90d-da62-72e0-3dd5-0d7ecf7caae4.htm">UpdateResource(SafeModuleHandle, ResourceType, IntPtr, UInt16, IntPtr, UInt32)</a> function to add,
 delete, or replace resources in a binary module.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5fb44331-c530-54fc-1144-8dc08e3dd031.htm">CancelIo</a>
                  </td>
                  <td>
 Cancels all pending input and output (I/O) operations that are issued by the calling thread for the specified file.
 <p />
 The function does not cancel I/O operations that other threads issue for a file handle.
 <p />
 To cancel I/O operations from another thread, use the CancelIoEx function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5ddd570a-7833-9c7f-7d09-6f18a1246ea0.htm">CeipIsOptedIn</a>
                  </td>
                  <td>
 Checks whether the user has opted in for SQM data collection as part of the Customer Experience Improvement Program (CEIP).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1431d080-3871-2f62-3bf5-ed34af4966c7.htm">CheckRemoteDebuggerPresent</a>
                  </td>
                  <td>
 Determines whether the specified process is being debugged.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f4a475dc-99d7-d9fa-e637-1187ef988bb8.htm">ClearCommBreak</a>
                  </td>
                  <td>
 Restores character transmission for a specified communications device and places the transmission line in a nonbreak state.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="68d61181-08af-1213-3c82-80f18e3de6b3.htm">CloseHandle(IntPtr)</a>
                  </td>
                  <td>
 Closes the specified object handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3a6c6b38-c7b8-298a-3298-451aa9e911f0.htm">CloseHandle(SafeHandle)</a>
                  </td>
                  <td>
 Closes the specified object handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d29a8223-2f07-f926-9213-bbdebc34cd9b.htm">ClosePrivateNamespace</a>
                  </td>
                  <td>
 Closes an open namespace handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="46da37c6-9586-cb2f-dad2-ccc0eb007e37.htm">ContinueDebugEvent</a>
                  </td>
                  <td>
 Enables a debugger to continue a thread that previously reported a debugging event.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="54a38609-1cae-c51a-10e1-f9bb5ddee3bd.htm">ConvertFiberToThread</a>
                  </td>
                  <td>
 Converts the current fiber into a thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="de52c724-6e60-3591-dc67-56e1d2765934.htm">ConvertThreadToFiber</a>
                  </td>
                  <td>
 Converts the current thread into a fiber. 
 <p />
 You must convert a thread into a fiber before you can schedule other fibers.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c98d44c7-77cb-dc37-e86d-836cde2b9925.htm">ConvertThreadToFiberEx</a>
                  </td>
                  <td>
 Converts the current thread into a fiber. 
 <p />
 You must convert a thread into a fiber before you can schedule other fibers.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2203129d-9515-d573-a6d7-1c64bf3875ea.htm">CopyFileEx</a>
                  </td>
                  <td>
 Copies an existing file to a new file, notifying the application of its progress through a callback function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1c78a6fd-5c3b-381f-e368-cf7a77bb6b3e.htm">CreateBoundaryDescriptor</a>
                  </td>
                  <td>
 Creates a boundary descriptor.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="30571637-735d-aa86-422b-47a8b0adbdb3.htm">CreateDirectory</a>
                  </td>
                  <td>
 Creates a new directory.
 <p />
 If the underlying file system supports security on files and directories,
 the function applies a specified security descriptor to the new directory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cec83bdf-080a-ffe9-022e-85715fcb1e40.htm">CreateDirectoryA</a>
                  </td>
                  <td>
 Creates a new directory.
 <p />
 If the underlying file system supports security on files and directories,
 the function applies a specified security descriptor to the new directory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5caa92b8-d808-cbe3-df87-2e668280eaca.htm">CreateDirectoryW</a>
                  </td>
                  <td>
 Creates a new directory.
 <p />
 If the underlying file system supports security on files and directories,
 the function applies a specified security descriptor to the new directory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4c279059-6d21-48f1-fabd-e5a9fd291e4f.htm">CreateFile(String, FileAccessRights, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5d8bf2ce-1f71-4e95-5a68-653ae392b360.htm">CreateFile(String, FileAccessRights, FileShare, IntPtr, FileMode, FileAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f62c2528-7f5d-9000-ee2c-9d5d26c8fa34.htm">CreateFile(String, FileAccessRights, FileShare, IntPtr, FileMode, UInt32, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b1532a32-3f1a-0c56-b5e6-315fc378d977.htm">CreateFile(String, Int32, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dee05f52-cbcf-80ad-ea61-243c5c5b2b53.htm">CreateFile(String, Int32, FileShare, IntPtr, FileMode, FileAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bb12b480-c531-18b7-cb66-168c52b08e94.htm">CreateFile(String, Int32, FileShare, IntPtr, FileMode, UInt32, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8767baf3-02fe-9982-210a-1089d4d3f17f.htm">CreateFileA(String, FileAccessRights, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b19e7092-776f-286d-eebe-8f1eaac08681.htm">CreateFileA(String, FileAccessRights, FileShare, IntPtr, FileMode, FileAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c0195e60-6f67-51e1-0848-e14a5fad89fc.htm">CreateFileA(String, FileAccessRights, FileShare, IntPtr, FileMode, UInt32, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a9e7d5b5-2c3d-74ff-d61a-704dd71ac44d.htm">CreateFileA(String, Int32, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="991f1264-3e29-96e2-ba43-2029d2dae06c.htm">CreateFileA(String, Int32, FileShare, IntPtr, FileMode, FileAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c96cbd02-8526-51b4-87eb-8d5f25046733.htm">CreateFileA(String, Int32, FileShare, IntPtr, FileMode, UInt32, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3fafe751-835f-b932-0ba3-332c4c502c07.htm">CreateFileW(String, FileAccessRights, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="de5861e3-f53b-60b3-5b75-eba6cfd6ed41.htm">CreateFileW(String, FileAccessRights, FileShare, IntPtr, FileMode, FileAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="186d7c6d-2694-360c-2283-def89ab22055.htm">CreateFileW(String, FileAccessRights, FileShare, IntPtr, FileMode, UInt32, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a8405462-2a91-7a4a-92a5-81a85cde273d.htm">CreateFileW(String, Int32, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="467f05a8-3258-3bfb-1e22-06a959bc0d48.htm">CreateFileW(String, Int32, FileShare, IntPtr, FileMode, FileAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e6b8ebe8-6877-ed82-cde9-fdd12baa914f.htm">CreateFileW(String, Int32, FileShare, IntPtr, FileMode, UInt32, IntPtr)</a>
                  </td>
                  <td>
 Creates or opens a file or I/O device.
 <p />
 The most commonly used I/O devices are as follows:
 <p />
 file, file stream, directory, physical disk, volume, console buffer, tape drive,
 communications resource, mailslot, and pipe.
 <p />
 The function returns a handle that can be used to access the file or device
 for various types of I/O depending on the file or device and the flags and attributes specified.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="21db5012-0bac-0fd5-6beb-017d76b92013.htm">CreateHardLink(String, String, SecurityAttributes)</a>
                  </td>
                  <td>
 Establishes a hard link between an existing file and a new file.
 <p />
 This function is only supported on the NTFS file system, and only for files, not directories.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a615ff49-bee0-2536-958e-bce28f45e0e2.htm">CreateHardLink(String, String, IntPtr)</a>
                  </td>
                  <td>
 Establishes a hard link between an existing file and a new file.
 <p />
 This function is only supported on the NTFS file system, and only for files, not directories.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="857b124a-48cf-0f7b-88d9-28b7213250d1.htm">CreateMemoryResourceNotification</a>
                  </td>
                  <td>
 Creates a memory resource notification object.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c294b6a3-65ce-9318-1498-a8ca11bd4d21.htm">CreateMutex</a>
                  </td>
                  <td>
 Creates or opens a named or unnamed mutex object.
 <p />
 To specify an access mask for the object, use the <a href="1b6f110a-5bc9-8576-879e-9fddb27d2ab2.htm">CreateMutexEx(SecurityAttributes, String, CreateMutexFlags, StandardAccessRights)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1b6f110a-5bc9-8576-879e-9fddb27d2ab2.htm">CreateMutexEx(SecurityAttributes, String, CreateMutexFlags, StandardAccessRights)</a>
                  </td>
                  <td>
 Creates or opens a named or unnamed mutex object and returns a handle to the object.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d2be1625-5e58-4a90-d031-10c25f5c53ff.htm">CreateMutexEx(SecurityAttributes, String, CreateMutexFlags, UInt32)</a>
                  </td>
                  <td>
 Creates or opens a named or unnamed mutex object and returns a handle to the object.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1c97def6-5dcb-048f-87f5-6f8943407c40.htm">CreatePrivateNamespace</a>
                  </td>
                  <td>
 Creates a private namespace.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1eb0b62a-5037-b93b-7618-e164f42d74a8.htm">CreateProcess(String, StringBuilder, SecurityAttributes<span id="LST25F871C9_6" data-languageSpecificText="cpp=%"></span>, SecurityAttributes<span id="LST25F871C9_7" data-languageSpecificText="cpp=%"></span>, Boolean, CreateProcessFlags, IntPtr, String, ProcessStartupInfo<span id="LST25F871C9_8" data-languageSpecificText="cpp=%"></span>, ProcessInformation<span id="LST25F871C9_9" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a new process and its primary thread. The new process runs in the security context of the calling process.
 <p />
 If the calling process is impersonating another user,
 the new process uses the token for the calling process, not the impersonation token.
 <p />
 To run the new process in the security context of the user represented by the impersonation token,
 use the <a href="2daf336b-e8c6-7906-692d-8c06f04488d4.htm">CreateProcessAsUser(IntPtr, String, StringBuilder, SecurityAttributes<span id="LST25F871C9_10" data-languageSpecificText="cpp=%"></span>, SecurityAttributes<span id="LST25F871C9_11" data-languageSpecificText="cpp=%"></span>, Boolean, CreateProcessFlags, IntPtr, String, ProcessStartupInfo<span id="LST25F871C9_12" data-languageSpecificText="cpp=%"></span>, ProcessInformation<span id="LST25F871C9_13" data-languageSpecificText="cpp=%"></span>)</a> or <a href="45dbbe61-9b6b-f424-c6ac-ad5a30eff052.htm">CreateProcessWithLogon(String, String, String, ProcessLogonFlags, String, StringBuilder, CreateProcessFlags, IntPtr, String, ProcessStartupInfo<span id="LST25F871C9_14" data-languageSpecificText="cpp=%"></span>, ProcessInformation<span id="LST25F871C9_15" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1bf0057f-5fad-6892-0c47-8d943922cfd1.htm">CreateProcess(String, StringBuilder, SecurityAttributes<span id="LST25F871C9_16" data-languageSpecificText="cpp=%"></span>, SecurityAttributes<span id="LST25F871C9_17" data-languageSpecificText="cpp=%"></span>, Boolean, CreateProcessFlags, IntPtr, String, ProcessStartupInfoEx<span id="LST25F871C9_18" data-languageSpecificText="cpp=%"></span>, ProcessInformation<span id="LST25F871C9_19" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a new process and its primary thread. The new process runs in the security context of the calling process.
 <p />
 If the calling process is impersonating another user,
 the new process uses the token for the calling process, not the impersonation token.
 <p />
 To run the new process in the security context of the user represented by the impersonation token,
 use the <a href="2daf336b-e8c6-7906-692d-8c06f04488d4.htm">CreateProcessAsUser(IntPtr, String, StringBuilder, SecurityAttributes<span id="LST25F871C9_20" data-languageSpecificText="cpp=%"></span>, SecurityAttributes<span id="LST25F871C9_21" data-languageSpecificText="cpp=%"></span>, Boolean, CreateProcessFlags, IntPtr, String, ProcessStartupInfo<span id="LST25F871C9_22" data-languageSpecificText="cpp=%"></span>, ProcessInformation<span id="LST25F871C9_23" data-languageSpecificText="cpp=%"></span>)</a> or <a href="45dbbe61-9b6b-f424-c6ac-ad5a30eff052.htm">CreateProcessWithLogon(String, String, String, ProcessLogonFlags, String, StringBuilder, CreateProcessFlags, IntPtr, String, ProcessStartupInfo<span id="LST25F871C9_24" data-languageSpecificText="cpp=%"></span>, ProcessInformation<span id="LST25F871C9_25" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4fdcef62-5434-b2f1-0724-c34089f43c17.htm">CreateRemoteThread(IntPtr, SecurityAttributes<span id="LST25F871C9_26" data-languageSpecificText="cpp=%"></span>, IntPtr, IntPtr, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_27" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread that runs in the virtual address space of another process.
 <p />
 Use the <a href="ff94d37b-251b-11f7-5ee9-95d54e144f93.htm">CreateRemoteThreadEx(IntPtr, SecurityAttributes, IntPtr, IntPtr, IntPtr, CreateThreadFlags, IntPtr, UInt32<span id="LST25F871C9_28" data-languageSpecificText="cpp=%"></span>)</a> function to create a thread that runs in the
 virtual address space of another process and optionally specify extended attributes.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="96e51414-09a5-f965-bede-f0b202be74bd.htm">CreateRemoteThread(IntPtr, SecurityAttributes<span id="LST25F871C9_29" data-languageSpecificText="cpp=%"></span>, IntPtr, ThreadStart, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_30" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread that runs in the virtual address space of another process.
 <p />
 Use the <a href="ff94d37b-251b-11f7-5ee9-95d54e144f93.htm">CreateRemoteThreadEx(IntPtr, SecurityAttributes, IntPtr, IntPtr, IntPtr, CreateThreadFlags, IntPtr, UInt32<span id="LST25F871C9_31" data-languageSpecificText="cpp=%"></span>)</a> function to create a thread that runs in the
 virtual address space of another process and optionally specify extended attributes.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1e261baf-65f9-713a-95c7-1c87ad3cedff.htm">CreateRemoteThread(IntPtr, SecurityAttributes<span id="LST25F871C9_32" data-languageSpecificText="cpp=%"></span>, IntPtr, UIntPtr, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_33" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread that runs in the virtual address space of another process.
 <p />
 Use the <a href="ff94d37b-251b-11f7-5ee9-95d54e144f93.htm">CreateRemoteThreadEx(IntPtr, SecurityAttributes, IntPtr, IntPtr, IntPtr, CreateThreadFlags, IntPtr, UInt32<span id="LST25F871C9_34" data-languageSpecificText="cpp=%"></span>)</a> function to create a thread that runs in the
 virtual address space of another process and optionally specify extended attributes.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9bbfaa3b-2a54-7626-eeed-20528444ab54.htm">CreateRemoteThread(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_35" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread that runs in the virtual address space of another process.
 <p />
 Use the <a href="ff94d37b-251b-11f7-5ee9-95d54e144f93.htm">CreateRemoteThreadEx(IntPtr, SecurityAttributes, IntPtr, IntPtr, IntPtr, CreateThreadFlags, IntPtr, UInt32<span id="LST25F871C9_36" data-languageSpecificText="cpp=%"></span>)</a> function to create a thread that runs in the
 virtual address space of another process and optionally specify extended attributes.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="49e67758-a49f-2c5d-e6fd-c5279d6374ee.htm">CreateRemoteThread(IntPtr, IntPtr, IntPtr, ThreadStart, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_37" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread that runs in the virtual address space of another process.
 <p />
 Use the <a href="ff94d37b-251b-11f7-5ee9-95d54e144f93.htm">CreateRemoteThreadEx(IntPtr, SecurityAttributes, IntPtr, IntPtr, IntPtr, CreateThreadFlags, IntPtr, UInt32<span id="LST25F871C9_38" data-languageSpecificText="cpp=%"></span>)</a> function to create a thread that runs in the
 virtual address space of another process and optionally specify extended attributes.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="195f9b2c-5314-aa7b-11ef-a1c85032a4f6.htm">CreateRemoteThread(IntPtr, IntPtr, IntPtr, UIntPtr, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_39" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread that runs in the virtual address space of another process.
 <p />
 Use the <a href="ff94d37b-251b-11f7-5ee9-95d54e144f93.htm">CreateRemoteThreadEx(IntPtr, SecurityAttributes, IntPtr, IntPtr, IntPtr, CreateThreadFlags, IntPtr, UInt32<span id="LST25F871C9_40" data-languageSpecificText="cpp=%"></span>)</a> function to create a thread that runs in the
 virtual address space of another process and optionally specify extended attributes.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ff94d37b-251b-11f7-5ee9-95d54e144f93.htm">CreateRemoteThreadEx(IntPtr, SecurityAttributes, IntPtr, IntPtr, IntPtr, CreateThreadFlags, IntPtr, UInt32<span id="LST25F871C9_41" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread that runs in the virtual address space of another process
 and optionally specifies extended attributes such as processor group affinity.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e21c90e3-276b-f146-48c2-e01823506fbf.htm">CreateRemoteThreadEx(IntPtr, SecurityAttributes, IntPtr, ThreadStart, IntPtr, CreateThreadFlags, IntPtr, UInt32<span id="LST25F871C9_42" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread that runs in the virtual address space of another process
 and optionally specifies extended attributes such as processor group affinity.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e8f89ab1-ebfa-5e16-b59f-3f2803bae73a.htm">CreateRemoteThreadEx(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, CreateThreadFlags, IntPtr, UInt32<span id="LST25F871C9_43" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread that runs in the virtual address space of another process
 and optionally specifies extended attributes such as processor group affinity.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="018e4c50-3985-797c-d9ce-a75ed885da72.htm">CreateRemoteThreadEx(IntPtr, IntPtr, IntPtr, ThreadStart, IntPtr, CreateThreadFlags, IntPtr, UInt32<span id="LST25F871C9_44" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread that runs in the virtual address space of another process
 and optionally specifies extended attributes such as processor group affinity.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bfe05edf-54a7-9b4b-1fe4-43a403b68889.htm">CreateSymbolicLink</a>
                  </td>
                  <td>
 Creates a symbolic link.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3804be19-a4ea-7859-b870-39f30c715d28.htm">CreateThread(IntPtr, IntPtr, IntPtr, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_45" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread to execute within the virtual address space of the calling process.
 <p />
 To create a thread that runs in the virtual address space of another process,
 use the <a href="4fdcef62-5434-b2f1-0724-c34089f43c17.htm">CreateRemoteThread(IntPtr, SecurityAttributes<span id="LST25F871C9_46" data-languageSpecificText="cpp=%"></span>, IntPtr, IntPtr, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_47" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3b437d14-72b2-275c-445d-541fab8c8927.htm">CreateThread(IntPtr, IntPtr, ThreadStart, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_48" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread to execute within the virtual address space of the calling process.
 <p />
 To create a thread that runs in the virtual address space of another process,
 use the <a href="4fdcef62-5434-b2f1-0724-c34089f43c17.htm">CreateRemoteThread(IntPtr, SecurityAttributes<span id="LST25F871C9_49" data-languageSpecificText="cpp=%"></span>, IntPtr, IntPtr, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_50" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4d515edf-9ec8-938a-064f-ca8ad6055fea.htm">CreateThread(SecurityAttributes<span id="LST25F871C9_51" data-languageSpecificText="cpp=%"></span>, IntPtr, IntPtr, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_52" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread to execute within the virtual address space of the calling process.
 <p />
 To create a thread that runs in the virtual address space of another process,
 use the <a href="4fdcef62-5434-b2f1-0724-c34089f43c17.htm">CreateRemoteThread(IntPtr, SecurityAttributes<span id="LST25F871C9_53" data-languageSpecificText="cpp=%"></span>, IntPtr, IntPtr, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_54" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="30d8f564-173f-4bdb-c027-9431b5f075a1.htm">CreateThread(SecurityAttributes<span id="LST25F871C9_55" data-languageSpecificText="cpp=%"></span>, IntPtr, ThreadStart, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_56" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a thread to execute within the virtual address space of the calling process.
 <p />
 To create a thread that runs in the virtual address space of another process,
 use the <a href="4fdcef62-5434-b2f1-0724-c34089f43c17.htm">CreateRemoteThread(IntPtr, SecurityAttributes<span id="LST25F871C9_57" data-languageSpecificText="cpp=%"></span>, IntPtr, IntPtr, IntPtr, CreateThreadFlags, UInt32<span id="LST25F871C9_58" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="deb64433-8373-56ce-6a1b-d0cbe5f3577a.htm">DebugActiveProcess</a>
                  </td>
                  <td>
 Enables a debugger to attach to an active process and debug it.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a9b036d0-6356-2b2e-b181-e98f2e020081.htm">DebugActiveProcessStop</a>
                  </td>
                  <td>
 Stops the debugger from debugging the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4f3cbc89-e9ef-ab78-c555-6dbce7b25656.htm">DebugBreak</a>
                  </td>
                  <td>
 Causes a breakpoint exception to occur in the current process.
 This allows the calling thread to signal the debugger to handle the exception.
 <p />
 To cause a breakpoint exception in another process, use the <a href="846d8f79-2068-80ec-7bdc-db944e8a21de.htm">DebugBreakProcess(IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="846d8f79-2068-80ec-7bdc-db944e8a21de.htm">DebugBreakProcess</a>
                  </td>
                  <td>
 Causes a breakpoint exception to occur in the specified process.
 This allows the calling thread to signal the debugger to handle the exception.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="56ef5ca8-58c6-489c-c7fe-b39180f0f3df.htm">DebugSetProcessKillOnExit</a>
                  </td>
                  <td>
 Sets the action to be performed when the calling thread exits.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d193072b-c5f9-33fa-4b71-2860b2d07cc5.htm">DecodePointer(IntPtr)</a>
                  </td>
                  <td>
 Decodes a pointer that was previously encoded with <a href="d76d8e43-3418-60f5-98b7-cd50daf97fc0.htm">EncodePointer(IntPtr)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="053a61a6-3ae9-effd-fa71-198593b7aeef.htm">DecodePointer(UIntPtr)</a>
                  </td>
                  <td>
 Decodes a pointer that was previously encoded with <a href="d76d8e43-3418-60f5-98b7-cd50daf97fc0.htm">EncodePointer(IntPtr)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ddea1bdb-00b8-ad2c-0dd7-f4e4af296d9d.htm">DecodeSystemPointer(IntPtr)</a>
                  </td>
                  <td>
 Decodes a pointer that was previously encoded with <a href="13852f9d-1403-ba52-9453-e0a87cf4a0a4.htm">EncodeSystemPointer(IntPtr)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4da45788-6abd-8c07-2201-f777b95855e8.htm">DecodeSystemPointer(UIntPtr)</a>
                  </td>
                  <td>
 Decodes a pointer that was previously encoded with <a href="13852f9d-1403-ba52-9453-e0a87cf4a0a4.htm">EncodeSystemPointer(IntPtr)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0cb72734-efaf-eacb-f785-cb42f8cd5e6a.htm">DefineDosDevice</a>
                  </td>
                  <td>
 Defines, redefines, or deletes MS-DOS device names.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ceb3fef6-9653-1ba7-cf47-18b9cfffcc61.htm">DeleteAtom</a>
                  </td>
                  <td>
 Decrements the reference count of a local string atom.
 <p />
 If the atom's reference count is reduced to zero,
 <a href="ceb3fef6-9653-1ba7-cf47-18b9cfffcc61.htm">DeleteAtom(UInt16)</a> removes the string associated with the atom from the local atom table.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d742a29c-5b54-e594-76bf-d1d5c5210a8d.htm">DeleteBoundaryDescriptor</a>
                  </td>
                  <td>
 Deletes the specified boundary descriptor.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="acf74fef-a58b-cb38-b8a2-d0309a4c3ad9.htm">DeleteFile</a>
                  </td>
                  <td>
 Deletes an existing file.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="71d3521a-208d-9f73-4d29-c650c1517b60.htm">DeleteVolumeMountPoint</a>
                  </td>
                  <td>
 Deletes a drive letter or mounted folder.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c99e0af4-092f-7afc-988d-46670d4268fc.htm">DeviceIoControl(IntPtr, DirectoryManagementControlCodes, IntPtr, Int32, IntPtr, Int32, Int32<span id="LST25F871C9_59" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Sends a control code directly to a specified device driver,
 causing the corresponding device to perform the corresponding operation.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="990a2077-cc83-5482-1565-649737d1022c.htm">DeviceIoControl(IntPtr, UInt32, IntPtr, Int32, IntPtr, Int32, Int32<span id="LST25F871C9_60" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Sends a control code directly to a specified device driver,
 causing the corresponding device to perform the corresponding operation.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3e0df151-fa13-9731-7499-125b520f3085.htm">DeviceIoControl(SafeFileHandle, DirectoryManagementControlCodes, IntPtr, Int32, IntPtr, Int32, Int32<span id="LST25F871C9_61" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Sends a control code directly to a specified device driver,
 causing the corresponding device to perform the corresponding operation.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a6679847-013f-c761-3c33-bc5a93540f2c.htm">DeviceIoControl(SafeFileHandle, UInt32, IntPtr, Int32, IntPtr, Int32, Int32<span id="LST25F871C9_62" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Sends a control code directly to a specified device driver,
 causing the corresponding device to perform the corresponding operation.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="12a51f5f-7689-9274-bdd8-50ecbf0dcdba.htm">DisableThreadLibraryCalls</a>
                  </td>
                  <td>
 Disables the DLL_THREAD_ATTACH and DLL_THREAD_DETACH notifications for the specified dynamic-link library (DLL).
 This can reduce the size of the working set for some applications.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a8e173f9-abf1-8e2d-f8de-1f695bb82d4b.htm">DiscardVirtualMemory(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Discards the memory contents of a range of memory pages, without decommitting the memory.
 <p />
 The contents of discarded memory is undefined and must be rewritten by the application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cdf7d7a4-46a3-ba9b-3f7e-cf4c08694b39.htm">DiscardVirtualMemory(IntPtr, UInt32)</a>
                  </td>
                  <td>
 Discards the memory contents of a range of memory pages, without decommitting the memory.
 <p />
 The contents of discarded memory is undefined and must be rewritten by the application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5e7d202d-71a4-1ceb-72f9-8698013665ec.htm">DuplicateHandle(IntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_63" data-languageSpecificText="cpp=%"></span>, GenericAccessRights, Boolean, DuplicateHandleOptions)</a>
                  </td>
                  <td>
 Duplicates an object handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1867987c-935a-3ef5-863f-d6c3bbbc980c.htm">DuplicateHandle(IntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_64" data-languageSpecificText="cpp=%"></span>, ProcessAccessRights, Boolean, DuplicateHandleOptions)</a>
                  </td>
                  <td>
 Duplicates an object handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0051b341-69ad-bf0a-f024-cb83bb339e7b.htm">DuplicateHandle(IntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_65" data-languageSpecificText="cpp=%"></span>, StandardAccessRights, Boolean, DuplicateHandleOptions)</a>
                  </td>
                  <td>
 Duplicates an object handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dd0644b9-07fb-5892-1c5b-26265077f00f.htm">DuplicateHandle(IntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_66" data-languageSpecificText="cpp=%"></span>, ThreadAccessRights, Boolean, DuplicateHandleOptions)</a>
                  </td>
                  <td>
 Duplicates an object handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0aeac4b7-389b-efa3-923f-172545fb1ee5.htm">DuplicateHandle(IntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_67" data-languageSpecificText="cpp=%"></span>, UInt32, Boolean, DuplicateHandleOptions)</a>
                  </td>
                  <td>
 Duplicates an object handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d76d8e43-3418-60f5-98b7-cd50daf97fc0.htm">EncodePointer(IntPtr)</a>
                  </td>
                  <td>
 Encodes the specified pointer.
 <p />
 Encoded pointers can be used to provide another layer of protection for pointer values.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="703a2b3a-09d9-0b7c-0d9f-6a2ebcad68db.htm">EncodePointer(UIntPtr)</a>
                  </td>
                  <td>
 Encodes the specified pointer.
 <p />
 Encoded pointers can be used to provide another layer of protection for pointer values.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="13852f9d-1403-ba52-9453-e0a87cf4a0a4.htm">EncodeSystemPointer(IntPtr)</a>
                  </td>
                  <td>
 Encodes the specified pointer with a system-specific value.
 <p />
 Encoded pointers can be used to provide another layer of protection for pointer values.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5f00e14a-b3cd-eca8-2c87-7758d6c8149c.htm">EncodeSystemPointer(UIntPtr)</a>
                  </td>
                  <td>
 Encodes the specified pointer with a system-specific value.
 <p />
 Encoded pointers can be used to provide another layer of protection for pointer values.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bdc5ebd0-383f-fc18-ff48-552fed615b25.htm">EndUpdateResource(IntPtr, Boolean)</a>
                  </td>
                  <td>
 Commits or discards changes made prior to a call to <a href="a32ac90d-da62-72e0-3dd5-0d7ecf7caae4.htm">UpdateResource(SafeModuleHandle, ResourceType, IntPtr, UInt16, IntPtr, UInt32)</a> function.
 <p />
 Before you call this function,
 make sure all file handles other than the one returned by <a href="a1a21ee0-6d79-48ac-1107-48878eeeccb1.htm">BeginUpdateResource(String, Boolean)</a> are closed.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="428d9867-af41-8b32-fb21-93f081ede6c4.htm">EndUpdateResource(SafeModuleHandle, Boolean)</a>
                  </td>
                  <td>
 Commits or discards changes made prior to a call to <a href="a32ac90d-da62-72e0-3dd5-0d7ecf7caae4.htm">UpdateResource(SafeModuleHandle, ResourceType, IntPtr, UInt16, IntPtr, UInt32)</a> function.
 <p />
 Before you call this function,
 make sure all file handles other than the one returned by <a href="a1a21ee0-6d79-48ac-1107-48878eeeccb1.htm">BeginUpdateResource(String, Boolean)</a> are closed.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a48029c0-f2dd-c8c4-1837-a8dedb584564.htm">EnumSystemCodePages</a>
                  </td>
                  <td>
 Enumerates the code pages that are either installed on or supported by an operating system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="72e36cd1-001e-75cd-a1bb-a44ccbff7b40.htm">EnumSystemLocales</a>
                  </td>
                  <td>
 Enumerates the locales that are either installed on or supported by an operating system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="db22a13a-cea9-0b1b-fa40-ab9e680d001d.htm">EnumUILanguages</a>
                  </td>
                  <td>
 Enumerates the user interface languages that are available on the operating system 
 and calls the callback function with every language in the list.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_top" rel="noopener noreferrer">Equals</a>
                  </td>
                  <td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_top" rel="noopener noreferrer">Object</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="6bd46c0d-078a-e930-4777-2a212cfd3a64.htm">ExitProcess</a>
                  </td>
                  <td>
 Ends the calling process and all its threads.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bec83a8c-fe18-6aae-131d-214907d6f63e.htm">ExitThread</a>
                  </td>
                  <td>
 Ends the calling thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1a2347a4-8460-c1d4-87f9-b6d0c90caa60.htm">FatalAppExit</a>
                  </td>
                  <td>
 Displays a message box and terminates the application when the message box is closed.
 <p />
 If the system is running with a debug version of Kernel32.dll,
 the message box gives the user the opportunity to terminate the application
 or to cancel the message box and return to the application that called <a href="1a2347a4-8460-c1d4-87f9-b6d0c90caa60.htm">FatalAppExit(UInt32, String)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="41f3bc14-d1f0-c622-5113-75037fd340f1.htm">FatalExit</a>
                  </td>
                  <td>
 Transfers execution control to the debugger. The behavior of the debugger thereafter is specific to the type of debugger used.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3f2ff857-f3ac-b7ba-f1d6-5cd4f01f09ee.htm">FileTimeToSystemTime</a>
                  </td>
                  <td>
 Converts a file time to system time format. System time is based on Coordinated Universal Time (UTC).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b83b94a9-6105-afc6-2907-29c341156eff.htm">FillConsoleOutputAttribute</a>
                  </td>
                  <td>
 Sets the character attributes for a specified number of character cells, beginning at the specified coordinates in a screen buffer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="609e67c7-0d99-4c21-d55a-55909fed2961.htm">FillConsoleOutputCharacter</a>
                  </td>
                  <td>
 Writes a character to the console screen buffer a specified number of times, beginning at the specified coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="82b8d6f7-01b9-3011-6bc2-d148a58ee55e.htm">FillMemory</a>
                  </td>
                  <td>
 Fills a block of memory with a specified value.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9b6aeb42-40b5-9152-a821-0e42ee875e0d.htm">FindAtom</a>
                  </td>
                  <td>
 Searches the local atom table for the specified character string and retrieves the atom associated with that string.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8a9b6223-19a0-0461-aaa1-c68027d82f37.htm">FindClose</a>
                  </td>
                  <td>
 Closes a file search handle opened by   
 FindFirstFile, 
 FindFirstFileEx, 
 FindFirstFileTransacted, 
 FindFirstFileNameW,
 FindFirstFileNameTransactedW, 
 <a href="2243abd9-978c-2641-69e7-132461188033.htm">FindFirstStreamW(String, FindStreamInfoLevels, FindStreamData, UInt32)</a> or 
 FindFirstStreamTransactedW functions. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2243abd9-978c-2641-69e7-132461188033.htm">FindFirstStreamW</a>
                  </td>
                  <td>
 Enumerates the first stream with a ::$DATA stream type in the specified file or directory.
 <p />
 To perform this operation as a transacted operation, use the 'FindFirstStreamTransactedW' function. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dd58d74a-3e5a-9bbb-28a8-5ddd1199f5a1.htm">FindNextStreamW</a>
                  </td>
                  <td>
 Continues a stream search started by a previous call to the <a href="2243abd9-978c-2641-69e7-132461188033.htm">FindFirstStreamW(String, FindStreamInfoLevels, FindStreamData, UInt32)</a> function. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="80a7243a-1a79-a1ef-589c-87e0798bb6fd.htm">FindResource(IntPtr, IntPtr, ResourceType)</a>
                  </td>
                  <td>
 Determines the location of a resource with the specified type and name in the specified module.
 <p />
 To specify a language of the resource, use the <a href="1419c53e-b6e4-1a94-83cc-cd67b28c4911.htm">FindResourceEx(SafeModuleHandle, ResourceType, IntPtr, UInt16)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="12d473f0-727e-1fcf-1396-fbf3629cee14.htm">FindResource(IntPtr, IntPtr, String)</a>
                  </td>
                  <td>
 Determines the location of a resource with the specified type and name in the specified module.
 <p />
 To specify a language of the resource, use the <a href="1419c53e-b6e4-1a94-83cc-cd67b28c4911.htm">FindResourceEx(SafeModuleHandle, ResourceType, IntPtr, UInt16)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9f0d422b-23c6-989f-a78d-ba20766a9b91.htm">FindResource(IntPtr, String, ResourceType)</a>
                  </td>
                  <td>
 Determines the location of a resource with the specified type and name in the specified module.
 <p />
 To specify a language of the resource, use the <a href="1419c53e-b6e4-1a94-83cc-cd67b28c4911.htm">FindResourceEx(SafeModuleHandle, ResourceType, IntPtr, UInt16)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b1fc8c16-e68d-da83-9de6-8ca84f2cc4cf.htm">FindResource(IntPtr, String, String)</a>
                  </td>
                  <td>
 Determines the location of a resource with the specified type and name in the specified module.
 <p />
 To specify a language of the resource, use the <a href="1419c53e-b6e4-1a94-83cc-cd67b28c4911.htm">FindResourceEx(SafeModuleHandle, ResourceType, IntPtr, UInt16)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ff5e3e65-932c-0128-cd7f-b03bbcb097b8.htm">FindResource(SafeModuleHandle, IntPtr, ResourceType)</a>
                  </td>
                  <td>
 Determines the location of a resource with the specified type and name in the specified module.
 <p />
 To specify a language of the resource, use the <a href="1419c53e-b6e4-1a94-83cc-cd67b28c4911.htm">FindResourceEx(SafeModuleHandle, ResourceType, IntPtr, UInt16)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e28e800e-16ae-d967-2a4c-307237be263b.htm">FindResource(SafeModuleHandle, IntPtr, String)</a>
                  </td>
                  <td>
 Determines the location of a resource with the specified type and name in the specified module.
 <p />
 To specify a language of the resource, use the <a href="1419c53e-b6e4-1a94-83cc-cd67b28c4911.htm">FindResourceEx(SafeModuleHandle, ResourceType, IntPtr, UInt16)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a0b2407d-a5b3-994d-2526-7af530ebf7cd.htm">FindResource(SafeModuleHandle, String, ResourceType)</a>
                  </td>
                  <td>
 Determines the location of a resource with the specified type and name in the specified module.
 <p />
 To specify a language of the resource, use the <a href="1419c53e-b6e4-1a94-83cc-cd67b28c4911.htm">FindResourceEx(SafeModuleHandle, ResourceType, IntPtr, UInt16)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="13d57a1d-f5d5-2e2f-8d2a-17cbe616a5a4.htm">FindResource(SafeModuleHandle, String, String)</a>
                  </td>
                  <td>
 Determines the location of a resource with the specified type and name in the specified module.
 <p />
 To specify a language of the resource, use the <a href="1419c53e-b6e4-1a94-83cc-cd67b28c4911.htm">FindResourceEx(SafeModuleHandle, ResourceType, IntPtr, UInt16)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="03f0a00e-d24e-984d-e6f7-485435968509.htm">FindResourceEx(IntPtr, ResourceType, IntPtr, UInt16)</a>
                  </td>
                  <td>
 Determines the location of the resource with the specified type, name, and language in the specified module.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="01cbe010-3541-0e0f-c84e-fdf93829ba42.htm">FindResourceEx(IntPtr, ResourceType, String, UInt16)</a>
                  </td>
                  <td>
 Determines the location of the resource with the specified type, name, and language in the specified module.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7a651c06-2e42-61b3-5c09-c2092572bb29.htm">FindResourceEx(IntPtr, String, IntPtr, UInt16)</a>
                  </td>
                  <td>
 Determines the location of the resource with the specified type, name, and language in the specified module.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b8c0cadc-456e-64e5-5603-2899ca141b31.htm">FindResourceEx(IntPtr, String, String, UInt16)</a>
                  </td>
                  <td>
 Determines the location of the resource with the specified type, name, and language in the specified module.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1419c53e-b6e4-1a94-83cc-cd67b28c4911.htm">FindResourceEx(SafeModuleHandle, ResourceType, IntPtr, UInt16)</a>
                  </td>
                  <td>
 Determines the location of the resource with the specified type, name, and language in the specified module.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f86f49ce-d13a-c074-7466-bdabd73e3f81.htm">FindResourceEx(SafeModuleHandle, ResourceType, String, UInt16)</a>
                  </td>
                  <td>
 Determines the location of the resource with the specified type, name, and language in the specified module.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bdb5ecfe-3fd3-50ee-40c2-1459a0b05b26.htm">FindResourceEx(SafeModuleHandle, String, IntPtr, UInt16)</a>
                  </td>
                  <td>
 Determines the location of the resource with the specified type, name, and language in the specified module.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2dc8100d-974c-3332-6105-ae5bf3a50438.htm">FindResourceEx(SafeModuleHandle, String, String, UInt16)</a>
                  </td>
                  <td>
 Determines the location of the resource with the specified type, name, and language in the specified module.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b6c3a199-d7b1-bef8-d68a-2f4fa4a2042d.htm">FlushConsoleInputBuffer</a>
                  </td>
                  <td>
 Flushes the console input buffer. All input records currently in the input buffer are discarded.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="158fb38c-36f0-f605-b1a2-e39bc5cdab1e.htm">FlushFileBuffers</a>
                  </td>
                  <td>
 Flushes the buffers of a specified file and causes all buffered data to be written to a file.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b02bed8b-779a-1091-810d-4172c9348253.htm">FlushProcessWriteBuffers</a>
                  </td>
                  <td>
 Flushes the write queue of each processor that is running a thread of the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7343a710-688f-9105-0023-795b5e56c8c5.htm">FormatMessage</a>
                  </td>
                  <td>
 Formats a message string. The function requires a message definition as input. The message definition can come from a buffer passed into the function. It can come from a message table resource in an already-loaded module. Or the caller can ask the function to search the system's message table resource(s) for the message definition. The function finds the message definition in a message table resource based on a message identifier and a language identifier. The function copies the formatted message text to an output buffer, processing any embedded insert sequences if requested.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b583472d-4017-adb2-ff06-dd399ed947a8.htm">FreeConsole</a>
                  </td>
                  <td>
 Detaches the calling process from its console.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="76b85610-e6d2-6bbc-d8a5-dd3f8c3b1127.htm">FreeLibrary(IntPtr)</a>
                  </td>
                  <td>
 Frees the loaded dynamic-link library (DLL) module and, if necessary, decrements its reference count.
 <p />
 When the reference count reaches zero, the module is unloaded from the address space of the calling process and the
 handle is no longer valid.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0ac5626e-db2b-9178-0b45-de67296e8151.htm">FreeLibrary(SafeModuleHandle)</a>
                  </td>
                  <td>
 Frees the loaded dynamic-link library (DLL) module and, if necessary, decrements its reference count.
 <p />
 When the reference count reaches zero, the module is unloaded from the address space of the calling process and the
 handle is no longer valid.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6cf6bef0-18fa-877f-8ed6-d96daa8d8b9b.htm">FreeLibraryAndExitThread</a>
                  </td>
                  <td>
 Decrements the reference count of a loaded dynamic-link library (DLL) by one, then calls ExitThread to terminate the calling thread.
 <p />
 This function does not return a value. Invalid module handles are ignored.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="87a38a89-359a-cd18-e9f7-295fee8828f5.htm">FreeUserPhysicalPages(IntPtr, IntPtr<span id="LST25F871C9_68" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Frees physical memory pages that are allocated previously by using
 <a href="0f30321a-c197-3905-90b9-b7283306d591.htm">AllocateUserPhysicalPages(IntPtr, IntPtr<span id="LST25F871C9_69" data-languageSpecificText="cpp=%"></span>, IntPtr)</a> or <a href="5d5c6fe8-fddd-e1d6-9da1-eb6f3b30ba88.htm">AllocateUserPhysicalPagesNuma(IntPtr, IntPtr<span id="LST25F871C9_70" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32)</a>.
 <p />
 If any of these pages are currently mapped in the Address Windowing Extensions (AWE) region,
 they are automatically unmapped by this call.
 <p />
 This does not affect the virtual address space that is occupied by a specified Address Windowing Extensions (AWE) region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1071297a-57bf-899b-22e5-1e37e7a271ca.htm">FreeUserPhysicalPages(IntPtr, UIntPtr<span id="LST25F871C9_71" data-languageSpecificText="cpp=%"></span>, UIntPtr)</a>
                  </td>
                  <td>
 Frees physical memory pages that are allocated previously by using
 <a href="0f30321a-c197-3905-90b9-b7283306d591.htm">AllocateUserPhysicalPages(IntPtr, IntPtr<span id="LST25F871C9_72" data-languageSpecificText="cpp=%"></span>, IntPtr)</a> or <a href="5d5c6fe8-fddd-e1d6-9da1-eb6f3b30ba88.htm">AllocateUserPhysicalPagesNuma(IntPtr, IntPtr<span id="LST25F871C9_73" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32)</a>.
 <p />
 If any of these pages are currently mapped in the Address Windowing Extensions (AWE) region,
 they are automatically unmapped by this call.
 <p />
 This does not affect the virtual address space that is occupied by a specified Address Windowing Extensions (AWE) region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fbc77bb3-2a66-b020-0f76-0ac1a8954171.htm">GetActiveProcessorGroupCount</a>
                  </td>
                  <td>
 Returns the number of active processor groups in the system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5bd0565b-270b-25b0-5980-22031fc1f1af.htm">GetAnsiCodePage</a>
                  </td>
                  <td>
 Retrieves the current Windows ANSI code page identifier for the operating system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ab12e11a-1d95-dff4-4d38-9222a65b5356.htm">GetApplicationRecoveryCallback</a>
                  </td>
                  <td>
 Retrieves a pointer to the callback routine registered for the specified process.
 <p />
 The address returned is in the virtual address space of the process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7d7ce7f6-d7bc-2633-21d4-41ed93f290a5.htm">GetApplicationRestartSettings</a>
                  </td>
                  <td>
 Retrieves the restart information registered for the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e5edd73b-56e5-8c05-abda-0174666758a3.htm">GetAtomName</a>
                  </td>
                  <td>
 Retrieves a copy of the character string associated with the specified local atom.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="60005685-84e0-c7e0-376a-3209f308aa5a.htm">GetBinaryType</a>
                  </td>
                  <td>
 Determines whether a file is an executable (.exe) file, and if so, which subsystem runs the executable file.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="401760a3-25c6-f613-fe09-4faf29dce1e3.htm">GetCommandLine</a>
                  </td>
                  <td>
 Retrieves the command-line string for the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="392ae3fe-5398-e189-92ca-773462298461.htm">GetCompressedFileSize</a>
                  </td>
                  <td>
 Retrieves the actual number of bytes of disk storage used to store a specified file.
 <p />
 If the file is located on a volume that supports compression and the file is compressed,
 the value obtained is the compressed size of the specified file.
 <p />
 If the file is located on a volume that supports sparse files and the file is a sparse file,
 the value obtained is the sparse size of the specified file.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2669be7c-8518-adbe-e38a-068b1b3172d2.htm">GetConsoleCodepage</a>
                  </td>
                  <td>
 Retrieves the input code page used by the console associated with the calling process.
 <p />
 A console uses its input code page to translate keyboard input into the corresponding character value.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0aecd89a-6929-aa1d-87c1-c0560769d931.htm">GetConsoleDisplayMode</a>
                  </td>
                  <td>
 Sets the display mode of the specified console screen buffer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="de504213-01cd-2a98-ee94-7ab682e6bf60.htm">GetConsoleFontSize</a>
                  </td>
                  <td>
 Retrieves the size of the font used by the specified console screen buffer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cfcbfe64-b969-7b6d-a3f7-3fd71966964a.htm">GetConsoleOriginalTitle</a>
                  </td>
                  <td>
 Retrieves the original title for the current console window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f877bf82-6565-f2d1-1f8d-9806b04ecc59.htm">GetConsoleOutputCodepage</a>
                  </td>
                  <td>
 Retrieves the output code page used by the console associated with the calling process.
 <p />
 A console uses its output code page to translate the character values written by the
 various output functions into the images displayed in the console window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7c2112c3-43d2-c154-64c6-82fed5d35059.htm">GetConsoleTitle</a>
                  </td>
                  <td>
 Retrieves the title for the current console window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="672eadf7-b926-ec28-1140-c84db6864599.htm">GetConsoleWindow</a>
                  </td>
                  <td>
 Retrieves the window handle used by the console associated with the calling process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="088f280c-3daf-fe48-862a-0a6909c1fa4c.htm">GetCurrentConsoleFont</a>
                  </td>
                  <td>
 Retrieves information about the current console font.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="aecdd480-693b-d0b3-59fc-ce9cad9b5547.htm">GetCurrentConsoleFontEx</a>
                  </td>
                  <td>
 Retrieves extended information about the current console font.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7258eb39-6b7f-598f-5c29-e8154334e607.htm">GetCurrentDirectory</a>
                  </td>
                  <td>
 Retrieves the current directory for the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="03c58658-c638-f950-a4e4-7f0da31bb92b.htm">GetCurrentProcess</a>
                  </td>
                  <td>
 Retrieves a handle for the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="90cec9ce-00ee-fc2e-1e22-7b7b4074933e.htm">GetCurrentProcessId</a>
                  </td>
                  <td>
 Retrieves the process identifier of the calling process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e2f0c135-8faf-2269-5f03-bbad88807b65.htm">GetCurrentProcessorNumber</a>
                  </td>
                  <td>
 Retrieves the number of the processor the current thread was running on during the call to this function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7208d431-e3d2-96d0-2722-7868a563803d.htm">GetCurrentThread</a>
                  </td>
                  <td>
 Retrieves a pseudo handle for the calling thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6315d581-7922-7ab3-c531-b95d8587510f.htm">GetCurrentThreadId</a>
                  </td>
                  <td>
 Gets the thread identifier of the calling thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="638c39a2-dcba-c0e8-5d62-0499fa102b2a.htm">GetCurrentThreadStackLimits</a>
                  </td>
                  <td>
 Retrieves the boundaries of the stack that was allocated by the system for the current thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2eb49fc1-c260-1baa-2ba4-a2693c79ced8.htm">GetDevicePowerState</a>
                  </td>
                  <td>
 Retrieves the current power state of the specified device.
 <p />
 This function cannot be used to query the power state of a display device.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="232a89ae-8de0-47c8-923f-84b9ad82c51a.htm">GetDllDirectory(UInt32, IntPtr)</a>
                  </td>
                  <td>
 Retrieves the application-specific portion of the search path used to locate DLLs for the application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f9aef11c-987f-52d6-c1f8-1f2b62665a8b.htm">GetDllDirectory(UInt32, StringBuilder)</a>
                  </td>
                  <td>
 Retrieves the application-specific portion of the search path used to locate DLLs for the application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d1837364-59cd-bae8-5b21-8ba27e1dea35.htm">GetErrorMode</a>
                  </td>
                  <td>
 Retrieves the error mode for the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ba3deb52-ae88-fe25-dc87-b10aa9a6f367.htm">GetExitCodeProcess</a>
                  </td>
                  <td>
 Retrieves the termination status of the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4264393a-a529-0f7a-78eb-c023edde0b28.htm">GetExitCodeThread</a>
                  </td>
                  <td>
 Retrieves the termination status of the specified thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="eb8b9882-d174-6c9f-9243-5107102563ff.htm">GetFileSize(IntPtr, UInt32<span id="LST25F871C9_74" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the size of the specified file, in bytes.
 <p />
 It is recommended that you use <a href="5fc73963-2cf0-ffe1-1eea-e2f8819d8bfb.htm">GetFileSizeEx(SafeFileHandle, Int64<span id="LST25F871C9_75" data-languageSpecificText="cpp=%"></span>)</a> instead.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="1c4022a2-d38b-7902-a96b-7ad4e9f7be0a.htm">GetFileSize(SafeFileHandle, UInt32<span id="LST25F871C9_76" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the size of the specified file, in bytes.
 <p />
 It is recommended that you use <a href="5fc73963-2cf0-ffe1-1eea-e2f8819d8bfb.htm">GetFileSizeEx(SafeFileHandle, Int64<span id="LST25F871C9_77" data-languageSpecificText="cpp=%"></span>)</a> instead.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="765f7f14-ccdb-31be-afdc-857d143b3bf0.htm">GetFileSizeEx(IntPtr, Int64<span id="LST25F871C9_78" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the size of the specified file.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5fc73963-2cf0-ffe1-1eea-e2f8819d8bfb.htm">GetFileSizeEx(SafeFileHandle, Int64<span id="LST25F871C9_79" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the size of the specified file.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b5fb88ac-41b0-339a-6a56-baf44ac3ab02.htm">GetFirmwareEnvironmentVariable</a>
                  </td>
                  <td>
 Retrieves the value of the specified firmware environment variable.
 <p />
 Note that firmware variables are not supported on a legacy BIOS-based system.
 <p />
 The <a href="b5fb88ac-41b0-339a-6a56-baf44ac3ab02.htm">GetFirmwareEnvironmentVariable(String, String, IntPtr, Int32)</a> function will always fail on a legacy BIOS-based system, 
 or if Windows was installed using legacy BIOS on a system that supports both legacy BIOS and UEFI. 
 <p />
 To identify these conditions, call the function with 
 a dummy firmware environment name such as an empty string ("") for the <span class="parameter">variableName</span> parameter, 
 and a dummy GUID such as "{00000000-0000-0000-0000-000000000000}" for the <span class="parameter">vendorGuid</span> parameter. 
 <p />
 On a legacy BIOS-based system, or on a system that supports both legacy BIOS and UEFI where Windows was 
 installed using legacy BIOS, the function will fail with <a href="3c01115c-f2e9-a5d5-cbf3-0510ace8d7de.htm">ERROR_INVALID_FUNCTION</a><p />
 On a UEFI-based system, the function will fail with an error specific to the firmware, 
 such as <a href="3c01115c-f2e9-a5d5-cbf3-0510ace8d7de.htm">ERROR_NOACCESS</a>, to indicate that the dummy GUID namespace does not exist.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0033048c-8e42-ec32-4e2d-7d92148377c6.htm">GetHandleInformation</a>
                  </td>
                  <td>
 Retrieves certain properties of an object handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode#system-object-gethashcode" target="_top" rel="noopener noreferrer">GetHashCode</a>
                  </td>
                  <td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_top" rel="noopener noreferrer">Object</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="7719c517-0202-1c6e-4676-206c8899b67b.htm">GetIntegratedDisplaySize</a>
                  </td>
                  <td>
 Retrieves the best estimate of the diagonal size of the built-in screen, in inches.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f395f133-a796-2927-f2d7-6b6f5e428603.htm">GetLargePageMinimum</a>
                  </td>
                  <td>
 Retrieves the minimum size of a large memory page.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="87cea479-67a7-fb15-0516-f10bcef1bf2a.htm">GetLastError</a>
                  </td>
                  <td>
 Retrieves the calling thread's last-error code value.
 <p />
 The last-error code is maintained on a per-thread basis. Multiple threads do not overwrite each other's last-error code.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a7add20d-3081-cabf-8316-e1430946bfbe.htm">GetLocalTime</a>
                  </td>
                  <td>
 Retrieves the current local date and time.
 <p />
 To retrieve the current date and time in Coordinated Universal Time (UTC) format,
 use the <a href="a7add20d-3081-cabf-8316-e1430946bfbe.htm">GetLocalTime(SystemTime<span id="LST25F871C9_80" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="443b68ff-211e-d1cd-8aea-edc7475a6c3a.htm">GetLogicalDrives</a>
                  </td>
                  <td>
 Retrieves a bitmask representing the currently available disk drives.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="45869459-a2db-3016-5bfb-094ef6e6b6c2.htm">GetLogicalDriveStrings</a>
                  </td>
                  <td>
 Fills a buffer with strings that specify valid drives in the system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="32deb9c5-e307-0e42-8f9c-8e282894ae9b.htm">GetLongPathName</a>
                  </td>
                  <td>
 Converts the specified path to its long form.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1cfecb01-6623-61aa-a43b-c2a2d7d40bf3.htm">GetMaximumProcessorCount</a>
                  </td>
                  <td>
 Returns the maximum number of logical processors that a processor group or the system can have.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a2807ba6-f02d-79e4-3c57-d143c4606cb1.htm">GetMaximumProcessorGroupCount</a>
                  </td>
                  <td>
 Returns the maximum number of processor groups that the system can have.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d83a0ef9-776e-7033-2bd4-4546c50d255f.htm">GetModuleFileName</a>
                  </td>
                  <td>
 Retrieves the fully qualified path for the file that contains the specified module.
 The module must have been loaded by the current process.
 <p />
 To locate the file for a module that was loaded by another process,
 use the <a href="37496ec3-d8f8-00c9-9827-cc8464997aa1.htm">GetModuleFileNameEx(IntPtr, IntPtr, StringBuilder, UInt32)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f5c6293e-a2d3-ace8-916b-876164741de4.htm">GetModuleHandle</a>
                  </td>
                  <td>
 Retrieves a module handle for the specified module.
 <p />
 The module must have been loaded by the calling process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="175bd525-9ce5-d5fe-83df-eb89114d491a.htm">GetModuleHandleEx</a>
                  </td>
                  <td>
 Retrieves a module handle for the specified module and increments the module's reference count
 unless <a href="4c7c0b8c-2520-2f64-3e36-4fe8cd4ecba2.htm">UnchangedReferenceCount</a> flag is specified.
 <p />
 The module must have been loaded by the calling process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="62d82d7d-5321-6955-4522-d733ac0d35f0.htm">GetOEMCodePage</a>
                  </td>
                  <td>
 Returns the current original equipment manufacturer (OEM) code page identifier for the operating system.
 <p />
 Note: The ANSI code pages can be different on different computers, or can be changed for a single computer, leading to data corruption.
 <p />
 For the most consistent results, applications should use Unicode, such as UTF-8 or UTF-16, instead of a specific code page.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="249eec9a-479d-d098-944d-7b8cdf238b64.htm">GetOsManufacturingMode</a>
                  </td>
                  <td>
 Determine whether the device is in Manufacturing Mode or not.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="de9895c0-8709-3f99-55d8-2f342d887dd8.htm">GetPhysicallyInstalledSystemMemory</a>
                  </td>
                  <td>
 Retrieves the amount of RAM that is physically installed on the computer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3cbd50cc-d181-0cb0-1636-19521904e901.htm">GetPriorityClass</a>
                  </td>
                  <td>
 Retrieves the priority class for the specified process.
 <p />
 This value, together with the priority value of each thread of the process,
 determines each thread's base priority level.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="158574c9-6068-4616-94fc-fcee308d9fff.htm">GetProcAddress(IntPtr, String)</a>
                  </td>
                  <td>
 Retrieves the address of an exported function or variable from the specified dynamic-link library (DLL).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="386b1b34-4022-6046-9515-542213e0872d.htm">GetProcAddress(SafeModuleHandle, String)</a>
                  </td>
                  <td>
 Retrieves the address of an exported function or variable from the specified dynamic-link library (DLL).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ea1997ca-2f43-0baa-a33d-75f4725d9b47.htm">GetProcessHandleCount</a>
                  </td>
                  <td>
 Retrieves the number of open handles that belong to the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a7f2ac8c-025b-876d-84be-55eb206f6b7d.htm">GetProcessHeap</a>
                  </td>
                  <td>
 Retrieves a handle to the default heap of the calling process. 
 This handle can then be used in subsequent calls to the heap functions.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d0338809-d65b-ce01-6ac0-a2cddf7bfcba.htm">GetProcessHeaps</a>
                  </td>
                  <td>
 Returns the number of active heaps and retrieves handles to all of the active heaps for the calling process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a61ac3bc-6f1f-c296-8e49-531a9b51e89b.htm">GetProcessId</a>
                  </td>
                  <td>
 Retrieves the process identifier (PID) of the specified process handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="51f8a1aa-9d3d-c66b-b43e-b65e9131ca1b.htm">GetProcessIdOfThread</a>
                  </td>
                  <td>
 Retrieves the process identifier of the process associated with the specified thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="86a399a1-87a7-acaf-a9a8-b4360b223c9c.htm">GetProcessIoCounters</a>
                  </td>
                  <td>
 Retrieves accounting information for all I/O operations performed by the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c3548201-c66a-c4ad-b13c-ddd70340b5a3.htm">GetProcessPreferredUILanguages</a>
                  </td>
                  <td>
 Retrieves the preferred UI languages for the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c81a009d-7a2a-d843-b337-07def036f998.htm">GetProcessPriorityBoost</a>
                  </td>
                  <td>
 Retrieves the priority boost control state of the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5f9e9003-ff49-9b2b-ac4a-6a44f610b673.htm">GetProcessTimes</a>
                  </td>
                  <td>
 Retrieves timing information for the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6397d122-e053-43e3-7a90-f6d62e3578bb.htm">GetProcessVersion</a>
                  </td>
                  <td>
 Retrieves the major and minor version numbers of the system on which the specified process expects to run.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="aabccb4d-5dae-5e6a-96b0-87f731581951.htm">GetProcessWorkingSetSize</a>
                  </td>
                  <td>
 Retrieves the minimum and maximum working set sizes of the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a3c4a53f-bc96-beca-eba8-4794f7fde2e9.htm">GetShortPathName</a>
                  </td>
                  <td>
 Retrieves the short path form of the specified path.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d67bdb40-2453-f350-8461-6cdcd527a322.htm">GetStdHandle</a>
                  </td>
                  <td>
 Retrieves a handle to the specified standard device (standard input, standard output, or standard error).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bba4622d-ecbf-8c01-f60c-94f1efa10cee.htm">GetSystemDefaultLangID</a>
                  </td>
                  <td>
 Returns the language identifier for the system locale.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3ef01133-84b0-030a-b030-3670fc588a61.htm">GetSystemDefaultLCID</a>
                  </td>
                  <td>
 Returns the locale identifier for the system locale.
 <p />
 Note: any application that runs only on Windows Vista and later
 should use <a href="128877a2-256f-c14a-91e2-a6b363186174.htm">GetSystemDefaultLocaleName(StringBuilder, Int32)</a> in preference to this function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="128877a2-256f-c14a-91e2-a6b363186174.htm">GetSystemDefaultLocaleName</a>
                  </td>
                  <td>
 Retrieves the system default locale name.
 <p />
 Note: it is recommended that applications call <a href="fe537cdb-2ba7-f495-3a65-91e9bbc16c14.htm">GetUserDefaultLocaleName(StringBuilder, Int32)</a> in preference over this function.
 This is due to the user locale generally being more useful and accurate for the user than the system locale.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a10f8816-6c03-e50b-b22e-3a5cb7b65d1f.htm">GetSystemDefaultUILanguage</a>
                  </td>
                  <td>
 Retrieves the language identifier for the system default UI language of the operating system,
 also known as the "install language" on Windows Vista and later.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9938fafe-03ca-8a5e-ecae-1edb317a981b.htm">GetSystemPreferredUILanguages</a>
                  </td>
                  <td>
 Retrieves the preferred UI languages for the operating system.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bd0853bf-ddf8-d949-5006-20b9278a4f18.htm">GetSystemTime</a>
                  </td>
                  <td>
 Retrieves the current system date and time. The system time is expressed in Coordinated Universal Time (UTC).
 <p />
 To retrieve the current system date and time in local time,
 use the <a href="a7add20d-3081-cabf-8316-e1430946bfbe.htm">GetLocalTime(SystemTime<span id="LST25F871C9_81" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1986129e-71a3-08ed-815a-908dd87f5653.htm">GetSystemTimeAsFileTime</a>
                  </td>
                  <td>
 Retrieves the current system date and time.
 The information is in Coordinated Universal Time (UTC) format.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="13d21f86-3fda-eb0e-d600-44b184e8de51.htm">GetSystemTimePreciseAsFileTime(FILETIME<span id="LST25F871C9_82" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Rretrieves the current system date and time with the highest possible level of precision (&lt;1us).
 <p />
 The retrieved information is in Coordinated Universal Time (UTC) format.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f192279b-9fef-d239-3938-688f55371da1.htm">GetSystemTimePreciseAsFileTime(Int64<span id="LST25F871C9_83" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the current system date and time with the highest possible level of precision (&lt;1us).
 <p />
 The retrieved information is in Coordinated Universal Time (UTC) format.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="342242cd-194f-9b21-f8a6-01d95c690486.htm">GetSystemTimes</a>
                  </td>
                  <td>
 Retrieves system timing information. On a multiprocessor system, the values returned are the sum of the designated times across all processors.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="46b9dcf3-df89-97ac-f94c-c16acba3d04b.htm">GetSystemWow64Directory</a>
                  </td>
                  <td>
 Retrieves the path of the system directory used by WOW64. This directory is not present on 32-bit Windows.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6d89c556-f983-8bd6-cb37-f1779094f2b5.htm">GetThreadDescription</a>
                  </td>
                  <td>
 Retrieves the description that was assigned to a thread by calling <a href="44c0e441-3828-f66b-4deb-0eade3e02f00.htm">SetThreadDescription(IntPtr, String)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5b3538c5-2205-93f1-5940-090537de457f.htm">GetThreadErrorMode</a>
                  </td>
                  <td>
 Retrieves the error mode for the current thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4318831f-d1ae-3575-b399-cda08baf97f3.htm">GetThreadId</a>
                  </td>
                  <td>
 Retrieves the thread identifier of the specified thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="902e2fd7-eda4-1ae3-af60-cd415ef4eb6e.htm">GetThreadIOPendingFlag</a>
                  </td>
                  <td>
 Determines whether a specified thread has any I/O requests pending.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a6a8292e-a502-6e93-05b8-48fafa18547a.htm">GetThreadPreferredUILanguages(MuiLanguageMode, UInt32<span id="LST25F871C9_84" data-languageSpecificText="cpp=%"></span>, IntPtr, UInt32<span id="LST25F871C9_85" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the preferred UI languages for the current thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="19ba7837-f00f-a15d-a74a-103a5b7aee9c.htm">GetThreadPreferredUILanguages(MuiLanguageMode, UInt32<span id="LST25F871C9_86" data-languageSpecificText="cpp=%"></span>, StringBuilder, UInt32<span id="LST25F871C9_87" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the thread preferred UI languages for the current thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ea2de53c-18d6-a505-1157-f77b54331b3d.htm">GetThreadPriority</a>
                  </td>
                  <td>
 Retrieves the priority class for the specified process.
 <p />
 This value, together with the priority value of each thread of the process,
 determines each thread's base priority level.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f22b82c0-3d49-ae1f-78d5-8b4758cb2e4a.htm">GetThreadTimes</a>
                  </td>
                  <td>
 Retrieves timing information for the specified thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d0732d6b-7b82-bf99-a4b2-f71a45c6e042.htm">GetThreadUILanguage</a>
                  </td>
                  <td>
 Returns the language identifier of the first user interface language for the current thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="68c1fe51-31e5-0b17-308c-b8356f793546.htm">GetTickCount64</a>
                  </td>
                  <td>
 Retrieves the number of milliseconds that have elapsed since the system was started.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype#system-object-gettype" target="_top" rel="noopener noreferrer">GetType</a>
                  </td>
                  <td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_top" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_top" rel="noopener noreferrer">Object</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="7e11c9a7-aba1-e229-fc18-675ba183198c.htm">GetUserDefaultGeoName</a>
                  </td>
                  <td>
 Retrieves the two-letter International Organization for Standardization (ISO) 3166-1 code 
 or numeric United Nations (UN) Series M, Number 49 (M.49) code for the default geographical location of the user.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d5b02abd-3e1b-397c-c86d-381932077385.htm">GetUserDefaultLangID</a>
                  </td>
                  <td>
 Returns the language identifier of the Region Format setting for the current user.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b1ff1a47-28fb-984e-e288-2d2c38b45839.htm">GetUserDefaultLCID</a>
                  </td>
                  <td>
 Returns the locale identifier for the user default locale.
 <p />
 Caution: If the user default locale is a custom locale, an application cannot accurately tag data with the value or exchange it.
 In this case, the application should use <a href="fe537cdb-2ba7-f495-3a65-91e9bbc16c14.htm">GetUserDefaultLocaleName(StringBuilder, Int32)</a>
 in preference to <a href="b1ff1a47-28fb-984e-e288-2d2c38b45839.htm">GetUserDefaultLCID<span id="LST25F871C9_88" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>.
 <p />
 Note: applications that are intended to run only on Windows Vista and later should use <a href="fe537cdb-2ba7-f495-3a65-91e9bbc16c14.htm">GetUserDefaultLocaleName(StringBuilder, Int32)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fe537cdb-2ba7-f495-3a65-91e9bbc16c14.htm">GetUserDefaultLocaleName</a>
                  </td>
                  <td>
 Retrieves the user default locale name.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="394baf1f-39bb-d6e4-7789-805c3703c53a.htm">GetUserDefaultUILanguage</a>
                  </td>
                  <td>
 Returns the language identifier for the user UI language for the current user.
 <p />
 If the current user has not set a language,
 <a href="394baf1f-39bb-d6e4-7789-805c3703c53a.htm">GetUserDefaultUILanguage<span id="LST25F871C9_89" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> returns the preferred language set for the system.
 <p />
 If there is no preferred language set for the system, then the system default UI language (also known as "install language") is returned.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="88f5102d-cac5-2490-e6cf-f5c4c042a66b.htm">GetUserPreferredUILanguages</a>
                  </td>
                  <td>
 Retrieves information about the user preferred UI languages.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3be01617-230d-3a17-1324-931cdaeb4c9d.htm">GetVersionEx</a>
                  </td>
                  <td>
 Returns version information about the current operating system.
 <p />
 With the release of Windows 8.1,
 the behavior of the <a href="3be01617-230d-3a17-1324-931cdaeb4c9d.htm">GetVersionEx(OsVersionInfoEx<span id="LST25F871C9_90" data-languageSpecificText="cpp=%"></span>)</a> API has changed in the value it will return for the OS version.
 The value returned by the <a href="3be01617-230d-3a17-1324-931cdaeb4c9d.htm">GetVersionEx(OsVersionInfoEx<span id="LST25F871C9_91" data-languageSpecificText="cpp=%"></span>)</a> function now depends on how the application is manifested.
 <p />
 Applications not manifested for Windows 8.1 or Windows 10 will return the Windows 8 OS version value (6.2).
 Once an application is manifested for a given operating system version,
 <a href="3be01617-230d-3a17-1324-931cdaeb4c9d.htm">GetVersionEx(OsVersionInfoEx<span id="LST25F871C9_92" data-languageSpecificText="cpp=%"></span>)</a> will always return the version that the application is manifested for in future releases.
 <p /></td>
                </tr>
                <tr>
                  <td>
                    <a href="4e863d0d-4fd9-11ec-089c-8036df672c45.htm">GetVolumeInformation</a>
                  </td>
                  <td>
 Retrieves information about the file system and volume associated with the specified root directory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="35d0dd01-0977-c044-eee8-b0178bd73f4d.htm">GetVolumeNameForVolumeMountPoint</a>
                  </td>
                  <td>
 Retrieves a volume GUID path for the volume that is associated with the
 specified volume mount point ( drive letter, volume GUID path, or mounted folder).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c63bafe8-3889-a0c6-821f-55779eadd413.htm">GetVolumePathName</a>
                  </td>
                  <td>
 Retrieves the volume mount point where the specified path is mounted.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c75fba05-2a5c-20a5-3908-5aed253bb653.htm">GetVolumePathNamesForVolumeName</a>
                  </td>
                  <td>
 Retrieves a list of drive letters and mounted folder paths for the specified volume.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8c81b401-58fc-2e35-c855-76e424f924e3.htm">GlobalAddAtom</a>
                  </td>
                  <td>
 Adds a character string to the global atom table and returns a unique value (an atom) identifying the string.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bce64689-f6de-521d-4fd6-ff955907da88.htm">GlobalAddAtomEx</a>
                  </td>
                  <td>
 Adds a character string to the global atom table and returns a unique value (an atom) identifying the string.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="df78e9d0-dcdc-efa2-da3d-f1f89040b86a.htm">GlobalDeleteAtom</a>
                  </td>
                  <td>
 Decrements the reference count of a global string atom.
 <p />
 If the atom's reference count reaches zero,
 <a href="df78e9d0-dcdc-efa2-da3d-f1f89040b86a.htm">GlobalDeleteAtom(UInt16)</a> removes the string associated with the atom from the global atom table.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="993a5a83-7ef4-6f82-d757-5ac243257105.htm">GlobalFindAtom</a>
                  </td>
                  <td>
 Searches the global atom table for the specified character string and retrieves the global atom associated with that string.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d5eac991-4bf4-7088-536c-f4296ce3e90c.htm">GlobalGetAtomName</a>
                  </td>
                  <td>
 Retrieves a copy of the character string associated with the specified global atom.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d64be8da-4314-69df-7da3-df516fa2ddff.htm">GlobalMemoryStatusEx</a>
                  </td>
                  <td>
 Retrieves information about the system's current usage of both physical and virtual memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a9f6e8dd-b45d-b8d5-0b84-12d5bc21370b.htm">HeapAlloc</a>
                  </td>
                  <td>
 Allocates a block of memory from a heap. The allocated memory is not movable.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6561c53c-3b67-e6b0-1047-aa4a56f789fd.htm">HeapCompact</a>
                  </td>
                  <td>
 Returns the size of the largest committed free block in the specified heap. 
 <p />
 If the Disable heap coalesce on free global flag is set, 
 this function also coalesces adjacent free blocks of memory in the heap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3868568b-81cc-3b7a-b8f3-4eec4dce70b3.htm">HeapCreate</a>
                  </td>
                  <td>
 Creates a private heap object that can be used by the calling process. 
 <p />
 The function reserves space in the virtual address space of the process 
 and allocates physical storage for a specified initial portion of this block.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="afd5c6ac-09c6-2188-2c44-6d955601830e.htm">HeapDestroy</a>
                  </td>
                  <td>
 Destroys the specified heap object. 
 <p />
 It decommits and releases all the pages of a private heap object, and it invalidates the handle to the heap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="10fdf4e0-8ba8-cff0-ff86-2e3d7d0d9d14.htm">HeapFree</a>
                  </td>
                  <td>
 Frees a memory block allocated from a heap by the 
 <a href="a9f6e8dd-b45d-b8d5-0b84-12d5bc21370b.htm">HeapAlloc(IntPtr, HeapFlags, UInt32)</a> or  <a href="1f715a6b-6792-9c71-08a0-6f10161df6c3.htm">HeapReAlloc(IntPtr, HeapFlags, IntPtr, UInt32)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5b26afbb-4427-5e30-bd0a-199ff9dfb152.htm">HeapLock</a>
                  </td>
                  <td>
 Attempts to acquire the critical section object, or lock, that is associated with a specified heap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c7bb033b-96f6-a2e4-3530-7af6fcde613c.htm">HeapQueryInformation</a>
                  </td>
                  <td>
 Retrieves information about the specified heap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1f715a6b-6792-9c71-08a0-6f10161df6c3.htm">HeapReAlloc</a>
                  </td>
                  <td>
 Reallocates a block of memory from a heap. 
 <p />
 This function enables you to resize a memory block and change other memory block properties. 
 The allocated memory is not movable.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="36018a09-e7a0-4162-dce6-865c4b2c4263.htm">HeapSetInformation</a>
                  </td>
                  <td>
 Enables features for a specified heap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="70638c62-19ab-3dcb-ab26-6ee30de2422a.htm">HeapSize</a>
                  </td>
                  <td>
 Retrieves the size of a memory block allocated from a heap by the 
 <a href="a9f6e8dd-b45d-b8d5-0b84-12d5bc21370b.htm">HeapAlloc(IntPtr, HeapFlags, UInt32)</a> or <a href="1f715a6b-6792-9c71-08a0-6f10161df6c3.htm">HeapReAlloc(IntPtr, HeapFlags, IntPtr, UInt32)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d57ce133-33b1-3560-854b-0c3bf38a5444.htm">HeapUnlock</a>
                  </td>
                  <td>
 Releases ownership of the critical section object, or lock, that is associated with a specified heap.
 <p />
 It reverses the action of the <a href="5b26afbb-4427-5e30-bd0a-199ff9dfb152.htm">HeapLock(IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="54f297be-4592-ac0a-8140-317b93f97b0b.htm">HeapValidate</a>
                  </td>
                  <td>
 Validates the specified heap. 
 <p />
 The function scans all the memory blocks in the heap and verifies that the 
 heap control structures maintained by the heap manager are in a consistent state. 
 <p />
 You can also use the <a href="54f297be-4592-ac0a-8140-317b93f97b0b.htm">HeapValidate(IntPtr, HeapFlags, IntPtr)</a> function to validate a 
 single memory block within a specified heap without checking the validity of the entire heap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="363f24a6-576a-97e9-c0dd-47aa3d7bbcad.htm">InitAtomTable</a>
                  </td>
                  <td>
 Initializes the local atom table and sets the number of hash buckets to the specified size.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0846750d-036d-c674-ec52-d74584e9b07a.htm">IsDebuggerPresent</a>
                  </td>
                  <td>
 Determines whether the calling process is being debugged by a user-mode debugger.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e5ca15e5-3c00-6f2e-56bd-6c9304cc6e11.htm">IsNativeVhdBoot</a>
                  </td>
                  <td>
 Indicates if the operating system was booted from a Virtual Hard Disk (VHD) container
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b7667d0c-6a81-23ad-b3a8-619ca1776fb5.htm">IsProcessCritical(IntPtr, Boolean<span id="LST25F871C9_93" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether the specified process is considered critical.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3c4c0d5d-7a4f-1499-d07c-896fbba48081.htm">IsProcessCritical(SafeProcessHandle, Boolean<span id="LST25F871C9_94" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether the specified process is considered critical.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="87334c7e-daec-cb3b-2eb7-1af37725a0de.htm">IsProcessorFeaturePresent</a>
                  </td>
                  <td>
 Determines whether the specified processor feature is supported by the current computer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9fbff2c4-eb31-9788-eced-3e4dcee9453c.htm">IsSystemResumeAutomatic</a>
                  </td>
                  <td>
 Determines the current state of the computer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a54d07a6-6320-a1c7-1a51-1ef5388c50ec.htm">IsThreadAFiber</a>
                  </td>
                  <td>
 Determines whether the current thread is a fiber.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f33bedf1-4a33-cb6f-6edc-1e2a56b9aaa4.htm">IsValidCodePage</a>
                  </td>
                  <td>
 Determines if a specified code page is valid.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9f923e9c-cb6c-85d0-f4b6-492663ef761d.htm">IsWow64Process(IntPtr, Boolean<span id="LST25F871C9_95" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether the specified process is running under WOW64.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a18990a3-a996-ca98-d287-0ac009a99ebb.htm">IsWow64Process(SafeProcessHandle, Boolean<span id="LST25F871C9_96" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether the specified process is running under WOW64.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="864a0216-d636-8e67-cc51-5d3f2f14bbe2.htm">LoadLibrary</a>
                  </td>
                  <td>
 Loads the specified module into the address space of the calling process.
 <p />
 The specified module may cause other modules to be loaded.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cbcb637a-2f4a-c3bb-c1c6-d03cc6a92c63.htm">LoadLibraryEx</a>
                  </td>
                  <td>
 Loads the specified module into the address space of the calling process.
 <p />
 The specified module may cause other modules to be loaded.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f56b6057-2fc5-3adb-bebb-66b6b815ccff.htm">LoadResource(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Retrieves a handle that can be used to obtain a pointer to the first byte of the specified resource in memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="203b18df-caa6-b7e0-07e9-5c531b704c24.htm">LoadResource(SafeModuleHandle, IntPtr)</a>
                  </td>
                  <td>
 Retrieves a handle that can be used to obtain a pointer to the first byte of the specified resource in memory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2acfc5eb-ecda-1694-fbef-70e9b51ced98.htm">LocalFree</a>
                  </td>
                  <td>
 Frees the specified local memory object and invalidates its handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bb268cad-6fab-ca86-d893-2e3685ff251d.htm">MapUserPhysicalPages(IntPtr, IntPtr<span id="LST25F871C9_97" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Maps previously allocated physical memory pages at a specified address in an Address Windowing Extensions (AWE) region.
 <p />
 The contents of discarded memory is undefined and must be rewritten by the application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a22852dc-5905-db35-333d-fe858c5865eb.htm">MapUserPhysicalPages(IntPtr, UIntPtr<span id="LST25F871C9_98" data-languageSpecificText="cpp=%"></span>, UIntPtr)</a>
                  </td>
                  <td>
 Maps previously allocated physical memory pages at a specified address in an Address Windowing Extensions (AWE) region.
 <p />
 The contents of discarded memory is undefined and must be rewritten by the application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e9f41965-86d1-eaea-54be-d727dd71ec70.htm">MoveMemory(IntPtr, IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Moves a block of memory from one location to another.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cf270d41-0ec4-eec5-8bb9-d2b54a0cb5c1.htm">MoveMemory(IntPtr, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Moves a block of memory from one location to another.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="112cbf9d-a919-04a9-f190-3fc5f9eb2323.htm">MoveMemory(IntPtr, IntPtr, UIntPtr)</a>
                  </td>
                  <td>
 Moves a block of memory from one location to another.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="85677cba-57e6-6a77-fdaa-ddc1fbfb110e.htm">MultiByteToWideChar(CodePage, MultiByteCharConversionType, <span id="LST25F871C9_99" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_100" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST25F871C9_101" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST25F871C9_102" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a>
                  </td>
                  <td>
 Maps a character string to a UTF-16 (wide character) string.
 The character string is not necessarily from a multibyte character set.
 <p />
 Caution: Using the <a href="85677cba-57e6-6a77-fdaa-ddc1fbfb110e.htm">MultiByteToWideChar(CodePage, MultiByteCharConversionType, <span id="LST25F871C9_103" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_104" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST25F871C9_105" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST25F871C9_106" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a> function incorrectly can compromise the
 security of your application.
 <p />
 Calling this function can easily cause a buffer overrun because the size of the input buffer indicated by
 <span class="parameter">multiByteStr</span> equals the number of bytes in the string,
 while the size of the output buffer indicated by <span class="parameter">wideCharStr</span> equals the number of characters.
 <p />
 To avoid a buffer overrun, your application must specify a buffer size appropriate for the
 data type the buffer receives. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="096e44ad-dc27-42d1-0a05-b1085515c547.htm">MultiByteToWideChar(CodePage, MultiByteCharConversionType, String, Int32, StringBuilder, Int32)</a>
                  </td>
                  <td>
 Maps a character string to a UTF-16 (wide character) string.
 The character string is not necessarily from a multibyte character set.
 <p />
 Caution: Using the <a href="85677cba-57e6-6a77-fdaa-ddc1fbfb110e.htm">MultiByteToWideChar(CodePage, MultiByteCharConversionType, <span id="LST25F871C9_107" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_108" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST25F871C9_109" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST25F871C9_110" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a> function incorrectly can compromise the
 security of your application.
 <p />
 Calling this function can easily cause a buffer overrun because the size of the input buffer indicated by
 <span class="parameter">multiByteStr</span> equals the number of bytes in the string,
 while the size of the output buffer indicated by <span class="parameter">wideCharStr</span> equals the number of characters.
 <p />
 To avoid a buffer overrun, your application must specify a buffer size appropriate for the
 data type the buffer receives. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3385ef36-a407-f91e-3d52-8392dcf031be.htm">MultiByteToWideChar(UInt32, MultiByteCharConversionType, <span id="LST25F871C9_111" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_112" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST25F871C9_113" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST25F871C9_114" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a>
                  </td>
                  <td>
 Maps a character string to a UTF-16 (wide character) string.
 The character string is not necessarily from a multibyte character set.
 <p />
 Caution: Using the <a href="85677cba-57e6-6a77-fdaa-ddc1fbfb110e.htm">MultiByteToWideChar(CodePage, MultiByteCharConversionType, <span id="LST25F871C9_115" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_116" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST25F871C9_117" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST25F871C9_118" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a> function incorrectly can compromise the
 security of your application.
 <p />
 Calling this function can easily cause a buffer overrun because the size of the input buffer indicated by
 <span class="parameter">multiByteStr</span> equals the number of bytes in the string,
 while the size of the output buffer indicated by <span class="parameter">wideCharStr</span> equals the number of characters.
 <p />
 To avoid a buffer overrun, your application must specify a buffer size appropriate for the
 data type the buffer receives. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ba7a80ee-be04-fd61-f05a-bed4c9b69fad.htm">MultiByteToWideChar(UInt32, MultiByteCharConversionType, String, Int32, StringBuilder, Int32)</a>
                  </td>
                  <td>
 Maps a character string to a UTF-16 (wide character) string.
 The character string is not necessarily from a multibyte character set.
 <p />
 Caution: Using the <a href="85677cba-57e6-6a77-fdaa-ddc1fbfb110e.htm">MultiByteToWideChar(CodePage, MultiByteCharConversionType, <span id="LST25F871C9_119" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_120" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST25F871C9_121" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST25F871C9_122" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a> function incorrectly can compromise the
 security of your application.
 <p />
 Calling this function can easily cause a buffer overrun because the size of the input buffer indicated by
 <span class="parameter">multiByteStr</span> equals the number of bytes in the string,
 while the size of the output buffer indicated by <span class="parameter">wideCharStr</span> equals the number of characters.
 <p />
 To avoid a buffer overrun, your application must specify a buffer size appropriate for the
 data type the buffer receives. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5e286d31-ddbb-f4d4-f9c1-e3b8f5a437e4.htm">OfferVirtualMemory(IntPtr, IntPtr, OfferVirtualMemoryPriority)</a>
                  </td>
                  <td>
 Indicates that the data contained in a range of memory pages is no longer needed by the application and
 can be discarded by the system if necessary.
 <p />
 The specified pages will be marked as inaccessible, removed from the process working set,
 and will not be written to the paging file.
 <p />
 To later reclaim offered pages, call <a href="de1e7f33-47ba-949c-10eb-e6b44b0defea.htm">ReclaimVirtualMemory(IntPtr, IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="de660d09-2564-1a6d-2cc2-03f68af93ae0.htm">OfferVirtualMemory(IntPtr, UInt32, OfferVirtualMemoryPriority)</a>
                  </td>
                  <td>
 Indicates that the data contained in a range of memory pages is no longer needed by the application and
 can be discarded by the system if necessary.
 <p />
 The specified pages will be marked as inaccessible, removed from the process working set,
 and will not be written to the paging file.
 <p />
 To later reclaim offered pages, call <a href="de1e7f33-47ba-949c-10eb-e6b44b0defea.htm">ReclaimVirtualMemory(IntPtr, IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="92ed1f3e-90a3-7ae7-aa2b-0e99abcb96e0.htm">OfferVirtualMemory(IntPtr, UIntPtr, OfferVirtualMemoryPriority)</a>
                  </td>
                  <td>
 Indicates that the data contained in a range of memory pages is no longer needed by the application and
 can be discarded by the system if necessary.
 <p />
 The specified pages will be marked as inaccessible, removed from the process working set,
 and will not be written to the paging file.
 <p />
 To later reclaim offered pages, call <a href="de1e7f33-47ba-949c-10eb-e6b44b0defea.htm">ReclaimVirtualMemory(IntPtr, IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="94941137-5ad0-3c7b-6e2b-59522878f6b7.htm">OpenMutex</a>
                  </td>
                  <td>
 Opens an existing named mutex object.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cc2061d0-6444-a2b7-8423-13dcd0468a49.htm">OpenPrivateNamespace</a>
                  </td>
                  <td>
 Opens a private namespace.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2d599c55-5980-6778-f15e-2ca5f174a368.htm">OpenProcess(GenericAccessRights, Boolean, Int32)</a>
                  </td>
                  <td>
 Opens an existing local process object.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="45ba2e79-0142-7104-707e-40567338503c.htm">OpenProcess(ProcessAccessRights, Boolean, Int32)</a>
                  </td>
                  <td>
 Opens an existing local process object.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bd026ef2-f694-1b1d-2ec8-8c660babe5bf.htm">OpenThread(GenericAccessRights, Boolean, UInt32)</a>
                  </td>
                  <td>
 Opens an existing thread object.
 <p />
 When done, don't forget to call <a href="68d61181-08af-1213-3c82-80f18e3de6b3.htm">CloseHandle(IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="92ebf888-a7cd-3d0f-907a-a3874bb65d45.htm">OpenThread(ThreadAccessRights, Boolean, UInt32)</a>
                  </td>
                  <td>
 Opens an existing thread object.
 <p />
 When done, don't forget to call <a href="68d61181-08af-1213-3c82-80f18e3de6b3.htm">CloseHandle(IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="441b72ea-9a9b-c908-8493-a7a2550a60fe.htm">OutputDebugString</a>
                  </td>
                  <td>
 Sends a string to the debugger for display.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fd9bb8bd-8dcf-f500-e375-6620b718f667.htm">PrefetchVirtualMemory</a>
                  </td>
                  <td>
 Provides an efficient mechanism to bring into memory potentially discontiguous virtual address ranges
 in a process address space.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a56c6a7d-8469-1c72-47ba-5fc481251b3e.htm">ProcessIdToSessionId</a>
                  </td>
                  <td>
 Retrieves the Remote Desktop Services session associated with a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="79d9942e-d314-9085-272b-735847ec88d9.htm">PssCaptureSnapshot</a>
                  </td>
                  <td>
 Captures a snapshot of a target process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="48baeba7-a495-6852-bc92-c211bfbca856.htm">PssDuplicateSnapshot</a>
                  </td>
                  <td>
 Duplicates a snapshot handle from one process to another.
 <p />
 To take a snapshot, call <a href="79d9942e-d314-9085-272b-735847ec88d9.htm">PssCaptureSnapshot(IntPtr, PssCaptureFlags, UInt32, IntPtr<span id="LST25F871C9_123" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c4e8cb9e-07f4-43e4-8a85-5d32e292ecaf.htm">PssFreeSnapshot</a>
                  </td>
                  <td>
 Frees a process snapshot.
 <p />
 To take a snapshot, call <a href="79d9942e-d314-9085-272b-735847ec88d9.htm">PssCaptureSnapshot(IntPtr, PssCaptureFlags, UInt32, IntPtr<span id="LST25F871C9_124" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4b6da694-99a1-7f63-ec63-696f44161dfb.htm">PssQuerySnapshot</a>
                  </td>
                  <td>
 Queries a process snapshot.
 <p />
 To take a snapshot, call <a href="79d9942e-d314-9085-272b-735847ec88d9.htm">PssCaptureSnapshot(IntPtr, PssCaptureFlags, UInt32, IntPtr<span id="LST25F871C9_125" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6c88034b-ebcd-f791-e184-25c151387c61.htm">QueryDosDevice(String, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Retrieves information about MS-DOS device names.
 <p />
 The function can obtain the current mapping for a particular MS-DOS device name.
 The function can also obtain a list of all existing MS-DOS device names.
 <p />
 MS-DOS device names are stored as junctions in the object namespace.
 The code that converts an MS-DOS path into a corresponding path uses these junctions to
 map MS-DOS devices and drive letters.
 <p />
 The <a href="6c88034b-ebcd-f791-e184-25c151387c61.htm">QueryDosDevice(String, IntPtr, UInt32)</a> function enables an application to
 query the names of the junctions used to implement the MS-DOS device Namespace DevCase.Interop.as well as the
 value of each specific junction.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="34724eb6-a4cd-013b-8135-6341fb47d883.htm">QueryDosDevice(String, StringBuilder, UInt32)</a>
                  </td>
                  <td>
 Retrieves information about MS-DOS device names.
 <p />
 The function can obtain the current mapping for a particular MS-DOS device name.
 The function can also obtain a list of all existing MS-DOS device names.
 <p />
 MS-DOS device names are stored as junctions in the object namespace.
 The code that converts an MS-DOS path into a corresponding path uses these junctions to
 map MS-DOS devices and drive letters.
 <p />
 The <a href="6c88034b-ebcd-f791-e184-25c151387c61.htm">QueryDosDevice(String, IntPtr, UInt32)</a> function enables an application to
 query the names of the junctions used to implement the MS-DOS device Namespace DevCase.Interop.as well as the
 value of each specific junction.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="964949f5-2918-09e5-e3d2-30d6c59f5466.htm">QueryFullProcessImageName</a>
                  </td>
                  <td>
 Retrieves the full name of the executable image for the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="54baff66-1815-8b1d-f77e-9e4efc0ea706.htm">QueryIdleProcessorCycleTime</a>
                  </td>
                  <td>
 Retrieves the cycle time for the idle thread of each processor in the system.
 <p />
 On a system with more than 64 processors, this function retrieves the cycle time for the idle thread of
 each processor in the processor group to which the calling thread is assigned.
 <p />
 Use the <a href="5aac76f5-a847-e7fc-d830-7ae34fd532b5.htm">QueryIdleProcessorCycleTimeEx(UInt16, UInt32<span id="LST25F871C9_126" data-languageSpecificText="cpp=%"></span>, IntPtr)</a> function to retrieve the cycle time for the idle thread on
 each logical processor for a specific processor group.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5aac76f5-a847-e7fc-d830-7ae34fd532b5.htm">QueryIdleProcessorCycleTimeEx</a>
                  </td>
                  <td>
 Retrieves the accumulated cycle time for the idle thread on each logical processor in the specified processor group.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="431b3fd4-4b85-89cb-7233-2e76e7c96f93.htm">QueryMemoryResourceNotification</a>
                  </td>
                  <td>
 Retrieves the state of the specified memory resource object.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="751bc069-437d-04e1-e38d-766c66e9dd18.htm">QueryProcessCycleTime</a>
                  </td>
                  <td>
 Retrieves the sum of the cycle time of all threads of the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0ef2b742-b522-8560-74de-34dd2635d656.htm">QueryThreadCycleTime</a>
                  </td>
                  <td>
 Retrieves the cycle time for the specified thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c855793a-6988-5608-c2be-67a387720a06.htm">RaiseException</a>
                  </td>
                  <td>
 Raises an exception in the calling thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cbe94677-4bc2-ed85-f0f8-c7e7f45bb989.htm">ReadConsoleOutput</a>
                  </td>
                  <td>
 Reads character and color attribute data from a rectangular block of character cells in a console screen buffer,
 and the function writes the data to a rectangular block at a specified location in the destination buffer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="865100f7-dffa-67f7-ae5e-c384d50d945a.htm">ReadConsoleOutputAttribute</a>
                  </td>
                  <td>
 Copies a specified number of character attributes from consecutive cells of a console screen buffer,
 beginning at a specified location.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d72a6ef5-53dc-a3d2-1529-958806ef361c.htm">ReadConsoleOutputCharacter</a>
                  </td>
                  <td>
 Copies a number of characters from consecutive cells of a console screen buffer, beginning at a specified location.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5ddba342-5f71-d011-0e24-835d33036f93.htm">ReadFile(SafeFileHandle, <span id="LST25F871C9_127" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_128" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32<span id="LST25F871C9_129" data-languageSpecificText="cpp=%"></span>, NativeOverlapped<span id="LST25F871C9_130" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from the specified file or input/output (I/O) device. 
 Reads occur at the position specified by the file pointer if supported by the device.
 <p />
 This function is designed for both synchronous and asynchronous operations. 
 For a similar function designed solely for asynchronous operation, see ReadFileEx.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e72c390f-c104-8ae9-204a-d82ed4df2343.htm">ReadFile(SafeFileHandle, <span id="LST25F871C9_131" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_132" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, UInt32<span id="LST25F871C9_133" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Reads data from the specified file or input/output (I/O) device. 
 Reads occur at the position specified by the file pointer if supported by the device.
 <p />
 This function is designed for both synchronous and asynchronous operations. 
 For a similar function designed solely for asynchronous operation, see ReadFileEx.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5aae3658-2b31-ef66-6bdc-2dacca5a2062.htm">ReadFile(SafeFileHandle, IntPtr, UInt32, UInt32<span id="LST25F871C9_134" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Reads data from the specified file or input/output (I/O) device. 
 Reads occur at the position specified by the file pointer if supported by the device.
 <p />
 This function is designed for both synchronous and asynchronous operations. 
 For a similar function designed solely for asynchronous operation, see ReadFileEx.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6bac2769-99d1-1c87-d9cd-e312acb81333.htm">ReadProcessMemory(IntPtr, IntPtr, <span id="LST25F871C9_135" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_136" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IntPtr, IntPtr<span id="LST25F871C9_137" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1d1c6cc0-74e8-ceaa-01a8-a1fc2e57891b.htm">ReadProcessMemory(IntPtr, IntPtr, <span id="LST25F871C9_138" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_139" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UIntPtr, IntPtr<span id="LST25F871C9_140" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0ddc42df-f4d4-3cf1-1cd8-63a207878b66.htm">ReadProcessMemory(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_141" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0c2388b3-a4d2-e71d-ab47-4ca79ed5daa6.htm">ReadProcessMemory(IntPtr, IntPtr, IntPtr, UIntPtr, IntPtr<span id="LST25F871C9_142" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="47dacaf9-8bf9-96b8-599f-11ee94306528.htm">ReadProcessMemory(IntPtr, IntPtr, StringBuilder, IntPtr, IntPtr<span id="LST25F871C9_143" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8a5c2dd9-4799-a2a7-eec4-fc8ef4eb6163.htm">ReadProcessMemory(IntPtr, IntPtr, StringBuilder, UIntPtr, IntPtr<span id="LST25F871C9_144" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="369da020-43d4-c6f0-c503-da69b37708d5.htm">ReadProcessMemory(IntPtr, UIntPtr, <span id="LST25F871C9_145" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_146" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IntPtr, IntPtr<span id="LST25F871C9_147" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="617fe5ca-96ff-ec0d-9544-fa1d6899ec63.htm">ReadProcessMemory(IntPtr, UIntPtr, <span id="LST25F871C9_148" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_149" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UIntPtr, IntPtr<span id="LST25F871C9_150" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f2302fee-1340-1281-a604-3c31b9201426.htm">ReadProcessMemory(IntPtr, UIntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_151" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="286ab35e-42de-3059-0a06-e22eab1e5750.htm">ReadProcessMemory(IntPtr, UIntPtr, IntPtr, UIntPtr, IntPtr<span id="LST25F871C9_152" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="58509fca-284d-48b9-fb57-6b33ad74ac28.htm">ReadProcessMemory(IntPtr, UIntPtr, StringBuilder, IntPtr, IntPtr<span id="LST25F871C9_153" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e029d82a-d3e0-c612-d1b2-8cd40dd9ae6b.htm">ReadProcessMemory(IntPtr, UIntPtr, StringBuilder, UIntPtr, IntPtr<span id="LST25F871C9_154" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="57882f7d-ba3a-fc97-0a3b-dad29e76232c.htm">ReadProcessMemory(SafeProcessHandle, IntPtr, <span id="LST25F871C9_155" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_156" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IntPtr, IntPtr<span id="LST25F871C9_157" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1f84c1b5-cda8-1a25-0224-e4dc80eb0384.htm">ReadProcessMemory(SafeProcessHandle, IntPtr, <span id="LST25F871C9_158" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_159" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UIntPtr, IntPtr<span id="LST25F871C9_160" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="000d2ea7-e430-1e71-6d25-681f1339fe0c.htm">ReadProcessMemory(SafeProcessHandle, IntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_161" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0fab8a77-b3b8-525c-45f1-3471a77123ff.htm">ReadProcessMemory(SafeProcessHandle, IntPtr, IntPtr, UIntPtr, IntPtr<span id="LST25F871C9_162" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="69211bda-3f5f-c146-4a56-37319ac42025.htm">ReadProcessMemory(SafeProcessHandle, IntPtr, StringBuilder, IntPtr, IntPtr<span id="LST25F871C9_163" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="531f52f4-0e6a-8e0f-e3db-aa1cf0001d43.htm">ReadProcessMemory(SafeProcessHandle, IntPtr, StringBuilder, UIntPtr, IntPtr<span id="LST25F871C9_164" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2034d70b-e91f-e396-ad4e-e2c27790c99c.htm">ReadProcessMemory(SafeProcessHandle, UIntPtr, <span id="LST25F871C9_165" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_166" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IntPtr, IntPtr<span id="LST25F871C9_167" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a921f952-289b-e536-c9be-c03b56ba1d41.htm">ReadProcessMemory(SafeProcessHandle, UIntPtr, <span id="LST25F871C9_168" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_169" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UIntPtr, IntPtr<span id="LST25F871C9_170" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3a3b90b7-b90f-2f98-76d3-36e12009d83e.htm">ReadProcessMemory(SafeProcessHandle, UIntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_171" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="52d8fc6a-0d2a-625b-c051-9b258bcf3463.htm">ReadProcessMemory(SafeProcessHandle, UIntPtr, IntPtr, UIntPtr, IntPtr<span id="LST25F871C9_172" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a84d9d8f-fe08-8b86-e735-bb2b3ece67bb.htm">ReadProcessMemory(SafeProcessHandle, UIntPtr, StringBuilder, IntPtr, IntPtr<span id="LST25F871C9_173" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="30391021-a67c-1d63-8497-007f35ee959f.htm">ReadProcessMemory(SafeProcessHandle, UIntPtr, StringBuilder, UIntPtr, IntPtr<span id="LST25F871C9_174" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Reads data from an area of memory in a specified process.
 <p />
 The entire area to be read must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="de1e7f33-47ba-949c-10eb-e6b44b0defea.htm">ReclaimVirtualMemory(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Reclaims a range of memory pages that were offered to the system with
 <a href="5e286d31-ddbb-f4d4-f9c1-e3b8f5a437e4.htm">OfferVirtualMemory(IntPtr, IntPtr, OfferVirtualMemoryPriority)</a> function.
 <p />
 If the offered memory has been discarded,
 the contents of the memory region is undefined and must be rewritten by the application.
 <p />
 If the offered memory has not been discarded, it is reclaimed intact.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="37edb580-4a18-78c5-f9cd-644e99574726.htm">ReclaimVirtualMemory(IntPtr, UInt32)</a>
                  </td>
                  <td>
 Reclaims a range of memory pages that were offered to the system with
 <a href="5e286d31-ddbb-f4d4-f9c1-e3b8f5a437e4.htm">OfferVirtualMemory(IntPtr, IntPtr, OfferVirtualMemoryPriority)</a> function.
 <p />
 If the offered memory has been discarded,
 the contents of the memory region is undefined and must be rewritten by the application.
 <p />
 If the offered memory has not been discarded, it is reclaimed intact.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e1966742-7df0-79f7-62ad-342cfe69be94.htm">ReclaimVirtualMemory(IntPtr, UIntPtr)</a>
                  </td>
                  <td>
 Reclaims a range of memory pages that were offered to the system with
 <a href="5e286d31-ddbb-f4d4-f9c1-e3b8f5a437e4.htm">OfferVirtualMemory(IntPtr, IntPtr, OfferVirtualMemoryPriority)</a> function.
 <p />
 If the offered memory has been discarded,
 the contents of the memory region is undefined and must be rewritten by the application.
 <p />
 If the offered memory has not been discarded, it is reclaimed intact.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="922cc305-f8c0-e6bf-58ba-5e35bc48edd4.htm">RegisterApplicationRecoveryCallback</a>
                  </td>
                  <td>
 Registers the active instance of an application for recovery.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e606f72d-b124-94d6-cd13-fc0b45f16b85.htm">RegisterApplicationRestart</a>
                  </td>
                  <td>
 Registers the active instance of an application for restart.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b1a6a87c-d4a5-37a7-e832-e2dc5978c16b.htm">ReleaseMutex</a>
                  </td>
                  <td>
 Releases ownership of the specified mutex object.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a7fd8e93-2173-be05-306f-108986f5fc90.htm">RemoveDirectory</a>
                  </td>
                  <td>
 Deletes an existing empty directory.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fb116497-efb6-97de-9a38-86cf01c5539f.htm">RemoveDllDirectory</a>
                  </td>
                  <td>
 Removes a directory that was added to the process DLL search path by using <a href="74b40f5b-fb8f-ce1a-611f-a814d7900006.htm">AddDllDirectory(String)</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4120e052-0d79-19b9-f133-648701c9cd78.htm">RestoreLastError</a>
                  </td>
                  <td>
 Restores the last-error code for the calling thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="68be1bff-0c2c-6a91-a1b9-23edf1be0d08.htm">ResumeThread(IntPtr)</a>
                  </td>
                  <td>
 Decrements a thread's suspend count.
 <p />
 When the suspend count is decremented to zero, the execution of the thread is resumed.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0d2f145f-7145-a07a-eead-a9ad4da3ed5d.htm">ResumeThread(SafeAccessTokenHandle)</a>
                  </td>
                  <td>
 Decrements a thread's suspend count.
 <p />
 When the suspend count is decremented to zero, the execution of the thread is resumed.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8ffa36d2-387a-a4cb-4bde-7f8d28df69fe.htm">SetCommBreak</a>
                  </td>
                  <td>
 Suspends character transmission for a specified communications device and
 places the transmission line in a break state until the ClearCommBreak function is called.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="68b5c0d0-9d1e-3e60-f24b-239bc6d20d64.htm">SetComputerName</a>
                  </td>
                  <td>
 Sets a new NetBIOS name for the local computer.
 <p />
 The name is stored in the registry and the name change takes effect the next time the user restarts the computer.
 <p />
 If the local computer is a node in a cluster,
 <a href="68b5c0d0-9d1e-3e60-f24b-239bc6d20d64.htm">SetComputerName(String)</a> sets NetBIOS name of the local computer, not that of the cluster virtual server.
 <p />
 To set the DNS host name or the DNS domain name, call the <a href="460c904e-10de-a826-1c94-f5ebb9013c32.htm">SetComputerNameEx(ComputerNameFormat, String)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="460c904e-10de-a826-1c94-f5ebb9013c32.htm">SetComputerNameEx</a>
                  </td>
                  <td>
 Sets a new NetBIOS or DNS name for the local computer.
 <p />
 Name changes made by <a href="460c904e-10de-a826-1c94-f5ebb9013c32.htm">SetComputerNameEx(ComputerNameFormat, String)</a> do not take effect until
 the user restarts the computer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5aab3e4b-c3f0-b5f5-d74c-6cec5d4c3e8b.htm">SetConsoleCodepage</a>
                  </td>
                  <td>
 Sets the input code page used by the console associated with the calling process.
 <p />
 A console uses its input code page to translate keyboard input into the corresponding character value.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3d240fbf-0a11-ee00-0e62-361ebcd77fd7.htm">SetConsoleDisplayMode</a>
                  </td>
                  <td>
 Sets the display mode of the specified console screen buffer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="20f3af9f-277a-28fb-3f5f-9b3ed176a287.htm">SetConsoleOutputCodepage</a>
                  </td>
                  <td>
 Sets the output code page used by the console associated with the calling process.
 <p />
 A console uses its output code page to translate the character values written by the
 various output functions into the images displayed in the console window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="26c2ffc1-e3ac-9e9e-ac5c-c1ac8e8a8abb.htm">SetConsoleTextAttribute</a>
                  </td>
                  <td>
 Sets the attributes of characters written to the console screen buffer by the
 WriteFile or <a href="8739dc1c-8e23-0511-34b8-8bb72a556401.htm">WriteConsole(IntPtr, <span id="LST25F871C9_175" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST25F871C9_176" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, UInt32<span id="LST25F871C9_177" data-languageSpecificText="cpp=%"></span>, IntPtr)</a> function,
 or echoed by the ReadFile or ReadConsole function.
 <p />
 This function affects text written after the function call.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b564c41e-f76e-7520-12a9-0361fd0024cd.htm">SetConsoleTitle</a>
                  </td>
                  <td>
 Sets the title for the current console window.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3b524fae-8f4b-47a6-969d-2b188f0c96f4.htm">SetCurrentConsoleFontEx</a>
                  </td>
                  <td>
 Sets extended information about the current console font.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a1fe78ce-8d95-6c0b-cf93-0a42c662f727.htm">SetCurrentDirectory</a>
                  </td>
                  <td>
 Changes the current directory for the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5c29b16a-367e-c35b-fe77-d63b093b69bb.htm">SetDllDirectory</a>
                  </td>
                  <td>
 Adds a directory to the search path used to locate DLLs for the application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1053d014-7015-6dab-42df-404866990ef8.htm">SetEndOfFile</a>
                  </td>
                  <td>
 Sets the physical file size for the specified file to the current position of the file pointer.
 <p />
 The physical file size is also referred to as the end of the file.
 <p />
 The <a href="1053d014-7015-6dab-42df-404866990ef8.htm">SetEndOfFile(IntPtr)</a> function can be used to truncate or extend a file.
 To set the logical end of a file, use the SetFileValidData function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bf581ca9-52ba-82f9-1015-00dad7b9f1e5.htm">SetErrorMode</a>
                  </td>
                  <td>
 Controls whether the system will handle the specified types of serious errors or whether the process will handle them for the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="20f4db06-a7b4-cc95-019f-194eb8a9be2a.htm">SetFileApisToANSI</a>
                  </td>
                  <td>
 Causes the file I/O functions to use the ANSI character set code page for the current process.
 <p />
 This function is useful for 8-bit console input and output operations.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="49dd5a15-20e0-a709-9d90-ca080526818e.htm">SetFileApisToOEM</a>
                  </td>
                  <td>
 Causes the file I/O functions for the process to use the OEM character set code page.
 <p />
 This function is useful for 8-bit console input and output operations.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c9c3f622-e71c-adb5-e1ea-78af0985b723.htm">SetHandleInformation</a>
                  </td>
                  <td>
 Sets certain properties of an object handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="81dc99e7-e188-1d5b-d6d3-685db341a2a1.htm">SetLastError(UInt32)</a>
                  </td>
                  <td>
 Sets the last-error code for the calling thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="acf94b26-6800-f273-b4bf-2bdcc55d9ad0.htm">SetLastError(Win32ErrorCode)</a>
                  </td>
                  <td>
 Sets the last-error code for the calling thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3c1da0a6-b37d-cec0-0dc9-a67a8530a254.htm">SetLocalTime</a>
                  </td>
                  <td>
 Sets the current local date and time.
 <p />
 To set the system date and time,
 use the <a href="8cd10cde-a73e-317c-b960-5468d7d99344.htm">SetSystemTime(SystemTime<span id="LST25F871C9_178" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1a84bbb4-7467-8f8b-ea85-26b5b2482e9a.htm">SetPriorityClass</a>
                  </td>
                  <td>
 Sets the priority class for the specified process.
 <p />
 This value, together with the priority value of each thread of the process,
 determines each thread's base priority level.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c231f82b-5275-bb27-4637-2fb958715089.htm">SetProcessDefaultCpuSets</a>
                  </td>
                  <td>
 Sets the default CPU Sets assignment for threads in the specified process.
 <p />
 Threads that are created, which don’t have CPU Sets explicitly set using <a href="3f7a187a-0691-a2fb-5156-d95bf0921077.htm">SetThreadSelectedCpuSets(IntPtr, <span id="LST25F871C9_179" data-languageSpecificText="cpp=array&lt;"></span>UInt32<span id="LST25F871C9_180" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32)</a>,
 will inherit the sets specified by <a href="c231f82b-5275-bb27-4637-2fb958715089.htm">SetProcessDefaultCpuSets(IntPtr, <span id="LST25F871C9_181" data-languageSpecificText="cpp=array&lt;"></span>UInt32<span id="LST25F871C9_182" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32)</a> automatically.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c26ec4a1-bb72-16cc-b80d-4dc1b3c97629.htm">SetProcessPreferredUILanguages</a>
                  </td>
                  <td>
 Sets the process preferred UI languages for the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0352adaf-b432-beb3-880b-9c2810342942.htm">SetProcessPriorityBoost</a>
                  </td>
                  <td>
 Disables or enables the ability of the system to temporarily boost the priority of the threads of the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fef7e4df-b10f-3e0a-19c6-6d6c8bffd483.htm">SetProcessWorkingSetSize</a>
                  </td>
                  <td>
 Sets the minimum and maximum working set sizes for the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="022bb2bc-3ee6-129d-ecc0-81a7f492493d.htm">SetProcessWorkingSetSizeEx</a>
                  </td>
                  <td>
 Sets the minimum and maximum working set sizes for the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f408d61d-a4e1-df56-f29e-56e77d783195.htm">SetStdHandle</a>
                  </td>
                  <td>
 Sets the handle for the specified standard device (standard input, standard output, or standard error).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d27b9d8c-6a0e-6cc8-560c-71a99aaccb20.htm">SetStdHandleEx</a>
                  </td>
                  <td>
 Sets the handle for the specified standard device (standard input, standard output, or standard error)
 and returns the previous one.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8cd10cde-a73e-317c-b960-5468d7d99344.htm">SetSystemTime</a>
                  </td>
                  <td>
 Sets the current system time and date. The system time is expressed in Coordinated Universal Time (UTC).
 <p />
 To set the local date and time,
 use the <a href="3c1da0a6-b37d-cec0-0dc9-a67a8530a254.htm">SetLocalTime(SystemTime<span id="LST25F871C9_183" data-languageSpecificText="cpp=%"></span>)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="44c0e441-3828-f66b-4deb-0eade3e02f00.htm">SetThreadDescription</a>
                  </td>
                  <td>
 Assigns a description to a thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="db11b191-23c6-d453-fa08-afd00405013b.htm">SetThreadErrorMode</a>
                  </td>
                  <td>
 Controls whether the system will handle the specified types of serious errors
 or whether the current thread will handle them.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dc1f9686-cae7-db0d-cc73-54ece969c80f.htm">SetThreadExecutionState</a>
                  </td>
                  <td>
 Enables an application to inform the system that it is in use,
 thereby preventing the system from entering sleep or turning off the display while the application is running.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b556025c-febb-c588-45ce-8b6d48ea9f04.htm">SetThreadPreferredUILanguages</a>
                  </td>
                  <td>
 Sets the process preferred UI languages for the current thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9a68bc59-3950-baab-caf3-1a51bc73fe15.htm">SetThreadPriority</a>
                  </td>
                  <td>
 Sets the priority value for the specified thread.
 <p />
 This value, together with the priority class of the thread's process,
 determines the thread's base priority level.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3f7a187a-0691-a2fb-5156-d95bf0921077.htm">SetThreadSelectedCpuSets</a>
                  </td>
                  <td>
 Sets the selected CPU Sets assignment for the specified thread.
 This assignment overrides the process default assignment, if one is set.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a04b495a-8601-b26d-24bb-20c5c91396a3.htm">SetThreadStackGuarantee</a>
                  </td>
                  <td>
 Sets the minimum size of the stack associated with the calling thread or
 fiber that will be available during any stack overflow exceptions.
 <p />
 This is useful for handling stack overflow exceptions;
 the application can safely use the specified number of bytes during exception handling.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="04489d66-b75f-11bd-54f9-12c82f2dd728.htm">SetThreadUILanguage</a>
                  </td>
                  <td>
 Sets the user interface language for the current thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a1361211-4872-6eb7-4185-7d5c3cf6c2ec.htm">SetVolumeLabel</a>
                  </td>
                  <td>
 Sets the label of a file system volume.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ae179b67-a248-850f-cc83-e80b6046cfb5.htm">SetVolumeMountPoint</a>
                  </td>
                  <td>
 Associates a volume with a drive letter or a directory on another volume.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cb14db72-9a7e-6b42-8916-4684241da8f7.htm">SizeofResource(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Retrieves the size, in bytes, of the specified resource..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ece1f46b-e4f6-17d8-d1ad-5fde4c2a2d81.htm">SizeofResource(SafeModuleHandle, IntPtr)</a>
                  </td>
                  <td>
 Retrieves the size, in bytes, of the specified resource..
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e23c936a-daca-fc96-d990-010d2b95411d.htm">Sleep</a>
                  </td>
                  <td>
 Suspends the execution of the current thread until the time-out interval elapses.
 <p />
 To enter an alertable wait state, use the <a href="be60e0a7-b5b6-1fbd-846c-c6c1eb3adb21.htm">SleepEx(Int32, Boolean)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="be60e0a7-b5b6-1fbd-846c-c6c1eb3adb21.htm">SleepEx</a>
                  </td>
                  <td>
 Suspends the current thread until the specified condition is met. Execution resumes when one of the following occurs:
 <p />
 - An I/O completion callback function is called.
 <p />
 - An asynchronous procedure call (APC) is queued to the thread.
 <p />
 - The time-out interval elapses.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c7be6413-f245-2467-db6b-990529227f08.htm">SuspendThread32(IntPtr)</a>
                  </td>
                  <td>
 Suspends the specified 32-Bit thread.
 <p />
 A 32-bit application can suspend a 64-Bit thread using the <a href="d13bc21e-1472-5d5a-249b-07b66cf5d771.htm">SuspendThread64(SafeAccessTokenHandle)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4d61e449-d00b-ffb5-4cdc-2ef7c7d462a2.htm">SuspendThread32(SafeAccessTokenHandle)</a>
                  </td>
                  <td>
 Suspends the specified 32-Bit thread.
 <p />
 A 32-bit application can suspend a 64-Bit thread using the <a href="d13bc21e-1472-5d5a-249b-07b66cf5d771.htm">SuspendThread64(SafeAccessTokenHandle)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="85982c04-7542-ec27-2ef6-959a8f78001c.htm">SuspendThread64(IntPtr)</a>
                  </td>
                  <td>
 Suspends the specified 64-Bit thread.
 <p />
 A 64-bit application can suspend a 32-Bit thread using the <a href="4d61e449-d00b-ffb5-4cdc-2ef7c7d462a2.htm">SuspendThread32(SafeAccessTokenHandle)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d13bc21e-1472-5d5a-249b-07b66cf5d771.htm">SuspendThread64(SafeAccessTokenHandle)</a>
                  </td>
                  <td>
 Suspends the specified 64-Bit thread.
 <p />
 A 64-bit application can suspend a 32-Bit thread using the <a href="4d61e449-d00b-ffb5-4cdc-2ef7c7d462a2.htm">SuspendThread32(SafeAccessTokenHandle)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5de3b6ae-bfd6-b169-c0fc-98cd2f278f1c.htm">SwitchToFiber</a>
                  </td>
                  <td>
 Schedules a fiber. 
 <p />
 This function must be called on a fiber.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f1f63192-c417-bfbd-1f93-0e6463e2e9ce.htm">SwitchToThread</a>
                  </td>
                  <td>
 Causes the calling thread to yield execution to another thread that is ready to run on the current processor.
 <p />
 The operating system selects the next thread to be executed.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b303c07d-ae27-97a1-6052-4f2d65efa135.htm">SystemTimeToFileTime</a>
                  </td>
                  <td>
 Converts a system time to file time format. System time is based on Coordinated Universal Time (UTC).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4f318995-2348-1dea-8631-a2049723075a.htm">TerminateProcess</a>
                  </td>
                  <td>
 Terminates the specified process and all of its threads.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1b980356-d94a-4b53-6f32-e77daa0678f9.htm">TerminateThread(IntPtr, UInt32)</a>
                  </td>
                  <td>
 Terminates a thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ff276ae6-f0a0-e631-28fd-d91ddb72fafb.htm">TerminateThread(SafeAccessTokenHandle, UInt32)</a>
                  </td>
                  <td>
 Terminates a thread.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3da39b5d-7224-5dd7-37bd-dddc4ca2aab3.htm">TlsAlloc</a>
                  </td>
                  <td>
 Allocates a thread local storage (TLS) index.
 <p />
 Any thread of the process can subsequently use this index to store and retrieve values that are local to the thread,
 because each thread receives its own slot for the index.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c08fc5b8-f9ba-c8bd-ce10-51a3097e5046.htm">TlsFree</a>
                  </td>
                  <td>
 Releases a thread local storage (TLS) index, making it available for reuse.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ef126c2e-6028-c0b0-5ee0-00569f7ebf3e.htm">TlsGetValue</a>
                  </td>
                  <td>
 Retrieves the value in the calling thread's thread local storage (TLS) slot for the specified TLS index.
 <p />
 Each thread of a process has its own slot for each TLS index.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="85c41949-a920-63db-3ef9-d5475ffb0b08.htm">TlsSetValue</a>
                  </td>
                  <td>
 Stores a value in the calling thread's thread local storage (TLS) slot for the specified TLS index.
 <p />
 Each thread of a process has its own slot for each TLS index.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring#system-object-tostring" target="_top" rel="noopener noreferrer">ToString</a>
                  </td>
                  <td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_top" rel="noopener noreferrer">Object</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="4babe188-7ae2-f696-107a-b0959d6cad54.htm">TransmitCommChar</a>
                  </td>
                  <td>
 Transmits a specified character ahead of any pending data in the output buffer of the specified communications device.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="7b78e867-0fe8-4796-dfa3-ef3892f8caf9.htm">UnregisterApplicationRecoveryCallback</a>
                  </td>
                  <td>
 Removes the active instance of an application from the recovery list.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="120edeec-4251-cc5b-9399-2ac39f985659.htm">UnregisterApplicationRestart</a>
                  </td>
                  <td>
 Removes the active instance of an application from the restart list.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1cf20759-08c3-bf79-d028-108ebb15bf16.htm">UpdateResource(IntPtr, ResourceType, IntPtr, UInt16, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Adds, deletes, or replaces a resource in a portable executable (PE) file.
 <p />
 There are some restrictions on resource updates in files that contain Resource Configuration (RC Config) data:
 language-neutral (LN) files and language-specific resource (.mui) files.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="06f34629-c68b-572b-3e1c-7af6526bbf6e.htm">UpdateResource(IntPtr, ResourceType, String, UInt16, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Adds, deletes, or replaces a resource in a portable executable (PE) file.
 <p />
 There are some restrictions on resource updates in files that contain Resource Configuration (RC Config) data:
 language-neutral (LN) files and language-specific resource (.mui) files.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0e4f568a-a793-27a4-03fc-6f2a5da1fa9c.htm">UpdateResource(IntPtr, String, IntPtr, UInt16, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Adds, deletes, or replaces a resource in a portable executable (PE) file.
 <p />
 There are some restrictions on resource updates in files that contain Resource Configuration (RC Config) data:
 language-neutral (LN) files and language-specific resource (.mui) files.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="67f95123-e968-8680-3621-411622f267f2.htm">UpdateResource(IntPtr, String, String, UInt16, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Adds, deletes, or replaces a resource in a portable executable (PE) file.
 <p />
 There are some restrictions on resource updates in files that contain Resource Configuration (RC Config) data:
 language-neutral (LN) files and language-specific resource (.mui) files.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a32ac90d-da62-72e0-3dd5-0d7ecf7caae4.htm">UpdateResource(SafeModuleHandle, ResourceType, IntPtr, UInt16, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Adds, deletes, or replaces a resource in a portable executable (PE) file.
 <p />
 There are some restrictions on resource updates in files that contain Resource Configuration (RC Config) data:
 language-neutral (LN) files and language-specific resource (.mui) files.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6f20ba44-09d5-456e-5804-271c60f7d13c.htm">UpdateResource(SafeModuleHandle, ResourceType, String, UInt16, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Adds, deletes, or replaces a resource in a portable executable (PE) file.
 <p />
 There are some restrictions on resource updates in files that contain Resource Configuration (RC Config) data:
 language-neutral (LN) files and language-specific resource (.mui) files.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="89b50180-2ce8-4d51-0503-82d798bc65f2.htm">UpdateResource(SafeModuleHandle, String, IntPtr, UInt16, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Adds, deletes, or replaces a resource in a portable executable (PE) file.
 <p />
 There are some restrictions on resource updates in files that contain Resource Configuration (RC Config) data:
 language-neutral (LN) files and language-specific resource (.mui) files.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="43e7a130-fbbe-7730-41f1-0fe7a7065103.htm">UpdateResource(SafeModuleHandle, String, String, UInt16, IntPtr, UInt32)</a>
                  </td>
                  <td>
 Adds, deletes, or replaces a resource in a portable executable (PE) file.
 <p />
 There are some restrictions on resource updates in files that contain Resource Configuration (RC Config) data:
 language-neutral (LN) files and language-specific resource (.mui) files.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cd33cb5a-b6b8-933c-ecb3-bbf9b09a0405.htm">VirtualAlloc(IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</a>
                  </td>
                  <td>
 Reserves, commits, or changes the state of a region of pages
 in the virtual address space of the calling process.
 <p />
 Memory allocated by this function is automatically initialized to zero.
 <p />
 To allocate memory in the address space of another process,
 use the <a href="c0f58d89-77bb-4d66-7410-d61da515da07.htm">VirtualAllocEx(IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f43d5f3f-203f-f596-691c-3f7903efccf5.htm">VirtualAlloc(IntPtr, UIntPtr, MemoryAllocationType, MemoryProtectionOptions)</a>
                  </td>
                  <td>
 Reserves, commits, or changes the state of a region of pages
 in the virtual address space of the calling process.
 <p />
 Memory allocated by this function is automatically initialized to zero.
 <p />
 To allocate memory in the address space of another process,
 use the <a href="c0f58d89-77bb-4d66-7410-d61da515da07.htm">VirtualAllocEx(IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dabbdedf-219c-666b-03e7-0748e0e9f0af.htm">VirtualAlloc(UIntPtr, UIntPtr, MemoryAllocationType, MemoryProtectionOptions)</a>
                  </td>
                  <td>
 Reserves, commits, or changes the state of a region of pages
 in the virtual address space of the calling process.
 <p />
 Memory allocated by this function is automatically initialized to zero.
 <p />
 To allocate memory in the address space of another process,
 use the <a href="c0f58d89-77bb-4d66-7410-d61da515da07.htm">VirtualAllocEx(IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c0f58d89-77bb-4d66-7410-d61da515da07.htm">VirtualAllocEx(IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</a>
                  </td>
                  <td>
 Reserves, commits, or changes the state of a region of memory
 within the virtual address space of a specified process.
 <p />
 The function initializes the memory it allocates to zero.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e96c987e-00cb-bb29-6713-63cf628fdabd.htm">VirtualAllocEx(IntPtr, IntPtr, UIntPtr, MemoryAllocationType, MemoryProtectionOptions)</a>
                  </td>
                  <td>
 Reserves, commits, or changes the state of a region of memory
 within the virtual address space of a specified process.
 <p />
 The function initializes the memory it allocates to zero.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="68a73803-29a1-1db1-99cb-e65b2b14364f.htm">VirtualAllocEx(IntPtr, UIntPtr, UIntPtr, MemoryAllocationType, MemoryProtectionOptions)</a>
                  </td>
                  <td>
 Reserves, commits, or changes the state of a region of memory
 within the virtual address space of a specified process.
 <p />
 The function initializes the memory it allocates to zero.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="616eb1f2-4dd8-b8c6-5177-7566b35eeb3c.htm">VirtualAllocExNuma(IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions, UInt32)</a>
                  </td>
                  <td>
 Reserves, commits, or changes the state of a region of memory within the virtual address space of the specified process,
 and specifies the NUMA node for the physical memory.
 <p />
 The function initializes the memory it allocates to zero.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="74556640-72ae-d22f-167a-b7796b841222.htm">VirtualAllocExNuma(IntPtr, IntPtr, UInt32, MemoryAllocationType, MemoryProtectionOptions, UInt32)</a>
                  </td>
                  <td>
 Reserves, commits, or changes the state of a region of memory within the virtual address space of the specified process,
 and specifies the NUMA node for the physical memory.
 <p />
 The function initializes the memory it allocates to zero.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="2b06f6b7-16ea-b967-7cc3-094ac98a1677.htm">VirtualAllocExNuma(IntPtr, UIntPtr, UInt32, MemoryAllocationType, MemoryProtectionOptions, UInt32)</a>
                  </td>
                  <td>
 Reserves, commits, or changes the state of a region of memory within the virtual address space of the specified process,
 and specifies the NUMA node for the physical memory.
 <p />
 The function initializes the memory it allocates to zero.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="91e891ef-7a7c-e664-7957-f2053f70be6a.htm">VirtualAllocExNuma(IntPtr, UIntPtr, UIntPtr, MemoryAllocationType, MemoryProtectionOptions, UInt32)</a>
                  </td>
                  <td>
 Reserves, commits, or changes the state of a region of memory within the virtual address space of the specified process,
 and specifies the NUMA node for the physical memory.
 <p />
 The function initializes the memory it allocates to zero.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ca923fb7-df28-8f9b-2f18-156370d7cfa1.htm">VirtualFree(IntPtr, IntPtr, MemoryFreeType)</a>
                  </td>
                  <td>
 Releases, decommits, or releases and decommits a region of pages
 within the virtual address space of the calling process.
 <p />
 To free memory allocated in another process by the <a href="c0f58d89-77bb-4d66-7410-d61da515da07.htm">VirtualAllocEx(IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</a> function,
 use the <a href="4c01e167-82e7-8b4c-94ed-938947e348d7.htm">VirtualFreeEx(IntPtr, IntPtr, IntPtr, MemoryFreeType)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="31614e56-4522-2ba8-b96d-d3f2452bb64b.htm">VirtualFree(IntPtr, UIntPtr, MemoryFreeType)</a>
                  </td>
                  <td>
 Releases, decommits, or releases and decommits a region of pages
 within the virtual address space of the calling process.
 <p />
 To free memory allocated in another process by the <a href="c0f58d89-77bb-4d66-7410-d61da515da07.htm">VirtualAllocEx(IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</a> function,
 use the <a href="4c01e167-82e7-8b4c-94ed-938947e348d7.htm">VirtualFreeEx(IntPtr, IntPtr, IntPtr, MemoryFreeType)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="add0e6b0-ecbe-9bf3-8ab0-66e53f83af42.htm">VirtualFree(UIntPtr, UIntPtr, MemoryFreeType)</a>
                  </td>
                  <td>
 Releases, decommits, or releases and decommits a region of pages
 within the virtual address space of the calling process.
 <p />
 To free memory allocated in another process by the <a href="c0f58d89-77bb-4d66-7410-d61da515da07.htm">VirtualAllocEx(IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</a> function,
 use the <a href="4c01e167-82e7-8b4c-94ed-938947e348d7.htm">VirtualFreeEx(IntPtr, IntPtr, IntPtr, MemoryFreeType)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4c01e167-82e7-8b4c-94ed-938947e348d7.htm">VirtualFreeEx(IntPtr, IntPtr, IntPtr, MemoryFreeType)</a>
                  </td>
                  <td>
 Releases, decommits, or releases and decommits a region of memory
 within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="cd8942d7-f0c6-365d-424b-312c84599a7c.htm">VirtualFreeEx(IntPtr, IntPtr, UIntPtr, MemoryFreeType)</a>
                  </td>
                  <td>
 Releases, decommits, or releases and decommits a region of memory
 within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b7d7bbe8-f46a-8ad6-a9a2-75c097c8e90d.htm">VirtualFreeEx(IntPtr, UIntPtr, UIntPtr, MemoryFreeType)</a>
                  </td>
                  <td>
 Releases, decommits, or releases and decommits a region of memory
 within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0c131145-af6e-9a6c-ab9c-adab71feefbd.htm">VirtualLock(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Locks the specified region of the process's virtual address space into physical memory,
 ensuring that subsequent access to the region will not incur a page fault.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="addb207a-65b2-dd7e-20bc-bb378649ca7b.htm">VirtualLock(IntPtr, UIntPtr)</a>
                  </td>
                  <td>
 Locks the specified region of the process's virtual address space into physical memory,
 ensuring that subsequent access to the region will not incur a page fault.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="70ef5faf-2d98-db04-2a7b-7d981b04876e.htm">VirtualLock(UIntPtr, UIntPtr)</a>
                  </td>
                  <td>
 Locks the specified region of the process's virtual address space into physical memory,
 ensuring that subsequent access to the region will not incur a page fault.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="74bd0719-3a3b-6da8-fae1-c94fd0c4ff09.htm">VirtualProtect(IntPtr, IntPtr, MemoryProtectionOptions, MemoryProtectionOptions<span id="LST25F871C9_184" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Changes the protection on a region of committed pages in the virtual address space of the calling process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b03d0e8c-3a88-51da-9b3e-e1388741df5b.htm">VirtualProtect(IntPtr, UIntPtr, MemoryProtectionOptions, MemoryProtectionOptions<span id="LST25F871C9_185" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Changes the protection on a region of committed pages in the virtual address space of the calling process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e3857002-f239-2cd0-1684-9de9a531d1c3.htm">VirtualProtect(UIntPtr, IntPtr, MemoryProtectionOptions, MemoryProtectionOptions<span id="LST25F871C9_186" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Changes the protection on a region of committed pages in the virtual address space of the calling process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="41acbc0d-7ef2-8b5d-fc7e-a9b1d5e0db8e.htm">VirtualProtect(UIntPtr, UIntPtr, MemoryProtectionOptions, MemoryProtectionOptions<span id="LST25F871C9_187" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Changes the protection on a region of committed pages in the virtual address space of the calling process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d8c7dad4-aab3-8615-7588-76e1883230b8.htm">VirtualProtectEx(IntPtr, IntPtr, IntPtr, MemoryProtectionOptions, MemoryProtectionOptions<span id="LST25F871C9_188" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Changes the protection on a region of committed pages in the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f97a0cf4-2318-9ae9-ae21-de8631278709.htm">VirtualProtectEx(IntPtr, IntPtr, UIntPtr, MemoryProtectionOptions, MemoryProtectionOptions<span id="LST25F871C9_189" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Changes the protection on a region of committed pages in the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0b494e0a-67f1-c7da-f6a5-934fdaca9b54.htm">VirtualProtectEx(IntPtr, UIntPtr, UIntPtr, MemoryProtectionOptions, MemoryProtectionOptions<span id="LST25F871C9_190" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Changes the protection on a region of committed pages in the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a20f16cf-26a2-a574-23ab-d6c0b84ab334.htm">VirtualQuery(IntPtr, MemoryBasicInformation32<span id="LST25F871C9_191" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages in the virtual address space of the calling (current) process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fa96df4a-c4ad-3c73-0d32-34a0c993306f.htm">VirtualQuery(IntPtr, MemoryBasicInformation64<span id="LST25F871C9_192" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages in the virtual address space of the calling (current) process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e48c3f06-43a9-b90b-e4cf-e499a0c65b89.htm">VirtualQuery(UIntPtr, MemoryBasicInformation32<span id="LST25F871C9_193" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages in the virtual address space of the calling (current) process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="78c6d060-6514-eb3d-74ac-b0fe32542d30.htm">VirtualQuery(UIntPtr, MemoryBasicInformation64<span id="LST25F871C9_194" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages in the virtual address space of the calling (current) process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ea33274b-2059-d31c-4695-cf33da7e73fa.htm">VirtualQueryEx(IntPtr, IntPtr, MemoryBasicInformation32<span id="LST25F871C9_195" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1dda7f8f-5a71-9b1d-d36e-59aea5fc9877.htm">VirtualQueryEx(IntPtr, IntPtr, MemoryBasicInformation32<span id="LST25F871C9_196" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e819e93b-5246-89f6-1039-77958eed97f1.htm">VirtualQueryEx(IntPtr, IntPtr, MemoryBasicInformation64<span id="LST25F871C9_197" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="63737f8e-01e0-e808-a3f0-0a4325b7850d.htm">VirtualQueryEx(IntPtr, IntPtr, MemoryBasicInformation64<span id="LST25F871C9_198" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b0dc8e24-6dd2-e670-bcfd-7a73c552db5d.htm">VirtualQueryEx(IntPtr, UIntPtr, MemoryBasicInformation32<span id="LST25F871C9_199" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="92b8e404-e0f8-e234-bc43-3d279aa1f91d.htm">VirtualQueryEx(IntPtr, UIntPtr, MemoryBasicInformation32<span id="LST25F871C9_200" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="418f5952-4aab-3a40-0dcd-dbe3692a93c0.htm">VirtualQueryEx(IntPtr, UIntPtr, MemoryBasicInformation64<span id="LST25F871C9_201" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="56e813f0-3f37-5e56-ba3a-3642c12adfbd.htm">VirtualQueryEx(IntPtr, UIntPtr, MemoryBasicInformation64<span id="LST25F871C9_202" data-languageSpecificText="cpp=%"></span>, UInt32)</a>
                  </td>
                  <td>
 Retrieves information about a range of pages within the virtual address space of a specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9ffea7d6-092f-c45a-f9ae-43674661671b.htm">VirtualUnlock(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Locks the specified region of the process's virtual address space into physical memory,
 ensuring that subsequent access to the region will not incur a page fault.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5108ae84-82e7-7555-47dc-20d4c1a342ba.htm">VirtualUnlock(IntPtr, UIntPtr)</a>
                  </td>
                  <td>
 Locks the specified region of the process's virtual address space into physical memory,
 ensuring that subsequent access to the region will not incur a page fault.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b3badede-a8e2-e97f-f799-1d13c00f561a.htm">VirtualUnlock(UIntPtr, UIntPtr)</a>
                  </td>
                  <td>
 Locks the specified region of the process's virtual address space into physical memory,
 ensuring that subsequent access to the region will not incur a page fault.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6475d693-8fb5-722b-b188-c5706b8bdcae.htm">WaitForSingleObject</a>
                  </td>
                  <td>
 Waits until the specified object is in the signaled state or the time-out interval elapses.
 <p />
 To enter an alertable wait state, use the <a href="b99e79a7-05b7-1556-4aad-a67f55acd067.htm">WaitForSingleObjectEx(IntPtr, UInt32, Boolean)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b99e79a7-05b7-1556-4aad-a67f55acd067.htm">WaitForSingleObjectEx</a>
                  </td>
                  <td>
 Waits until the specified object is in the signaled state,
 an I/O completion routine or asynchronous procedure call (APC) is queued to the thread,
 or the time-out interval elapses.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="eb62a8e1-d71c-5d98-1a20-b39755ccc635.htm">WerGetFlags</a>
                  </td>
                  <td>
 Retrieves the fault reporting settings for the specified process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e89762f0-6b4e-a088-ed5a-cc473604b1da.htm">WerRegisterAdditionalProcess</a>
                  </td>
                  <td>
 Registers a process to be included in the error report along with the main application process.
 <p />
 Optionally specifies a thread within that registered process to get additional data from.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8e54e92b-6372-fd7e-f29f-29c9e0055b86.htm">WerRegisterAppLocalDump</a>
                  </td>
                  <td>
 Registers a path relative to the local app store for the calling application where
 Windows Error Reporting (WER) should save a copy of the diagnostic memory dump that
 WER collects when one of the processes for the application stops responding.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="06f32335-95d9-df87-5198-e25f67928aa9.htm">WerRegisterCustomMetadata</a>
                  </td>
                  <td>
 Registers app-specific metadata to be collected (in the form of key/value strings) when WER creates an error report.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9f13ac1b-0543-cce8-3200-efef4eb524c5.htm">WerRegisterExcludedMemoryBlock</a>
                  </td>
                  <td>
 Marks a memory block (that is normally included by default in error reports) to be excluded from the error report.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="44417f5e-9195-358d-c9fd-0f65b7ac8982.htm">WerRegisterFile</a>
                  </td>
                  <td>
 Registers a file to be collected when WER creates an error report.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c459ccfb-dae9-9522-3b3a-f2798e8a1cfe.htm">WerRegisterMemoryBlock</a>
                  </td>
                  <td>
 Registers a memory block to be collected when WER creates an error report.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a6596f53-03ea-29c6-b6b3-79688bd1824a.htm">WerRegisterRuntimeExceptionModule</a>
                  </td>
                  <td>
 Registers a custom runtime exception handler that is used to provide custom error reporting for crashes.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="70c531fe-da0f-5c85-85a2-df37e1223fb5.htm">WerSetFlags</a>
                  </td>
                  <td>
 Sets the fault reporting settings for the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="062cd222-dc08-8f13-b993-e40bf9ebf2a5.htm">WerUnregisterAdditionalProcess</a>
                  </td>
                  <td>
 Removes a process from the list of additional processes to be included in the error report.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0222ca8e-1465-8d26-2cba-f9f761d6e777.htm">WerUnregisterAppLocalDump</a>
                  </td>
                  <td>
 Cancels the registration that was made by calling the <a href="8e54e92b-6372-fd7e-f29f-29c9e0055b86.htm">WerRegisterAppLocalDump(String)</a> function to
 specify that Windows Error Reporting (WER) should save a copy of the diagnostic memory dump that
 WER collects when one of the processes for the application stops responding.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9732c9f7-d6b9-562e-c6b3-d2dc97d563ba.htm">WerUnregisterCustomMetadata</a>
                  </td>
                  <td>
 Removes an item of app-specific metadata being collected during error reporting for the application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fd06fba0-6be2-0463-9e78-e12a8fddbb1e.htm">WerUnregisterExcludedMemoryBlock</a>
                  </td>
                  <td>
 Removes a memory block that was previously marked as excluded (it will again be included in error reports).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4d875e03-2f8c-9638-7123-b851210c3a4b.htm">WerUnregisterFile</a>
                  </td>
                  <td>
 Removes a file from the list of files to be added to reports generated for the current process.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="79b5188e-6176-9127-9449-eab1eaf158a1.htm">WerUnregisterMemoryBlock</a>
                  </td>
                  <td>
 Removes a memory block from the list of data to be collected during error reporting for the application.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1a150c93-b2d8-491f-b40a-21e9307eb963.htm">WerUnregisterRuntimeExceptionModule</a>
                  </td>
                  <td>
 Removes the registration of your WER exception handler.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c6849aca-8ba3-c64f-3727-13b93102d9f1.htm">WideCharToMultiByte(CodePage, WideCharConversionType, String, Int32, StringBuilder, Int32, String, Boolean<span id="LST25F871C9_203" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Maps a UTF-16 (wide character) string to a new character string. 
 The new character string is not necessarily from a multibyte character set.
 <p />
 Caution: Using the <a href="c6849aca-8ba3-c64f-3727-13b93102d9f1.htm">WideCharToMultiByte(CodePage, WideCharConversionType, String, Int32, StringBuilder, Int32, String, Boolean<span id="LST25F871C9_204" data-languageSpecificText="cpp=%"></span>)</a> function incorrectly can 
 compromise the security of your application. 
 Calling this function can easily cause a buffer overrun because the size of the input buffer
 indicated by <span class="parameter">wideCharStr</span> equals the number of characters in the Unicode string, 
 while the size of the output buffer indicated by <span class="parameter">multiByteStr</span> equals the number of bytes. 
 <p />
 To avoid a buffer overrun, your application must specify a buffer size appropriate for the data type the buffer receives.
 <p />
 Data converted from UTF-16 to non-Unicode encodings is subject to data loss, 
 because a code page might not be able to represent every character used in the specific Unicode data. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b9f5cc89-1493-1e26-22b1-a997d3197632.htm">WideCharToMultiByte(UInt32, WideCharConversionType, String, Int32, StringBuilder, Int32, String, Boolean<span id="LST25F871C9_205" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Maps a UTF-16 (wide character) string to a new character string. 
 The new character string is not necessarily from a multibyte character set.
 <p />
 Caution: Using the <a href="c6849aca-8ba3-c64f-3727-13b93102d9f1.htm">WideCharToMultiByte(CodePage, WideCharConversionType, String, Int32, StringBuilder, Int32, String, Boolean<span id="LST25F871C9_206" data-languageSpecificText="cpp=%"></span>)</a> function incorrectly can 
 compromise the security of your application. 
 Calling this function can easily cause a buffer overrun because the size of the input buffer
 indicated by <span class="parameter">wideCharStr</span> equals the number of characters in the Unicode string, 
 while the size of the output buffer indicated by <span class="parameter">multiByteStr</span> equals the number of bytes. 
 <p />
 To avoid a buffer overrun, your application must specify a buffer size appropriate for the data type the buffer receives.
 <p />
 Data converted from UTF-16 to non-Unicode encodings is subject to data loss, 
 because a code page might not be able to represent every character used in the specific Unicode data. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="515a9b63-4037-a460-8c1b-76ffcad20864.htm">WinExec</a>
                  </td>
                  <td>
 Runs the specified application.
 <p />
 Note: This function is provided only for compatibility with 16-bit Windows.
 Applications should use the <a href="1eb0b62a-5037-b93b-7618-e164f42d74a8.htm">CreateProcess(String, StringBuilder, SecurityAttributes<span id="LST25F871C9_207" data-languageSpecificText="cpp=%"></span>, SecurityAttributes<span id="LST25F871C9_208" data-languageSpecificText="cpp=%"></span>, Boolean, CreateProcessFlags, IntPtr, String, ProcessStartupInfo<span id="LST25F871C9_209" data-languageSpecificText="cpp=%"></span>, ProcessInformation<span id="LST25F871C9_210" data-languageSpecificText="cpp=%"></span>)</a> function.
 <br /><span class="tag is-danger">Obsolete.</span></td>
                </tr>
                <tr>
                  <td>
                    <a href="22763c31-f310-20fe-2c12-c63a25c0ffbc.htm">Wow64DisableWow64FsRedirection</a>
                  </td>
                  <td>
 Disables file system redirection for the calling thread.
 <p />
 File system redirection is enabled by default.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="80a6687b-4213-6126-b5ae-b59f783ba558.htm">Wow64EnableWow64FsRedirection</a>
                  </td>
                  <td>
 Enables or disables file system redirection for the calling thread.
 <p />
 This function may not work reliably when there are nested calls.
 Therefore, this function has been replaced by the
 <a href="22763c31-f310-20fe-2c12-c63a25c0ffbc.htm">Wow64DisableWow64FsRedirection(IntPtr<span id="LST25F871C9_211" data-languageSpecificText="cpp=%"></span>)</a> and <a href="956afdb8-6377-4fdb-4386-7714116b55de.htm">Wow64RevertWow64FsRedirection(IntPtr)</a> functions.
 <p />
 Note: These two methods of controlling file system redirection cannot be combined in any way.
 Do not use the <a href="80a6687b-4213-6126-b5ae-b59f783ba558.htm">Wow64EnableWow64FsRedirection(Boolean)</a> function with either the
 <a href="22763c31-f310-20fe-2c12-c63a25c0ffbc.htm">Wow64DisableWow64FsRedirection(IntPtr<span id="LST25F871C9_212" data-languageSpecificText="cpp=%"></span>)</a> or the <a href="956afdb8-6377-4fdb-4386-7714116b55de.htm">Wow64RevertWow64FsRedirection(IntPtr)</a> function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="956afdb8-6377-4fdb-4386-7714116b55de.htm">Wow64RevertWow64FsRedirection</a>
                  </td>
                  <td>
 Restores file system redirection for the calling thread.
 <p />
 This function should not be called without a previous call to the <a href="22763c31-f310-20fe-2c12-c63a25c0ffbc.htm">Wow64DisableWow64FsRedirection(IntPtr<span id="LST25F871C9_213" data-languageSpecificText="cpp=%"></span>)</a>.
 <p />
 Any data allocation on behalf of the <a href="22763c31-f310-20fe-2c12-c63a25c0ffbc.htm">Wow64DisableWow64FsRedirection(IntPtr<span id="LST25F871C9_214" data-languageSpecificText="cpp=%"></span>)</a> function is cleaned up by this function.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8739dc1c-8e23-0511-34b8-8bb72a556401.htm">WriteConsole</a>
                  </td>
                  <td>
 Writes a character string to a console screen buffer beginning at the current cursor location.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="00f4e2ad-6730-69a6-4a3c-f40d47fa1106.htm">WriteConsoleOutput</a>
                  </td>
                  <td>
 Writes character and color attribute data to a specified rectangular block of
 character cells in a console screen buffer.
 <p />
 The data to be written is taken from a correspondingly sized rectangular block at a
 specified location in the source buffer.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c3328a1d-b9ee-ee6c-b0b7-6aeb943ac94c.htm">WriteConsoleOutputAttribute</a>
                  </td>
                  <td>
 Copies a number of character attributes to consecutive cells of a console screen buffer, beginning at a specified location.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="367bea52-374c-e1b2-3974-abeaad4eb2c1.htm">WriteConsoleOutputCharacter</a>
                  </td>
                  <td>
 Copies a number of characters to consecutive cells of a console screen buffer, beginning at a specified location.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="485a35c5-66a0-2a1f-cf01-06052d99a52b.htm">WriteFile(SafeFileHandle, <span id="LST25F871C9_215" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_216" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32<span id="LST25F871C9_217" data-languageSpecificText="cpp=%"></span>, NativeOverlapped<span id="LST25F871C9_218" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Writes data to the specified file or input/output (I/O) device..
 <p />
 This function is designed for both synchronous and asynchronous operation. 
 For a similar function designed solely for asynchronous operation, see WriteFileEx.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a545fd1d-f28f-8fd2-d8dc-50cf8ec58fc7.htm">WriteFile(SafeFileHandle, <span id="LST25F871C9_219" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_220" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, UInt32<span id="LST25F871C9_221" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Writes data to the specified file or input/output (I/O) device..
 <p />
 This function is designed for both synchronous and asynchronous operation. 
 For a similar function designed solely for asynchronous operation, see WriteFileEx.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="15110df7-8150-c9cd-312f-eaee36d2f9b7.htm">WriteFile(SafeFileHandle, IntPtr, UInt32, UInt32<span id="LST25F871C9_222" data-languageSpecificText="cpp=%"></span>, IntPtr)</a>
                  </td>
                  <td>
 Writes data to the specified file or input/output (I/O) device..
 <p />
 This function is designed for both synchronous and asynchronous operation. 
 For a similar function designed solely for asynchronous operation, see WriteFileEx.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4b27bef0-4fd3-4e20-1da7-fa32b7984c6b.htm">WriteProcessMemory(IntPtr, IntPtr, <span id="LST25F871C9_223" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_224" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IntPtr, IntPtr<span id="LST25F871C9_225" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Writes data to an area of memory in a specified process.
 <p />
 The entire area to be written to must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a8ba39cb-a9c6-ce16-fb49-2737ac2c9f23.htm">WriteProcessMemory(IntPtr, IntPtr, <span id="LST25F871C9_226" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_227" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UIntPtr, IntPtr<span id="LST25F871C9_228" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Writes data to an area of memory in a specified process.
 <p />
 The entire area to be written to must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8e5eb946-5343-b068-fd8b-88c61d846b88.htm">WriteProcessMemory(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_229" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Writes data to an area of memory in a specified process.
 <p />
 The entire area to be written to must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9e4f66e4-a48b-e7fe-9f62-a6400c2be9a3.htm">WriteProcessMemory(IntPtr, IntPtr, IntPtr, UIntPtr, IntPtr<span id="LST25F871C9_230" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Writes data to an area of memory in a specified process.
 <p />
 The entire area to be written to must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9bb44781-82d3-93c7-536d-3dcd2deaf898.htm">WriteProcessMemory(IntPtr, UIntPtr, <span id="LST25F871C9_231" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_232" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IntPtr, IntPtr<span id="LST25F871C9_233" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Writes data to an area of memory in a specified process.
 <p />
 The entire area to be written to must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e83e50a8-23fe-34e9-84a3-89e80a6b2b7c.htm">WriteProcessMemory(IntPtr, UIntPtr, <span id="LST25F871C9_234" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST25F871C9_235" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UIntPtr, IntPtr<span id="LST25F871C9_236" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Writes data to an area of memory in a specified process.
 <p />
 The entire area to be written to must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a8dd532f-1b6c-27a3-0c5e-ff1df2d47164.htm">WriteProcessMemory(IntPtr, UIntPtr, IntPtr, IntPtr, IntPtr<span id="LST25F871C9_237" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Writes data to an area of memory in a specified process.
 <p />
 The entire area to be written to must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6c468e85-68ef-44c2-4a9c-b33b476877cc.htm">WriteProcessMemory(IntPtr, UIntPtr, IntPtr, UIntPtr, IntPtr<span id="LST25F871C9_238" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Writes data to an area of memory in a specified process.
 <p />
 The entire area to be written to must be accessible or the operation fails.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c73c0930-cab3-061e-a866-ab203d88e772.htm">WTSGetActiveConsoleSessionId</a>
                  </td>
                  <td>
 Retrieves the session identifier of the console session. 
 <p />
 The console session is the session that is currently attached to the physical console. 
 <p />
 Note that it is not necessary that Remote Desktop Services be running for this function to succeed.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="81ef231b-b00f-a0a8-564f-489e32e093d4.htm">ZeroMemory(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Fills a block of memory with zeros.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0ea61ac8-2722-7a96-70e0-2a81a693d82f.htm">ZeroMemory(IntPtr, UInt32)</a>
                  </td>
                  <td>
 Fills a block of memory with zeros.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ed9e6bf7-ade4-471a-f7b4-4f449d9bd383.htm">ZeroMemory(IntPtr, UIntPtr)</a>
                  </td>
                  <td>
 Fills a block of memory with zeros.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="400cbe17-d418-450a-4c39-e38b220a1c7e.htm">ZeroMemory(UIntPtr, UInt32)</a>
                  </td>
                  <td>
 Fills a block of memory with zeros.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e5cbc993-e8d3-8a62-cda9-ac6e8f2612a0.htm">ZeroMemory(UIntPtr, UIntPtr)</a>
                  </td>
                  <td>
 Fills a block of memory with zeros.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Extension Methods</h2>
            <div id="IDADASection">
              <table id="ExtensionList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="4fc2bde6-7e68-b4f7-8406-9f998fc4201d.htm">CanConvertTo</a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="d438a76e-0b10-2e5a-19bb-33849b67af0e.htm">CanConvertTo<span id="LST25F871C9_239" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST25F871C9_240" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="be81447a-a248-2281-1117-bfc740d6232c.htm">ConvertTo<span id="LST25F871C9_241" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST25F871C9_242" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, an exception is thrown.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="8021acba-836d-7ab5-0827-131cef22840b.htm">ConvertTo<span id="LST25F871C9_243" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST25F871C9_244" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, returns the specified default value.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="90e0095b-fa87-d162-71b4-0b19729ac296.htm">IsDisposable</a>
                  </td>
                  <td>
 Determines whether the specified object is disposable.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="094676a4-571b-ad1f-ef01-d8acf5ebed93.htm">Kernel32 Class</a>
              </div>
              <div>
                <a href="4b8ebc81-6ba2-6fac-af5b-8bb75ecef853.htm">DevCase.Win32.NativeMethods Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Methods</a>
                </li>
                <li>
                  <a class="quickLink">Extension Methods</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2023</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%20Class%20Library%205.0">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script>
  </body>
</html>