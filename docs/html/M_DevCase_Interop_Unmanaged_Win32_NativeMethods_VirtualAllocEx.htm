<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>NativeMethods.VirtualAllocEx Method (IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</title>
    <meta name="Language" content="en-us" />
    <meta name="Microsoft.Help.Id" content="M:DevCase.Interop.Unmanaged.Win32.NativeMethods.VirtualAllocEx(System.IntPtr,System.IntPtr,System.IntPtr,DevCase.Interop.Unmanaged.Win32.Enums.MemoryAllocationType,DevCase.Interop.Unmanaged.Win32.Enums.MemoryProtectionOptions)" />
    <meta name="Description" content="Reserves, commits, or changes the state of a region of memory within the virtual address space of a specified process. The function initializes the memory it allocates to zero." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="DevCase.Interop.Unmanaged.Win32" />
    <meta name="file" content="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx" />
    <meta name="guid" content="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx" />
    
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">DevCase Class Library v3.3<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_DevCase_Class_Library_v3_3.htm" title="DevCase Class Library v3.3" tocid="roottoc">DevCase Class Library v3.3</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_DevCase_Class_Library_v3_3.htm" title="Namespaces" tocid="R_Project_DevCase_Class_Library_v3_3">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_DevCase_Interop.htm" title="DevCase.Interop Namespaces" tocid="G_DevCase_Interop">DevCase.Interop Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_DevCase_Interop_Unmanaged.htm" title="DevCase.Interop.Unmanaged Namespaces" tocid="G_DevCase_Interop_Unmanaged">DevCase.Interop.Unmanaged Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_DevCase_Interop_Unmanaged_Win32.htm" title="DevCase.Interop.Unmanaged.Win32" tocid="N_DevCase_Interop_Unmanaged_Win32">DevCase.Interop.Unmanaged.Win32</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_DevCase_Interop_Unmanaged_Win32_NativeMethods.htm" title="NativeMethods Class" tocid="T_DevCase_Interop_Unmanaged_Win32_NativeMethods">NativeMethods Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_DevCase_Interop_Unmanaged_Win32_NativeMethods.htm" title="NativeMethods Methods" tocid="Methods_T_DevCase_Interop_Unmanaged_Win32_NativeMethods">NativeMethods Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx.htm" title="VirtualAllocEx Method " tocid="Overload_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx">VirtualAllocEx Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx.htm" title="VirtualAllocEx Method (IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)" tocid="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx">VirtualAllocEx Method (IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx_1.htm" title="VirtualAllocEx Method (IntPtr, IntPtr, UIntPtr, MemoryAllocationType, MemoryProtectionOptions)" tocid="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx_1">VirtualAllocEx Method (IntPtr, IntPtr, UIntPtr, MemoryAllocationType, MemoryProtectionOptions)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx_2.htm" title="VirtualAllocEx Method (IntPtr, UIntPtr, UIntPtr, MemoryAllocationType, MemoryProtectionOptions)" tocid="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx_2">VirtualAllocEx Method (IntPtr, UIntPtr, UIntPtr, MemoryAllocationType, MemoryProtectionOptions)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>NativeMethods<span id="LSTFC16694C_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFC16694C_0?cpp=::|nu=.");</script>VirtualAllocEx Method (IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
 Reserves, commits, or changes the state of a region of memory
 within the virtual address space of a specified process.
 <p />
 The function initializes the memory it allocates to zero.
 </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_DevCase_Interop_Unmanaged_Win32.htm">DevCase.Interop.Unmanaged.Win32</a><br />
    <strong>Assembly:</strong>
   DevCase.Interop (in DevCase.Interop.dll) Version: 3.3.0.0 (3.3)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EECA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','cs','1','4');return false;">C#</a></div><div id="ID0EECA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','vb','2','4');return false;">VB</a></div><div id="ID0EECA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','cpp','3','4');return false;">C++</a></div><div id="ID0EECA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EECA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EECA');return false;" title="Copy">Copy</a></div></div><div id="ID0EECA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">DllImportAttribute</span>("Kernel32.dll", ExactSpelling = true, SetLastError = true)]
<span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">IntPtr</span> <span class="identifier">VirtualAllocEx</span>(
	<span class="identifier">IntPtr</span> <span class="parameter">hProcess</span>,
	<span class="identifier">IntPtr</span> <span class="parameter">address</span>,
	<span class="identifier">IntPtr</span> <span class="parameter">size</span>,
	<span class="identifier">MemoryAllocationType</span> <span class="parameter">allocationType</span>,
	<span class="identifier">MemoryProtectionOptions</span> <span class="parameter">protection</span>
)</pre></div><div id="ID0EECA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">DllImportAttribute</span>("Kernel32.dll", ExactSpelling := true, SetLastError := true&gt;]
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">VirtualAllocEx</span> ( 
	<span class="parameter">hProcess</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>,
	<span class="parameter">address</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>,
	<span class="parameter">size</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>,
	<span class="parameter">allocationType</span> <span class="keyword">As</span> <span class="identifier">MemoryAllocationType</span>,
	<span class="parameter">protection</span> <span class="keyword">As</span> <span class="identifier">MemoryProtectionOptions</span>
) <span class="keyword">As</span> <span class="identifier">IntPtr</span>

<span class="keyword">Dim</span> <span class="parameter">hProcess</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>
<span class="keyword">Dim</span> <span class="parameter">address</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>
<span class="keyword">Dim</span> <span class="parameter">size</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>
<span class="keyword">Dim</span> <span class="parameter">allocationType</span> <span class="keyword">As</span> <span class="identifier">MemoryAllocationType</span>
<span class="keyword">Dim</span> <span class="parameter">protection</span> <span class="keyword">As</span> <span class="identifier">MemoryProtectionOptions</span>
<span class="keyword">Dim</span> <span class="parameter">returnValue</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>

<span class="parameter">returnValue</span> = <span class="identifier">NativeMethods</span>.<span class="identifier">VirtualAllocEx</span>(<span class="parameter">hProcess</span>, 
	<span class="parameter">address</span>, <span class="parameter">size</span>, <span class="parameter">allocationType</span>, <span class="parameter">protection</span>)</pre></div><div id="ID0EECA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
[<span class="identifier">DllImportAttribute</span>(L"Kernel32.dll", ExactSpelling = true, SetLastError = true)]
<span class="keyword">static</span> <span class="identifier">IntPtr</span> <span class="identifier">VirtualAllocEx</span>(
	[<span class="identifier">InAttribute</span>] <span class="identifier">IntPtr</span> <span class="parameter">hProcess</span>, 
	[<span class="identifier">InAttribute</span>] <span class="identifier">IntPtr</span> <span class="parameter">address</span>, 
	<span class="identifier">IntPtr</span> <span class="parameter">size</span>, 
	<span class="identifier">MemoryAllocationType</span> <span class="parameter">allocationType</span>, 
	<span class="identifier">MemoryProtectionOptions</span> <span class="parameter">protection</span>
)</pre></div><div id="ID0EECA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">DllImportAttribute</span>("Kernel32.dll", ExactSpelling = true, SetLastError = true)&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">VirtualAllocEx</span> : 
        <span class="parameter">hProcess</span> : <span class="identifier">IntPtr</span> * 
        <span class="parameter">address</span> : <span class="identifier">IntPtr</span> * 
        <span class="parameter">size</span> : <span class="identifier">IntPtr</span> * 
        <span class="parameter">allocationType</span> : <span class="identifier">MemoryAllocationType</span> * 
        <span class="parameter">protection</span> : <span class="identifier">MemoryProtectionOptions</span> <span class="keyword">-&gt;</span> <span class="identifier">IntPtr</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EECA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">hProcess</span></dt><dd>Type: <span class="nolink">System<span id="LSTFC16694C_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFC16694C_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IntPtr</span><br />
 The handle to a process.
 <p />
 The function allocates memory within the virtual address space of this process.
 <p />
 The handle must have the <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessAccessRights.htm">VirtualMemoryOperation</a> access right
 </dd><dt><span class="parameter">address</span></dt><dd>Type: <span class="nolink">System<span id="LSTFC16694C_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFC16694C_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IntPtr</span><br />
 The pointer that specifies a desired starting address for the region of pages that you want to allocate.
 <p />
 If you are reserving memory,
 the function rounds this address down to the nearest multiple of the allocation granularity.
 <p />
 If you are committing memory that is already reserved,
 the function rounds this address down to the nearest page boundary.
 <p />
 To determine the size of a page and the allocation granularity on the host computer,
 use the <span class="code">GetSystemInfo</span> function.
 <p />
 If <span class="parameter">address</span> is <span class="nolink">Zero</span>,
 the function determines where to allocate the region.
 <p />
 If this address is within an enclave that you have not initialized by calling <span class="code">InitializeEnclave</span> function,
 <span class="selflink">VirtualAllocEx(IntPtr, IntPtr, IntPtr, MemoryAllocationType, MemoryProtectionOptions)</span> allocates a page of zeros for the enclave at that address.
 <p />
 The page must be previously uncommitted, and will not be measured with the <span class="code">EEXTEND</span> instruction
 of the <span class="code">Intel Software Guard Extensions</span> programming model.
 <p />
 If the address in within an enclave that you initialized,
 then the allocation operation fails with the <span class="code">ERROR_INVALID_ADDRESS</span> error.
 </dd><dt><span class="parameter">size</span></dt><dd>Type: <span class="nolink">System<span id="LSTFC16694C_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFC16694C_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IntPtr</span><br />
 The size of the region of memory to allocate, in bytes.
 <p />
 If <span class="parameter">address</span> is <span class="nolink">Zero</span>,
 the function rounds <span class="parameter">size</span> up to the next page boundary.
 <p />
 If <span class="parameter">address</span> is not <span class="nolink">Zero</span>,
 the function allocates all pages that contain one or more bytes in the range from
 <span class="parameter">address</span> to <span class="parameter">address</span>+<span class="parameter">size</span>.
 This means, for example, that a 2-byte range that straddles a page boundary
 causes the function to allocate both pages.
 </dd><dt><span class="parameter">allocationType</span></dt><dd>Type: <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryAllocationType.htm">DevCase.Interop.Unmanaged.Win32.Enums<span id="LSTFC16694C_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFC16694C_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MemoryAllocationType</a><br />
 The type of memory allocation.
 </dd><dt><span class="parameter">protection</span></dt><dd>Type: <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryProtectionOptions.htm">DevCase.Interop.Unmanaged.Win32.Enums<span id="LSTFC16694C_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFC16694C_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MemoryProtectionOptions</a><br />
 The memory protection for the region of pages to be allocated.
 <p />
 If <span class="parameter">address</span> parameter specifies an address within an enclave,
 <span class="parameter">protection</span> cannot be any of the following values:
 <p /><a href="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryProtectionOptions.htm">NoAccess</a>,
 <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryProtectionOptions.htm">Guard</a>,
 <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryProtectionOptions.htm">NoCache</a>,
 <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryProtectionOptions.htm">WriteCombine</a></dd></dl><h4 class="subHeading">Return Value</h4>Type: <span class="nolink">IntPtr</span><br />
 If the function succeeds, the return value is the base address of the allocated region of pages.
 <p />
 If the function fails, the return value is <span class="nolink">Zero</span>.
 <p />
 To get extended error information, call <span class="nolink">GetLastWin32Error<span id="LSTFC16694C_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFC16694C_6?cs=()|vb=|cpp=()|nu=()|fs=()");</script></span>.
 </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa366890%28v=vs.85%29.aspx" target="_blank">https://msdn.microsoft.com/en-us/library/windows/desktop/aa366890%28v=vs.85%29.aspx</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_DevCase_Interop_Unmanaged_Win32_NativeMethods.htm">NativeMethods Class</a></div><div class="seeAlsoStyle"><a href="Overload_DevCase_Interop_Unmanaged_Win32_NativeMethods_VirtualAllocEx.htm">VirtualAllocEx Overload</a></div><div class="seeAlsoStyle"><a href="N_DevCase_Interop_Unmanaged_Win32.htm">DevCase.Interop.Unmanaged.Win32 Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>ElektroStudios 2020</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:ElektroStudios%40ElHacker.net?Subject=DevCase%20Class%20Library%20v3.3">ElektroStudios@ElHacker.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>