<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>NtDll.NtCreateSection Method</title>
    <meta name="Title" content="NtCreateSection" />
    <meta name="Help.Id" content="Overload:DevCase.Win32.NativeMethods.NtDll.NtCreateSection" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Win32.NativeMethods" />
    <meta name="guid" content="5261052b-1a7f-f0fd-7beb-170a84bd37d7" />
    <meta name="tocFile" content="../toc/IDALFFA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>Nt<wbr />Dll<span id="LST635D2ACF_0" data-languageSpecificText="cpp=::|nu=."></span>Nt<wbr />Create<wbr />Section Method</h1>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Overload List</h2>
            <div id="IDACASection">
              <table id="OverloadList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="fb3d27ef-a0e9-8cbd-9e1a-21d834d7c6aa.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_1" data-languageSpecificText="cpp=%"></span>, GenericAccessRights, ObjectAttributes, UInt64<span id="LST635D2ACF_2" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, SafeFileHandle)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b24ba1be-35cd-12a8-df37-46dc305a8f39.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_3" data-languageSpecificText="cpp=%"></span>, GenericAccessRights, ObjectAttributes, UInt64<span id="LST635D2ACF_4" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="bff88d7c-5ad3-8c3d-f0d3-7072c3fb836c.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_5" data-languageSpecificText="cpp=%"></span>, GenericAccessRights, IntPtr, UInt64<span id="LST635D2ACF_6" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, SafeFileHandle)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f648df48-21c8-f519-8bb9-39d16621862f.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_7" data-languageSpecificText="cpp=%"></span>, GenericAccessRights, IntPtr, UInt64<span id="LST635D2ACF_8" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="90cfcbd9-5284-560c-6737-c81e1226bbcd.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_9" data-languageSpecificText="cpp=%"></span>, SectionAccessRights, ObjectAttributes, UInt64<span id="LST635D2ACF_10" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, SafeFileHandle)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5e598008-f5ef-1b7d-d9ce-96aee626d5a0.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_11" data-languageSpecificText="cpp=%"></span>, SectionAccessRights, ObjectAttributes, UInt64<span id="LST635D2ACF_12" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="20179f59-a159-65c7-017a-182b9a8d4e43.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_13" data-languageSpecificText="cpp=%"></span>, SectionAccessRights, IntPtr, UInt64<span id="LST635D2ACF_14" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, SafeFileHandle)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="65d6eb9c-ceaf-9264-8959-0a057daceae1.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_15" data-languageSpecificText="cpp=%"></span>, SectionAccessRights, IntPtr, UInt64<span id="LST635D2ACF_16" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="19ddf86e-4d56-5b72-1061-3b57619614b1.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_17" data-languageSpecificText="cpp=%"></span>, StandardAccessRights, ObjectAttributes, UInt64<span id="LST635D2ACF_18" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, SafeFileHandle)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ed4c021e-0008-ad01-2a58-f700a9a2b197.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_19" data-languageSpecificText="cpp=%"></span>, StandardAccessRights, ObjectAttributes, UInt64<span id="LST635D2ACF_20" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="3343297d-f19c-d872-03bb-9ee96a9d69dc.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_21" data-languageSpecificText="cpp=%"></span>, StandardAccessRights, IntPtr, UInt64<span id="LST635D2ACF_22" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, SafeFileHandle)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b8117210-65a7-ec5d-427f-77aa0c1fe703.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_23" data-languageSpecificText="cpp=%"></span>, StandardAccessRights, IntPtr, UInt64<span id="LST635D2ACF_24" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e15455f2-9be2-3bd3-2410-4970ebea9c43.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_25" data-languageSpecificText="cpp=%"></span>, UInt32, ObjectAttributes, UInt64<span id="LST635D2ACF_26" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, SafeFileHandle)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="848eef0d-dcb2-53b4-1776-6dd0f67049ab.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_27" data-languageSpecificText="cpp=%"></span>, UInt32, ObjectAttributes, UInt64<span id="LST635D2ACF_28" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="b8ac7c38-4056-32bd-658b-67fd2f961b83.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_29" data-languageSpecificText="cpp=%"></span>, UInt32, IntPtr, UInt64<span id="LST635D2ACF_30" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, SafeFileHandle)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6a8cf58f-17ee-3b9d-6980-ad73c0b82c08.htm">NtCreateSection(IntPtr<span id="LST635D2ACF_31" data-languageSpecificText="cpp=%"></span>, UInt32, IntPtr, UInt64<span id="LST635D2ACF_32" data-languageSpecificText="cpp=%"></span>, MemoryProtectionOptions, SectionAttributes, IntPtr)</a>
                  </td>
                  <td>
 Creates a section object.
 <p />
 A section object represents a section of memory that can be shared. 
 A process can use a section object to share parts of its memory address space (memory sections) with other processes. 
 <p />
 Section objects also provide the mechanism by which a process can map a file into its memory address space.
 <p />
 Each memory section has one or more corresponding views. 
 A view of a section is a part of the section that is actually visible to a process. 
 The act of creating a view for a section is known as mapping a view of the section. 
 <p />
 Each process that is manipulating the contents of a section has its own view; 
 a process can also have multiple views (to the same or different sections).
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="acf85973-1453-e67b-362c-38bf21d621bc.htm">NtDll Class</a>
              </div>
              <div>
                <a href="4b8ebc81-6ba2-6fac-af5b-8bb75ecef853.htm">DevCase.Win32.NativeMethods Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Overload List</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script>
  </body>
</html>