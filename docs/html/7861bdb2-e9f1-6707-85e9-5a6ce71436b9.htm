<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>WTelegramClientHelper.CopyMessageAsync(Client, Message, ChatBase) Method</title>
    <meta name="Title" content="CopyMessageAsync(Client, Message, ChatBase)" />
    <meta name="Help.Id" content="M:DevCase.ThirdParty.WTelegramClient.WTelegramClientHelper.CopyMessageAsync(WTelegram.Client,TL.Message,TL.ChatBase)" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.ThirdParty.WTelegramClient" />
    <meta name="guid" content="7861bdb2-e9f1-6707-85e9-5a6ce71436b9" />
    <meta name="Description" content="Asynchronously copies the provided message and sends it to the specified chat. This is an alternative solution to message forwarding, allowing to make a complete copy of the message instead of simply forwarding it." />
    <meta name="tocFile" content="../toc/IDBACA0ZB0DA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>WTelegram<wbr />Client<wbr />Helper<span id="LST643DC135_0" data-languageSpecificText="cpp=::|nu=."></span>Copy<wbr />Message<wbr />Async(Client, Message, ChatBase) Method</h1>
            <div class="summary">
 Asynchronously copies the provided message and sends it to the specified chat.
 <p />
 This is an alternative solution to message forwarding, 
 allowing to make a complete copy of the message instead of simply forwarding it. 
 <p />
 If you want to forward a message, call function <a href="047bc824-3e06-b7fb-6b8d-a55dcc338085.htm">ForwardMessageAsync(Client, Message, InputPeer, Channel, Boolean, Int32)</a> instead.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="3c996b88-ef40-be7c-fcca-9beaba87ef18.htm">DevCase.ThirdParty.WTelegramClient</a><br /><strong>Assembly:</strong> DevCase.net48.ThirdParty.WTelegramClient (in DevCase.net48.ThirdParty.WTelegramClient.dll) Version: 6.0.0.0 (6.0)<br /><strong>XMLNS for XAML:</strong> Not mapped to an xmlns.<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="noLink">Task</span>&lt;<span class="noLink">Message</span>&gt; <span class="identifier">CopyMessageAsync</span>(
	<span class="noLink">Client</span> <span class="parameter">client</span>,
	<span class="noLink">Message</span> <span class="parameter">msg</span>,
	<span class="noLink">ChatBase</span> <span class="parameter">toChat</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CopyMessageAsync</span> ( 
	<span class="parameter">client</span> <span class="keyword">As</span> <span class="noLink">Client</span>,
	<span class="parameter">msg</span> <span class="keyword">As</span> <span class="noLink">Message</span>,
	<span class="parameter">toChat</span> <span class="keyword">As</span> <span class="noLink">ChatBase</span>
) <span class="keyword">As</span> <span class="noLink">Task</span>(<span class="keyword">Of</span> <span class="noLink">Message</span>)

<span class="keyword">Dim</span> <span class="parameter">client</span> <span class="keyword">As</span> <span class="noLink">Client</span>
<span class="keyword">Dim</span> <span class="parameter">msg</span> <span class="keyword">As</span> <span class="noLink">Message</span>
<span class="keyword">Dim</span> <span class="parameter">toChat</span> <span class="keyword">As</span> <span class="noLink">ChatBase</span>

<span class="keyword">Dim</span> <span class="parameter">returnValue</span> <span class="keyword">As</span> <span class="noLink">Task</span>(<span class="keyword">Of</span> <span class="noLink">Message</span>)

<span class="parameter">returnValue</span> = <a href="ce1d7467-f85f-4119-5e95-5f8eb6af6b56.htm">WTelegramClientHelper</a>.<span class="identifier">CopyMessageAsync</span>(<span class="parameter">client</span>, 
	<span class="parameter">msg</span>, <span class="parameter">toChat</span>)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="noLink">Task</span>&lt;<span class="noLink">Message</span>^&gt;^ <span class="identifier">CopyMessageAsync</span>(
	<span class="noLink">Client</span>^ <span class="parameter">client</span>, 
	<span class="noLink">Message</span>^ <span class="parameter">msg</span>, 
	<span class="noLink">ChatBase</span>^ <span class="parameter">toChat</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">CopyMessageAsync</span> : 
        <span class="parameter">client</span> : <span class="noLink">Client</span> * 
        <span class="parameter">msg</span> : <span class="noLink">Message</span> * 
        <span class="parameter">toChat</span> : <span class="noLink">ChatBase</span> <span class="keyword">-&gt;</span> <span class="noLink">Task</span>&lt;<span class="noLink">Message</span>&gt; </code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">client</span>  <span class="noLink">Client</span></dt><dd>
 The source <span class="noLink">Client</span> object.
 </dd><dt class="has-text-weight-normal"><span class="parameter">msg</span>  <span class="noLink">Message</span></dt><dd>
 The source message to be copied.
 </dd><dt class="has-text-weight-normal"><span class="parameter">toChat</span>  <span class="noLink">ChatBase</span></dt><dd>
 The destination chat where the copied message will be sent.
 </dd></dl><h4 class="quickLinkHeader">Return Value</h4><span class="noLink">Task</span><span id="LST643DC135_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Message</span><span id="LST643DC135_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />
 An asynchronous operation that returns a <span class="noLink">Message</span> representing the message sent.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Example</h2>
            <div id="IDBCSection"> This is a code example.
 <div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-VB.NET">Private Async Sub Test()

    Dim clientConfig As New TelegramClientConfig With {
        .ApiId = "###",
        .ApiHash = "###",
        .FirstName = "###",
        .LastName = "###",
        .Password = "###",
        .PhoneNumber = "+34###",
        .VerificationCode = "###"
    }

    Dim client As WTelegram.Client = CreateClient(clientConfig)

    Dim myUser As TL.User = Await client.LoginUserIfNeeded()
    Dim myUserId As Long = DirectCast(myUser, UserBase).ID
    Debug.WriteLine($"We are logged-in as user: {myUser.MainUsername}, id: {myUserId}")

    Dim fromChat As TL.ChatBase =
        (Await GetChannelsByTitleAsync(client, "From Channel Title", StringComparison.OrdinalIgnoreCase)
        ).Single()

    Dim toChat As TL.ChatBase =
        (Await GetChannelsByTitleAsync(client, "To Channel Title", StringComparison.OrdinalIgnoreCase)
        ).Single()

    Dim fromChatMessages As List(Of MessageData) =
      Await GetChannelMessages(client, fromChat,
                               fromTopicId:=0, fromUserId:=0,
                               onlyMediaMessages:=False,
                               ascendingMessageOrder:=True)

    Dim totalMsgCount As Integer = fromChatMessages.Count
    Dim currentMsgCount As Integer

    For Each msgData As MessageData In fromChatMessages
        Dim flags As TL.Message.Flags = MessageExtensions.GetFlags(msgData.Message)
        Dim hasUsername As Boolean = flags.HasFlag(flags.has_post_author)
        Dim username As String = If(hasUsername, msgData.PeerInfo.MainUsername, "null")

        Dim sb As New StringBuilder()
        sb.AppendLine("Forwarding message...")
        sb.AppendLine($"Message Count: #{Interlocked.Increment(currentMsgCount)} of #{totalMsgCount}")
        sb.AppendLine($"Message Date.: {DirectCast(msgData.Message, MessageBase).Date:dd/MMMM/yyyy, HH:mm:ss}")
        sb.AppendLine($"User Name/Id.: {username}/{msgData.PeerInfo.ID}")
        sb.AppendLine($"Message......: {msgData.Message.message}")

        Debug.WriteLine(sb.ToString())

        Try
            Await CopyMessageAsync(client, msgData.Message, toChat)

        Catch ex As RpcException
            If ex.Message.Equals("CHAT_FORWARDS_RESTRICTED", StringComparison.OrdinalIgnoreCase) Then
                ' Ignore?

            ElseIf ex.Message.Equals("FILE_REFERENCE_EXPIRED", StringComparison.OrdinalIgnoreCase) Then
                ' Ignore?

            ElseIf ex.Message.Equals("WEBPAGE_NOT_FOUND", StringComparison.OrdinalIgnoreCase) Then
                ' Ignore?

            ElseIf ex.Message.Equals("FLOOD_WAIT_X", StringComparison.OrdinalIgnoreCase) Then
                Debug.WriteLine("ERROR: FLOOD_WAIT_X")
                Debug.WriteLine($"Waiting {ex.X} seconds to continue with the operation...")
                Thread.Sleep(ex.X * 1000)

            Else
                Throw

            End If

        Catch ex As Exception
            Throw

        Finally
            ' 3 seconds delay between each request to avoid flooding detection (error "FLOOD_WAIT_X").
            Thread.Sleep(3000)

        End Try

    Next

End Sub</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="xaml"><div class="codeHeader"><span class="codeHeaderTitle">XAML</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="ce1d7467-f85f-4119-5e95-5f8eb6af6b56.htm">WTelegramClientHelper Class</a>
              </div>
              <div>
                <a href="43ea5ad7-8a31-87c5-e81c-65683c08bafa.htm">CopyMessageAsync Overload</a>
              </div>
              <div>
                <a href="3c996b88-ef40-be7c-fcca-9beaba87ef18.htm">DevCase.ThirdParty.WTelegramClient Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                  <ul class="menu">
                    <li>
                      <a class="quickLink">Parameters</a>
                    </li>
                    <li>
                      <a class="quickLink">Return Value</a>
                    </li>
                  </ul>
                </li>
                <li>
                  <a class="quickLink">Example</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
    <script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script>
  </body>
</html>