<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>DevPictureBox Class</title>
    <meta name="Title" content="DevPictureBox" />
    <meta name="Help.Id" content="T:DevCase.UI.Controls.DevPictureBox" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.UI.Controls" />
    <meta name="guid" content="7e25b7d8-c3c0-47d6-ef13-58396a54b601" />
    <meta name="Description" content="A extended control." />
    <meta name="tocFile" content="../toc/IDBEA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>Dev<wbr />Picture<wbr />Box Class</h1>
            <div class="summary">
 A extended <span class="noLink">PictureBox</span> control.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="9c8e6bc4-b60d-d72f-ee37-097b7a4bc656.htm">DevCase.UI.Controls</a><br /><strong>Assembly:</strong> DevCase.net48 (in DevCase.net48.dll) Version: 6.0.0.0 (6.0)<br /><strong>XMLNS for XAML:</strong> Not mapped to an xmlns.<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="noLink">ToolboxBitmapAttribute</span>(<span class="keyword">typeof</span>(<span class="noLink">PictureBox</span>), "PictureBox.bmp")]
[<span class="noLink">ClassInterfaceAttribute</span>(<span class="noLink">ClassInterfaceType</span>.AutoDispatch)]
[<span class="noLink">ComVisibleAttribute</span>(<span class="keyword">true</span>)]
[<span class="noLink">DefaultBindingPropertyAttribute</span>("Image")]
[<span class="noLink">DefaultPropertyAttribute</span>("Image")]
[<span class="noLink">DefaultEventAttribute</span>("Click")]
[<span class="noLink">DockingAttribute</span>(<span class="noLink">DockingBehavior</span>.Ask)]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">DevPictureBox</span> : <span class="noLink">PictureBox</span>, 
	<a href="40d5e5c6-bdaf-75a1-0a25-4fab6e62faff.htm">IBufferedControl</a></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="noLink">ToolboxBitmapAttribute</span>(<span class="keyword">GetType</span>(<span class="noLink">PictureBox</span>), "PictureBox.bmp")&gt;
&lt;<span class="noLink">ClassInterfaceAttribute</span>(<span class="noLink">ClassInterfaceType</span>.AutoDispatch)&gt;
&lt;<span class="noLink">ComVisibleAttribute</span>(<span class="keyword">true</span>)&gt;
&lt;<span class="noLink">DefaultBindingPropertyAttribute</span>("Image")&gt;
&lt;<span class="noLink">DefaultPropertyAttribute</span>("Image")&gt;
&lt;<span class="noLink">DefaultEventAttribute</span>("Click")&gt;
&lt;<span class="noLink">DockingAttribute</span>(<span class="noLink">DockingBehavior</span>.Ask)&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">DevPictureBox</span>
	<span class="keyword">Inherits</span> <span class="noLink">PictureBox</span>
	<span class="keyword">Implements</span> <a href="40d5e5c6-bdaf-75a1-0a25-4fab6e62faff.htm">IBufferedControl</a>

<span class="keyword">Dim</span> <span class="parameter">instance</span> <span class="keyword">As</span> <span class="identifier">DevPictureBox</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp">[<span class="noLink">ToolboxBitmapAttribute</span>(<span class="keyword">typeof</span>(<span class="noLink">PictureBox</span>), L"PictureBox.bmp")]
[<span class="noLink">ClassInterfaceAttribute</span>(<span class="noLink">ClassInterfaceType</span>::AutoDispatch)]
[<span class="noLink">ComVisibleAttribute</span>(<span class="keyword">true</span>)]
[<span class="noLink">DefaultBindingPropertyAttribute</span>(L"Image")]
[<span class="noLink">DefaultPropertyAttribute</span>(L"Image")]
[<span class="noLink">DefaultEventAttribute</span>(L"Click")]
[<span class="noLink">DockingAttribute</span>(<span class="noLink">DockingBehavior</span>::Ask)]
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">DevPictureBox</span> : <span class="keyword">public</span> <span class="noLink">PictureBox</span>, 
	<a href="40d5e5c6-bdaf-75a1-0a25-4fab6e62faff.htm">IBufferedControl</a></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="noLink">ToolboxBitmapAttribute</span>(<span class="keyword">typeof</span>(<span class="noLink">PictureBox</span>), "PictureBox.bmp")&gt;]
[&lt;<span class="noLink">ClassInterfaceAttribute</span>(<span class="noLink">ClassInterfaceType</span>.AutoDispatch)&gt;]
[&lt;<span class="noLink">ComVisibleAttribute</span>(<span class="keyword">true</span>)&gt;]
[&lt;<span class="noLink">DefaultBindingPropertyAttribute</span>("Image")&gt;]
[&lt;<span class="noLink">DefaultPropertyAttribute</span>("Image")&gt;]
[&lt;<span class="noLink">DefaultEventAttribute</span>("Click")&gt;]
[&lt;<span class="noLink">DockingAttribute</span>(<span class="noLink">DockingBehavior</span>.Ask)&gt;]
<span class="keyword">type</span> <span class="identifier">DevPictureBox</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="noLink">PictureBox</span>
        <span class="keyword">interface</span> <a href="40d5e5c6-bdaf-75a1-0a25-4fab6e62faff.htm">IBufferedControl</a>
    <span class="keyword">end</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">MarshalByRefObject</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Component</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Control</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">PictureBox</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">DevPictureBox</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="40d5e5c6-bdaf-75a1-0a25-4fab6e62faff.htm">IBufferedControl</a></dd></dl></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Constructors</h2>
            <div id="ID0YD0FASection">
              <table id="ConstructorList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="d71ca777-6a73-edbd-a084-47274a879a91.htm">DevPictureBox</a>
                  </td>
                  <td>
 Initializes a new instance of the <span class="selflink">DevPictureBox</span> class.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Properties</h2>
            <div id="ID0LF0FASection">
              <table id="PropertyList" class="table is-hoverable">
                <tr>
                  <td>
                    <span class="noLink">AccessibilityObject</span>
                  </td>
                  <td>Gets the <span class="noLink">AccessibleObject</span> assigned to the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">AccessibleDefaultActionDescription</span>
                  </td>
                  <td>Gets or sets the default action description of the control for use by accessibility client applications.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">AccessibleDescription</span>
                  </td>
                  <td>Gets or sets the description of the control used by accessibility client applications.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">AccessibleName</span>
                  </td>
                  <td>Gets or sets the name of the control used by accessibility client applications.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">AccessibleRole</span>
                  </td>
                  <td>Gets or sets the accessible role of the control<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Anchor</span>
                  </td>
                  <td>Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">AutoScrollOffset</span>
                  </td>
                  <td>Gets or sets where this control is scrolled to in <span class="noLink">ScrollControlIntoView(Control)</span>.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="1af47fc7-fc68-edfc-8be1-dccfde9eef25.htm">BackColor</a>
                  </td>
                  <td>
 Gets or sets the background color for the control.
 <br />(Overrides <span class="noLink">Control<span id="LSTEE65DE78_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>BackColor</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BackgroundImage</span>
                  </td>
                  <td>Gets or sets the background image displayed in the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BackgroundImageLayout</span>
                  </td>
                  <td>Gets or sets the background image layout as defined in the <span class="noLink">ImageLayout</span> enumeration.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BindingContext</span>
                  </td>
                  <td>Gets or sets the <span class="noLink">BindingContext</span> for the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BorderStyle</span>
                  </td>
                  <td>Indicates the border style for the control.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Bottom</span>
                  </td>
                  <td>Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Bounds</span>
                  </td>
                  <td>Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CanFocus</span>
                  </td>
                  <td>Gets a value indicating whether the control can receive focus.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CanSelect</span>
                  </td>
                  <td>Gets a value indicating whether the control can be selected.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Capture</span>
                  </td>
                  <td>Gets or sets a value indicating whether the control has captured the mouse.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CausesValidation</span>
                  </td>
                  <td>Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ClientRectangle</span>
                  </td>
                  <td>Gets the rectangle that represents the client area of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ClientSize</span>
                  </td>
                  <td>Gets or sets the height and width of the client area of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CompanyName</span>
                  </td>
                  <td>Gets the name of the company or creator of the application containing the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Container</span>
                  </td>
                  <td>Gets the <span class="noLink">IContainer</span> that contains the <span class="noLink">Component</span>.<br />(Inherited from <span class="noLink">Component</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ContainsFocus</span>
                  </td>
                  <td>Gets a value indicating whether the control, or one of its child controls, currently has the input focus.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ContextMenu</span>
                  </td>
                  <td>Gets or sets the shortcut menu associated with the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ContextMenuStrip</span>
                  </td>
                  <td>Gets or sets the <span class="noLink">ContextMenuStrip</span> associated with this control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Controls</span>
                  </td>
                  <td>Gets the collection of controls contained within the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Created</span>
                  </td>
                  <td>Gets a value indicating whether the control has been created.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DataBindings</span>
                  </td>
                  <td>Gets the data bindings for the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DeviceDpi</span>
                  </td>
                  <td>Gets the DPI value for the display device where the control is currently being displayed.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DisplayRectangle</span>
                  </td>
                  <td>Gets the rectangle that represents the display area of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Disposing</span>
                  </td>
                  <td>Gets a value indicating whether the base <span class="noLink">Control</span> class is in the process of disposing.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Dock</span>
                  </td>
                  <td>Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="f4175b85-9655-1abe-e998-133deaeb794d.htm">DoubleBuffered</a>
                  </td>
                  <td>
 Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer 
 to reduce or prevent flicker.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Enabled</span>
                  </td>
                  <td>Gets or sets a value indicating whether the control can respond to user interaction.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ErrorImage</span>
                  </td>
                  <td>Gets or sets the image to display when an error occurs during the image-loading process or if the image load is canceled.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Focused</span>
                  </td>
                  <td>Gets a value indicating whether the control has input focus.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Handle</span>
                  </td>
                  <td>Gets the window handle that the control is bound to.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">HasChildren</span>
                  </td>
                  <td>Gets a value indicating whether the control contains one or more child controls.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Height</span>
                  </td>
                  <td>Gets or sets the height of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="cb053bea-8b7c-0b88-4b36-41e0e99aaec6.htm">Image</a>
                  </td>
                  <td>
 Gets the image displayed in the control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d44ba11f-3119-00a6-1915-7b4b96187403.htm">ImageDisplaySize</a>
                  </td>
                  <td>
 Gets the size of the image as it is shown in the control.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ImageLocation</span>
                  </td>
                  <td>Gets or sets the path or URL for the image to display in the <span class="noLink">PictureBox</span>.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ImeMode</span>
                  </td>
                  <td>Gets or sets the Input Method Editor (IME) mode of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">InitialImage</span>
                  </td>
                  <td>Gets or sets the image displayed in the <span class="noLink">PictureBox</span> control when the main image is loading.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="963ccad2-8cf9-a027-445f-5e15663b97b1.htm">InterpolationMode</a>
                  </td>
                  <td>
 Gets the interpolation mode that determine the image quality.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9394644a-8620-a724-fdb1-7a1864c118ae.htm">InvertDragXY</a>
                  </td>
                  <td>
 Gets or sets a value that determine whether the direction when dragging the image 
 with middle mouse button should be inverted.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">InvokeRequired</span>
                  </td>
                  <td>Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">IsAccessible</span>
                  </td>
                  <td>Gets or sets a value indicating whether the control is visible to accessibility applications.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">IsDisposed</span>
                  </td>
                  <td>Gets a value indicating whether the control has been disposed of.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">IsHandleCreated</span>
                  </td>
                  <td>Gets a value indicating whether the control has a handle associated with it.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">IsMirrored</span>
                  </td>
                  <td>Gets a value indicating whether the control is mirrored.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LayoutEngine</span>
                  </td>
                  <td>Gets a cached instance of the control's layout engine.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Left</span>
                  </td>
                  <td>Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Location</span>
                  </td>
                  <td>Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Margin</span>
                  </td>
                  <td>Gets or sets the space between controls.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MaximumSize</span>
                  </td>
                  <td>Gets or sets the size that is the upper limit that <span class="noLink">GetPreferredSize(Size)</span> can specify.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MinimumSize</span>
                  </td>
                  <td>Gets or sets the size that is the lower limit that <span class="noLink">GetPreferredSize(Size)</span> can specify.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Name</span>
                  </td>
                  <td>Gets or sets the name of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Padding</span>
                  </td>
                  <td>Gets or sets padding within the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Parent</span>
                  </td>
                  <td>Gets or sets the parent container of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">PreferredSize</span>
                  </td>
                  <td>Gets the size of a rectangular area into which the control can fit.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="9e93e933-8082-25fe-0c4f-9e7aa3d4c1ce.htm">PreventFlickering</a>
                  </td>
                  <td>
 Gets or sets a value that indicates whether the control should avoid unwanted flickering effects.
 <p />
 If <span class="keyword"><span id="LSTEE65DE78_1" data-languageSpecificText="vb=True|nu=true"></span></span>, this will avoid any flickering effect on the control, however,
 it will also have a negative impact by slowing down the responsiveness of the control about to 30% slower.
 <p />
 This negative impact doesn't affect to the performance of the application itself, 
 just to the performance of this control.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ProductName</span>
                  </td>
                  <td>Gets the product name of the assembly containing the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ProductVersion</span>
                  </td>
                  <td>Gets the version of the assembly containing the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">RecreatingHandle</span>
                  </td>
                  <td>Gets a value indicating whether the control is currently re-creating its handle.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Region</span>
                  </td>
                  <td>Gets or sets the window region associated with the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Right</span>
                  </td>
                  <td>Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="c1439f52-67f1-0bfe-0782-6ca51f083dc3.htm">SelectionColor</a>
                  </td>
                  <td>
 Gets or sets the color used to draw the selection rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d3f406de-9b72-2773-87f1-e5cd159d85a4.htm">SelectionEnabled</a>
                  </td>
                  <td>
 Gets or sets a value that determine whether the user can select a portion of the image using the mouse.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="955a2671-457c-8bd4-d2b4-3b8fee57f5eb.htm">SelectionRectangle</a>
                  </td>
                  <td>
 Gets the selection rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Site</span>
                  </td>
                  <td>Gets or sets the site of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Size</span>
                  </td>
                  <td>Gets or sets the height and width of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">SizeMode</span>
                  </td>
                  <td>Indicates how the image is displayed.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="a595278d-aeed-aea4-dbae-3f8984c05c69.htm">TabIndex</a>
                  </td>
                  <td>
 Gets or sets a value that indicates the index in the TAB order that this control will occupy.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="da82b937-dc74-6c58-4209-bbb19beef821.htm">TabStop</a>
                  </td>
                  <td>
 Gets or sets a value that indicates whether the user can give the focus to this control by using the TAB key.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Tag</span>
                  </td>
                  <td>Gets or sets the object that contains data about the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Top</span>
                  </td>
                  <td>Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">TopLevelControl</span>
                  </td>
                  <td>Gets the parent control that is not parented by another Windows Forms control. Typically, this is the outermost <span class="noLink">Form</span> that the control is contained in.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">UseWaitCursor</span>
                  </td>
                  <td>Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Visible</span>
                  </td>
                  <td>Gets or sets a value indicating whether the control and all its child controls are displayed.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">WaitOnLoad</span>
                  </td>
                  <td>Gets or sets a value indicating whether an image is loaded synchronously.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Width</span>
                  </td>
                  <td>Gets or sets the width of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="27210982-fc43-6ec8-c09e-82617b3a90c4.htm">Zoom</a>
                  </td>
                  <td>
 Gets or sets the zoom level of the image shown by the control.
 <p />
 0.10 = 10% | 0.50 = 50% | 1.0 = 100%
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Methods</h2>
            <div id="ID0ZD0FASection">
              <table id="MethodList" class="table is-hoverable">
                <tr>
                  <td>
                    <span class="noLink">BeginInvoke(Delegate)</span>
                  </td>
                  <td>Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BeginInvoke(Delegate, <span id="LSTEE65DE78_2" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEE65DE78_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</span>
                  </td>
                  <td>Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BringToFront</span>
                  </td>
                  <td>Brings the control to the front of the z-order.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CancelAsync</span>
                  </td>
                  <td>Cancels an asynchronous image load.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="77d6430e-aa4b-de17-33bf-fe4ac15cd068.htm">ClearSelection</a>
                  </td>
                  <td>
 Clears the selection rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Contains</span>
                  </td>
                  <td>Retrieves a value indicating whether the specified control is a child of the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CreateControl</span>
                  </td>
                  <td>Forces the creation of the visible control, including the creation of the handle and any visible child controls.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CreateGraphics</span>
                  </td>
                  <td>Creates the <span class="noLink">Graphics</span> for the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CreateObjRef</span>
                  </td>
                  <td>Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.<br />(Inherited from <span class="noLink">MarshalByRefObject</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Dispose</span>
                  </td>
                  <td>Releases all resources used by the <span class="noLink">Component</span>.<br />(Inherited from <span class="noLink">Component</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DoDragDrop</span>
                  </td>
                  <td>Begins a drag-and-drop operation.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DrawToBitmap</span>
                  </td>
                  <td>Supports rendering to the specified bitmap.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">EndInvoke</span>
                  </td>
                  <td>Retrieves the return value of the asynchronous operation represented by the <span class="noLink">IAsyncResult</span> passed.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Equals</span>
                  </td>
                  <td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">FindForm</span>
                  </td>
                  <td>Retrieves the form that the control is on.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Focus</span>
                  </td>
                  <td>Sets input focus to the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetChildAtPoint(Point)</span>
                  </td>
                  <td>Retrieves the child control that is located at the specified coordinates.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetChildAtPoint(Point, GetChildAtPointSkip)</span>
                  </td>
                  <td>Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetContainerControl</span>
                  </td>
                  <td>Returns the next <span class="noLink">ContainerControl</span> up the control's chain of parent controls.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetHashCode</span>
                  </td>
                  <td>Serves as the default hash function.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetLifetimeService</span>
                  </td>
                  <td>Retrieves the current lifetime service object that controls the lifetime policy for this instance.<br />(Inherited from <span class="noLink">MarshalByRefObject</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetNextControl</span>
                  </td>
                  <td>Retrieves the next control forward or back in the tab order of child controls.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetPreferredSize</span>
                  </td>
                  <td>Retrieves the size of a rectangular area into which a control can be fitted.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetType</span>
                  </td>
                  <td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Hide</span>
                  </td>
                  <td>Conceals the control from the user.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">InitializeLifetimeService</span>
                  </td>
                  <td>Obtains a lifetime service object to control the lifetime policy for this instance.<br />(Inherited from <span class="noLink">MarshalByRefObject</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Invalidate<span id="LSTEE65DE78_4" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>
                  </td>
                  <td>Invalidates the entire surface of the control and causes the control to be redrawn.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Invalidate(Boolean)</span>
                  </td>
                  <td>Invalidates a specific region of the control and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Invalidate(Rectangle)</span>
                  </td>
                  <td>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Invalidate(Region)</span>
                  </td>
                  <td>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Invalidate(Rectangle, Boolean)</span>
                  </td>
                  <td>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Invalidate(Region, Boolean)</span>
                  </td>
                  <td>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Invoke(Delegate)</span>
                  </td>
                  <td>Executes the specified delegate on the thread that owns the control's underlying window handle.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Invoke(Delegate, <span id="LSTEE65DE78_5" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEE65DE78_6" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</span>
                  </td>
                  <td>Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Load<span id="LSTEE65DE78_7" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>
                  </td>
                  <td>Displays the image specified by the <span class="noLink">ImageLocation</span> property of the <span class="noLink">PictureBox</span>.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Load(String)</span>
                  </td>
                  <td>Sets the <span class="noLink">ImageLocation</span> to the specified URL and displays the image indicated.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LoadAsync<span id="LSTEE65DE78_8" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>
                  </td>
                  <td>Loads the image asynchronously.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LoadAsync(String)</span>
                  </td>
                  <td>Loads the image at the specified location, asynchronously.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LogicalToDeviceUnits(Int32)</span>
                  </td>
                  <td>Converts a Logical DPI value to its equivalent DeviceUnit DPI value.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LogicalToDeviceUnits(Size)</span>
                  </td>
                  <td>Transforms a size from logical to device units by scaling it for the current DPI and rounding down to the nearest integer value for width and height.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="508eac0e-7b4a-8d38-1421-9aa832f47abf.htm">PerformClick</a>
                  </td>
                  <td>
 Generates a <span class="noLink">Click</span> event for this control.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">PerformLayout<span id="LSTEE65DE78_9" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>
                  </td>
                  <td>Forces the control to apply layout logic to all its child controls.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">PerformLayout(Control, String)</span>
                  </td>
                  <td>Forces the control to apply layout logic to all its child controls.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">PointToClient</span>
                  </td>
                  <td>Computes the location of the specified screen point into client coordinates.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">PointToScreen</span>
                  </td>
                  <td>Computes the location of the specified client point into screen coordinates.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">PreProcessControlMessage</span>
                  </td>
                  <td>Preprocesses keyboard or input messages within the message loop before they are dispatched.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">PreProcessMessage</span>
                  </td>
                  <td>Preprocesses keyboard or input messages within the message loop before they are dispatched.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">RectangleToClient</span>
                  </td>
                  <td>Computes the size and location of the specified screen rectangle in client coordinates.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">RectangleToScreen</span>
                  </td>
                  <td>Computes the size and location of the specified client rectangle in screen coordinates.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Refresh</span>
                  </td>
                  <td>Forces the control to invalidate its client area and immediately redraw itself and any child controls.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ResetText</span>
                  </td>
                  <td>Resets the <span class="noLink">Text</span> property to its default value (<span class="noLink">Empty</span>).<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ResumeLayout<span id="LSTEE65DE78_10" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>
                  </td>
                  <td>Resumes usual layout logic.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ResumeLayout(Boolean)</span>
                  </td>
                  <td>Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Scale</span>
                  </td>
                  <td>Scales the control and all child controls by the specified scaling factor.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ScaleBitmapLogicalToDevice</span>
                  </td>
                  <td>Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Select</span>
                  </td>
                  <td>Activates the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">SelectNextControl</span>
                  </td>
                  <td>Activates the next control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">SendToBack</span>
                  </td>
                  <td>Sends the control to the back of the z-order.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">SetBounds(Int32, Int32, Int32, Int32)</span>
                  </td>
                  <td>Sets the bounds of the control to the specified location and size.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)</span>
                  </td>
                  <td>Sets the specified bounds of the control to the specified location and size.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Show</span>
                  </td>
                  <td>Displays the control to the user.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">SuspendLayout</span>
                  </td>
                  <td>Temporarily suspends the layout logic for the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ToString</span>
                  </td>
                  <td>Returns a string that represents the current <span class="noLink">PictureBox</span> control.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Update</span>
                  </td>
                  <td>Causes the control to redraw the invalidated regions within its client area.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Events</h2>
            <div id="ID0LB0FASection">
              <table id="EventList" class="table is-hoverable">
                <tr>
                  <td>
                    <span class="noLink">BackColorChanged</span>
                  </td>
                  <td>Occurs when the value of the <span class="noLink">BackColor</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BackgroundImageChanged</span>
                  </td>
                  <td>Occurs when the value of the <span class="noLink">BackgroundImage</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BackgroundImageLayoutChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">BackgroundImageLayout</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BindingContextChanged</span>
                  </td>
                  <td>Occurs when the value of the <span class="noLink">BindingContext</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CausesValidationChanged</span>
                  </td>
                  <td>Occurs when the value of the <span class="noLink">CausesValidation</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ChangeUICues</span>
                  </td>
                  <td>Occurs when the focus or keyboard user interface (UI) cues change.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Click</span>
                  </td>
                  <td>Occurs when the control is clicked.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ClientSizeChanged</span>
                  </td>
                  <td>Occurs when the value of the <span class="noLink">ClientSize</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ContextMenuChanged</span>
                  </td>
                  <td>Occurs when the value of the <span class="noLink">ContextMenu</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ContextMenuStripChanged</span>
                  </td>
                  <td>Occurs when the value of the <span class="noLink">ContextMenuStrip</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ControlAdded</span>
                  </td>
                  <td>Occurs when a new control is added to the <span class="noLink">Control<span id="LSTEE65DE78_11" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ControlCollection</span>.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ControlRemoved</span>
                  </td>
                  <td>Occurs when a control is removed from the <span class="noLink">Control<span id="LSTEE65DE78_12" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ControlCollection</span>.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CursorChanged</span>
                  </td>
                  <td>Occurs when the value of the <span class="noLink">Cursor</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Disposed</span>
                  </td>
                  <td>Occurs when the component is disposed by a call to the <span class="noLink">Dispose<span id="LSTEE65DE78_13" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span> method.<br />(Inherited from <span class="noLink">Component</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DockChanged</span>
                  </td>
                  <td>Occurs when the value of the <span class="noLink">Dock</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DoubleClick</span>
                  </td>
                  <td>Occurs when the control is double-clicked.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DpiChangedAfterParent</span>
                  </td>
                  <td>Occurs when the DPI setting for a control is changed programmatically after the DPI of its parent control or form has changed.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DpiChangedBeforeParent</span>
                  </td>
                  <td>Occurs when the DPI setting for a control is changed programmatically before a DPI change event for its parent control or form has occurred.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DragDrop</span>
                  </td>
                  <td>Occurs when a drag-and-drop operation is completed.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DragEnter</span>
                  </td>
                  <td>Occurs when an object is dragged into the control's bounds.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DragLeave</span>
                  </td>
                  <td>Occurs when an object is dragged out of the control's bounds.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">DragOver</span>
                  </td>
                  <td>Occurs when an object is dragged over the control's bounds.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">EnabledChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">Enabled</span> property value has changed.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Enter</span>
                  </td>
                  <td>Occurs when the control is entered.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">FontChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">Font</span> property value changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ForeColorChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">ForeColor</span> property value changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GiveFeedback</span>
                  </td>
                  <td>Occurs during a drag operation.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GotFocus</span>
                  </td>
                  <td>Occurs when the control receives focus.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">HandleCreated</span>
                  </td>
                  <td>Occurs when a handle is created for the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">HandleDestroyed</span>
                  </td>
                  <td>Occurs when the control's handle is in the process of being destroyed.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">HelpRequested</span>
                  </td>
                  <td>Occurs when the user requests help for a control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="c65b961e-f64e-aaf3-c6dc-6b53f737d758.htm">ImageChanged</a>
                  </td>
                  <td>
 Occurs when the value of the <a href="cb053bea-8b7c-0b88-4b36-41e0e99aaec6.htm">Image</a> property changes.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ImeModeChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">ImeMode</span> property has changed.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Invalidated</span>
                  </td>
                  <td>Occurs when a control's display requires redrawing.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">KeyDown</span>
                  </td>
                  <td>Occurs when a key is pressed while the control has focus.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">KeyPress</span>
                  </td>
                  <td>Occurs when a character. space or backspace key is pressed while the control has focus.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">KeyUp</span>
                  </td>
                  <td>Occurs when a key is released while the control has focus.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Layout</span>
                  </td>
                  <td>Occurs when a control should reposition its child controls.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Leave</span>
                  </td>
                  <td>Occurs when the input focus leaves the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LoadCompleted</span>
                  </td>
                  <td>Occurs when the asynchronous image-load operation is completed, been canceled, or raised an exception.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LoadProgressChanged</span>
                  </td>
                  <td>Occurs when the progress of an asynchronous image-loading operation has changed.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LocationChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">Location</span> property value has changed.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LostFocus</span>
                  </td>
                  <td>Occurs when the control loses focus.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MarginChanged</span>
                  </td>
                  <td>Occurs when the control's margin changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MouseCaptureChanged</span>
                  </td>
                  <td>Occurs when the control loses mouse capture.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MouseClick</span>
                  </td>
                  <td>Occurs when the control is clicked by the mouse.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MouseDoubleClick</span>
                  </td>
                  <td>Occurs when the control is double clicked by the mouse.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MouseDown</span>
                  </td>
                  <td>Occurs when the mouse pointer is over the control and a mouse button is pressed.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MouseEnter</span>
                  </td>
                  <td>Occurs when the mouse pointer enters the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MouseHover</span>
                  </td>
                  <td>Occurs when the mouse pointer rests on the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MouseLeave</span>
                  </td>
                  <td>Occurs when the mouse pointer leaves the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MouseMove</span>
                  </td>
                  <td>Occurs when the mouse pointer is moved over the control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MouseUp</span>
                  </td>
                  <td>Occurs when the mouse pointer is over the control and a mouse button is released.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">MouseWheel</span>
                  </td>
                  <td>Occurs when the mouse wheel moves while the control has focus.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Move</span>
                  </td>
                  <td>Occurs when the control is moved.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">PaddingChanged</span>
                  </td>
                  <td>Occurs when the control's padding changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Paint</span>
                  </td>
                  <td>Occurs when the control is redrawn.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ParentChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">Parent</span> property value changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">PreviewKeyDown</span>
                  </td>
                  <td>Occurs before the <span class="noLink">KeyDown</span> event when a key is pressed while focus is on this control.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">QueryAccessibilityHelp</span>
                  </td>
                  <td>Occurs when <span class="noLink">AccessibleObject</span> is providing help to accessibility applications.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">QueryContinueDrag</span>
                  </td>
                  <td>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">RegionChanged</span>
                  </td>
                  <td>Occurs when the value of the <span class="noLink">Region</span> property changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Resize</span>
                  </td>
                  <td>Occurs when the control is resized.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">RightToLeftChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">RightToLeft</span> property value changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="1db2820a-aed1-454d-5661-073856e862ac.htm">Scroll</a>
                  </td>
                  <td>
 Occurs when the user or code scrolls through the client area of the control.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d9ea757a-9cd3-3f36-c9ae-c6c18c1d7ece.htm">SelectionClicked</a>
                  </td>
                  <td>
 Occurs when the user clicks inside the selection rectangle.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">SizeChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">Size</span> property value changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">SizeModeChanged</span>
                  </td>
                  <td>Occurs when <span class="noLink">SizeMode</span> changes.<br />(Inherited from <span class="noLink">PictureBox</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">StyleChanged</span>
                  </td>
                  <td>Occurs when the control style changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">SystemColorsChanged</span>
                  </td>
                  <td>Occurs when the system colors change.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">TabIndexChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">TabIndex</span> property value changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">TabStopChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">TabStop</span> property value changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">TextChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">Text</span> property value changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Validated</span>
                  </td>
                  <td>Occurs when the control is finished validating.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Validating</span>
                  </td>
                  <td>Occurs when the control is validating.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">VisibleChanged</span>
                  </td>
                  <td>Occurs when the <span class="noLink">Visible</span> property value changes.<br />(Inherited from <span class="noLink">Control</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="cfc2af1f-c427-3d96-680f-4df673c27bec.htm">ZoomChanged</a>
                  </td>
                  <td>
 Occurs when the value of the <a href="27210982-fc43-6ec8-c09e-82617b3a90c4.htm">Zoom</a> property changes.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Extension Methods</h2>
            <div id="IDAFASection">
              <table id="ExtensionList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="4fc2bde6-7e68-b4f7-8406-9f998fc4201d.htm">CanConvertTo</a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="d438a76e-0b10-2e5a-19bb-33849b67af0e.htm">CanConvertTo<span id="LSTEE65DE78_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTEE65DE78_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="be81447a-a248-2281-1117-bfc740d6232c.htm">ConvertTo<span id="LSTEE65DE78_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTEE65DE78_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, an exception is thrown.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="8021acba-836d-7ab5-0827-131cef22840b.htm">ConvertTo<span id="LSTEE65DE78_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTEE65DE78_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, returns the specified default value.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="a1679572-f0be-c6e3-ff84-a8e97f5cc639.htm">ForEachControl</a>
                  </td>
                  <td>
 Iterate through all the controls in the source <span class="noLink">Control</span>
 and performs the specified action on each one.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="af0d65cd-d860-d72e-724e-31747d1bfa8b.htm">ForEachControl<span id="LSTEE65DE78_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTEE65DE78_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Iterate through all the controls of the specified type in the source <span class="noLink">Control</span>
 and performs the specified action on each one.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="a91917f6-38e9-9888-a84d-3a2650ca3820.htm">GetBoundsRelativeToForm</a>
                  </td>
                  <td>
 Gets the bounds of the source <span class="noLink">Control</span> relatively to its parent <span class="noLink">Form</span>.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="bfa51ed4-416e-f477-2b20-aae4f5070efb.htm">GetControlStyle</a>
                  </td>
                  <td>
 Gets the value of the specified <span class="noLink">ControlStyles</span> bit for the source control.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="ee45b7b9-570a-1002-19ce-4fd01fcac93e.htm">GetEvent</a>
                  </td>
                  <td>
 Gets a <span class="noLink">EventInfo</span> that match the specified event name 
 declared in the source <span class="noLink">Component</span>.
 <br />(Defined by <a href="b33c41f9-7e15-1c79-5f2b-556e59343db9.htm">ComponentExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="984fa355-abd3-6182-f894-63d94b08442e.htm">GetEventHandlers</a>
                  </td>
                  <td>
 Gets all the delegates associated to the specified event raised by the source <span class="noLink">Control</span>.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="82ee5031-2122-f502-0c4a-a19099900909.htm">GetEventHandlers</a>
                  </td>
                  <td>
 Gets all the delegates associated to the specified event raised by the source <span class="noLink">Component</span>.
 <br />(Defined by <a href="b33c41f9-7e15-1c79-5f2b-556e59343db9.htm">ComponentExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="51cd3fbb-9461-556f-9c13-7312aad695d4.htm">GetEvents</a>
                  </td>
                  <td>
 Gets all the events declared in the source <span class="noLink">Component</span>.
 <br />(Defined by <a href="b33c41f9-7e15-1c79-5f2b-556e59343db9.htm">ComponentExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="528f3312-2f15-0d8b-c8a3-9931c08040de.htm">GetNextControl<span id="LSTEE65DE78_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTEE65DE78_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Retrieves the next control of the specified type forward or back in the tab order of child controls.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="d1c3923c-6fe0-f17e-602e-ee286502c634.htm">GetNextControl<span id="LSTEE65DE78_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTEE65DE78_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Retrieves the next control of the specified type forward or back in the tab order of child controls.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="753a4be0-4c81-ab75-9b9b-5bfb72f59f24.htm">GetSubscribedEvents</a>
                  </td>
                  <td>
 Gets a list of events declared in the source <span class="noLink">Component</span>  
 that are subscribed to a event-handler.
 <br />(Defined by <a href="b33c41f9-7e15-1c79-5f2b-556e59343db9.htm">ComponentExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="0c35c8fd-f38b-163c-0a15-fc9e68f0ddd4.htm">InvokeUITypeEditor<span id="LSTEE65DE78_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTEE65DE78_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Invokes the default <span class="noLink">UITypeEditor</span> to edit the specified property.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="b1cd0569-892a-6d24-3442-93a85696ce0f.htm">InvokeUITypeEditor<span id="LSTEE65DE78_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTEE65DE78_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Invokes the default <span class="noLink">UITypeEditor</span> to edit the specified property.
 <br />(Defined by <a href="b33c41f9-7e15-1c79-5f2b-556e59343db9.htm">ComponentExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="635a3c67-6d64-2097-4596-3c7ed1a2ec2f.htm">InvokeUITypeEditor<span id="LSTEE65DE78_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTEE65DE78_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Invokes the default <span class="noLink">UITypeEditor</span> to edit the specified property.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="7ac45a7e-955f-03ba-1f3e-364f29c2b719.htm">InvokeUITypeEditor<span id="LSTEE65DE78_32" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTEE65DE78_33" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Invokes the default <span class="noLink">UITypeEditor</span> to edit the specified property.
 <br />(Defined by <a href="b33c41f9-7e15-1c79-5f2b-556e59343db9.htm">ComponentExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="243adf7a-d37a-942f-2711-4ddcb9edbaca.htm">InvokeWhenHandleValid</a>
                  </td>
                  <td>
 Performs an action on the specified <span class="noLink">Control</span> after its handle has been created
 (that is, when <span class="noLink">HandleCreated</span> event is fired).
 <p />
 If the handle has already been created, the action is executed immediately.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="90e0095b-fa87-d162-71b4-0b19729ac296.htm">IsDisposable</a>
                  </td>
                  <td>
 Determines whether the specified object is a disposable type 
 (i.e., it implements <span class="noLink">IDisposable</span> interface).
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="3fa07d3d-ce19-a3a8-1cc4-40948f963e73.htm">IsInDesignMode</a>
                  </td>
                  <td>
 Determines whether the source <span class="noLink">Control</span> is in design mode.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="62e7e8d8-5cd8-050b-3ce2-ce3cc911ef1f.htm">IsInRuntimeMode</a>
                  </td>
                  <td>
 Determines whether the source <span class="noLink">Control</span> is in runtime mode.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="eb3b6dd9-5601-bb62-5582-5df624d9908a.htm">ResumeDrawing</a>
                  </td>
                  <td>
 Allow the source <span class="noLink">Control</span> to be redrawn.
 <p />
 By calling this method, it will allow painting events to be fired on the source <span class="noLink">Control</span>.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="aafd1fe6-db4f-7551-8789-61821d8e1d18.htm">ResumeDrawing</a>
                  </td>
                  <td>
 Allow the source <span class="noLink">Control</span> to be redrawn.
 <p />
 By calling this method, it will allow painting events to be fired on the source <span class="noLink">Control</span>.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="53c8d569-61c5-219e-a151-f916e2829fa1.htm">SafeBeginInvoke</a>
                  </td>
                  <td>
 Safely executes the specified <span class="noLink">Action</span> delegate asynchronously 
 on the thread that owns the source control's underlying window handle.
 <p />
 This method automatically determines if the caller must call 
 <span class="noLink">BeginInvoke(Delegate)</span> method when making 
 method calls to the source control on a different thread than the 
 one the control was created on.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="8e0031d7-3a53-e750-7939-1f59ec1a289f.htm">SafeBeginInvoke</a>
                  </td>
                  <td>
 Safely executes the specified <span class="noLink">Delegate</span> delegate asynchronously 
 on the thread that owns the source control's underlying window handle.
 <p />
 This method automatically determines if the caller must call 
 <span class="noLink">BeginInvoke(Delegate)</span> method when making 
 method calls to the source control on a different thread than the 
 one the control was created on.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="fbd10783-3a2b-7c5e-1445-eb586f6447eb.htm">SafeBeginInvoke</a>
                  </td>
                  <td>
 Safely executes the specified <span class="noLink">Delegate</span> delegate asynchronously 
 on the thread that owns the source control's underlying window handle.
 <p />
 This method automatically determines if the caller must call 
 <span class="noLink">BeginInvoke(Delegate, <span id="LSTEE65DE78_34" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEE65DE78_35" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</span> method when making 
 method calls to the source control on a different thread than the 
 one the control was created on.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="338f4389-293f-91a1-476f-9d9a9c6c4feb.htm">SafeInvoke</a>
                  </td>
                  <td>
 Safely executes the specified <span class="noLink">Action</span> delegate on the thread that 
 owns the source control's underlying window handle.
 <p />
 This method automatically determines if the caller must call 
 <span class="noLink">Invoke(Delegate)</span> method when making 
 method calls to the source control on a different thread than the 
 one the control was created on.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="b9e31c80-8e3b-0ea6-a42b-e31b9d0651ad.htm">SafeInvoke</a>
                  </td>
                  <td>
 Safely executes the specified <span class="noLink">Delegate</span> on the thread that 
 owns the source control's underlying window handle.
 <p />
 This method automatically determines if the caller must call 
 <span class="noLink">Invoke(Delegate)</span> method when making 
 method calls to the source control on a different thread than the 
 one the control was created on.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="37e132c5-a279-c001-7624-9c001763d07b.htm">SafeInvoke</a>
                  </td>
                  <td>
 Safely executes the specified <span class="noLink">Delegate</span> delegate on the thread that 
 owns the source control's underlying window handle.
 <p />
 This method automatically determines if the caller must call 
 <span class="noLink">Invoke(Delegate, <span id="LSTEE65DE78_36" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTEE65DE78_37" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</span> method when making 
 method calls to the source control on a different thread than the 
 one the control was created on.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="ce81fc89-c32d-c952-19c8-26d2d5238132.htm">SendKey</a>
                  </td>
                  <td>
 Sends a keystroke to the specified control.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="fb1278ba-d83b-6de6-a359-c53f9973046a.htm">SendKey</a>
                  </td>
                  <td>
 Sends a keystroke to the specified control.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="83c3ba53-b85e-9d00-edd0-44d09bedd134.htm">SendMouseButton</a>
                  </td>
                  <td>
 Sends a mouse button click to the specified control.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="f8138847-9b96-7c25-0426-cd81d6a0022a.htm">SendMouseButton</a>
                  </td>
                  <td>
 Sends a mouse button click to the specified coordinates on the specified control.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="400affe2-15d5-5d8a-eca5-27d76151dde2.htm">SetControlStyle</a>
                  </td>
                  <td>
 Sets a specified <span class="noLink">ControlStyles</span> flag to
 either <span class="keyword"><span id="LSTEE65DE78_38" data-languageSpecificText="vb=True|nu=true"></span></span> or <span class="keyword"><span id="LSTEE65DE78_39" data-languageSpecificText="vb=False|nu=false"></span></span> for the source control.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="e958ae42-c0b2-0f56-4ed2-7725b45cb979.htm">SetDoubleBuffer</a>
                  </td>
                  <td>
 Sets the value of <span class="noLink">DoubleBuffered</span> property
 for the source <span class="noLink">Control</span>.
 <p />
 You should call this method to set double buffer for a control,
 instead of calling <a href="400affe2-15d5-5d8a-eca5-27d76151dde2.htm">SetControlStyle(Control, ControlStyles, Boolean)</a> method
 with <span class="noLink">OptimizedDoubleBuffer</span> flag.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="1676045b-da4b-c3da-1f8e-b0515ccff4a7.htm">SetVisualTheme</a>
                  </td>
                  <td>
 Changes the color appearance of the source <span class="noLink">Control</span> using the specified theme.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="b6518cbc-eac7-374e-f53c-70aa031bf15b.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="a447b4b7-8d2e-a234-f910-4749678e12f8.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="fb2dbc3b-1a44-b4f0-bede-85f4cedafcca.htm">SuspendDrawing</a>
                  </td>
                  <td>
 Prevents the source <span class="noLink">Control</span> from being redrawn.
 <p />
 By calling this method, it will disallow painting events from firing on the source <span class="noLink">Control</span>.
 <br />(Defined by <a href="54908a51-0e30-6d79-bdd6-35379f36eacf.htm">ControlExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="4ed5be38-075c-b944-23d9-9298e43d9f2a.htm">ThrowIfNull<span id="LSTEE65DE78_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TException<span id="LSTEE65DE78_41" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Throws the specified exception if the source object is null.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="3d9c10d0-037a-bca5-21d7-becee718a64b.htm">TryGetEvent</a>
                  </td>
                  <td>
 Tries to get a <span class="noLink">EventInfo</span> that match the specified event name 
 declared in the source <span class="noLink">Component</span>.
 <br />(Defined by <a href="b33c41f9-7e15-1c79-5f2b-556e59343db9.htm">ComponentExtensions</a>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="9c8e6bc4-b60d-d72f-ee37-097b7a4bc656.htm">DevCase.UI.Controls Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                </li>
                <li>
                  <a class="quickLink">Constructors</a>
                </li>
                <li>
                  <a class="quickLink">Properties</a>
                </li>
                <li>
                  <a class="quickLink">Methods</a>
                </li>
                <li>
                  <a class="quickLink">Events</a>
                </li>
                <li>
                  <a class="quickLink">Extension Methods</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
    <script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script>
  </body>
</html>