<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>StorageModeFlags Enumeration</title>
    <meta name="Title" content="StorageModeFlags" />
    <meta name="Help.Id" content="T:DevCase.Win32.Enums.StorageModeFlags" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Win32.Enums" />
    <meta name="guid" content="81d81f4d-59bc-1311-2560-ef169f9e8369" />
    <meta name="Description" content="The STGM (Storage Mode) constants are flags that indicate conditions for creating and deleting the object and access modes for the object." />
    <meta name="tocFile" content="../toc/IDDFA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>Storage<wbr />Mode<wbr />Flags Enumeration</h1>
            <div class="summary">
 The STGM (Storage Mode) constants are flags that indicate conditions for 
 creating and deleting the object and access modes for the object. 
 <p />
 The STGM (Storage Mode) constants are included in the IStorage, IStream, 
 and IPropertySetStorage interfaces and in the StgCreateDocfile, StgCreateStorageEx, 
 StgCreateDocfileOnILockBytes, StgOpenStorage, and StgOpenStorageEx functions.
 <p />
 These elements are often combined using an OR operator. 
 They are interpreted in groups as listed in the following table. 
 It is not valid to use more than one element from a single group.
 <p />
 Use a flag from the creation group when creating an object, 
 such as with StgCreateStorageEx or IStorage::CreateStream.
 <p />
 You can combine these flags, but you can only choose one flag from each group of related flags. 
 Typically one flag from each of the access and sharing groups must be specified for all 
 functions and methods which use these constants. Flags from other groups are optional.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="bc387bbf-c905-2558-9de0-4a5ffd59a6a0.htm">DevCase.Win32.Enums</a><br /><strong>Assembly:</strong> DevCase.net48 (in DevCase.net48.dll) Version: 6.0.0.0 (6.0)<br /><strong>XMLNS for XAML:</strong> Not mapped to an xmlns.<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="noLink">FlagsAttribute</span>]
<span class="keyword">public</span> <span class="keyword">enum</span> <span class="identifier">StorageModeFlags</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="noLink">FlagsAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Enumeration</span> <span class="identifier">StorageModeFlags</span>

<span class="keyword">Dim</span> <span class="parameter">instance</span> <span class="keyword">As</span> <span class="identifier">StorageModeFlags</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp">[<span class="noLink">FlagsAttribute</span>]
<span class="keyword">public</span> <span class="keyword">enum class</span> <span class="identifier">StorageModeFlags</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="noLink">FlagsAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">StorageModeFlags</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Remarks</h2>
            <div id="IDBCSection">
              <a href="https://learn.microsoft.com/en-us/windows/win32/stg/stgm-constants" target="_blank" rel="noopener noreferrer">https://learn.microsoft.com/en-us/windows/win32/stg/stgm-constants</a>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Members</h2>
            <div id="IDADASection">
              <table id="enumMemberList" class="table is-hoverable">
                <tr>
                  <td>Access_Read</td>
                  <td>0</td>
                  <td>
 Indicates that the object is read-only, meaning that modifications cannot be made. 
 <p />
 For example, if a stream object is opened with <span class="selflink">Access_Read</span>, 
 the ISequentialStream:Read method may be called, but the ISequentialStream:Write method may not. 
 <p />
 Similarly, if a storage object opened with <span class="selflink">Access_Read</span>, 
 the IStorage:OpenStream And IStorage:OpenStorage methods may be called,
 but the IStorage:CreateStream And IStorage:CreateStorage methods may not.
 </td>
                </tr>
                <tr>
                  <td>Creation_FailIfExists</td>
                  <td>0</td>
                  <td>
 Causes the create operation to fail if an existing object with the specified name exists. 
 <p />
 In this case, STG_E_FILEALREADYEXISTS is returned. 
 <p />
 This is the default creation mode; that is, if no other create flag is specified, 
 <span class="selflink">Creation_FailIfExists</span> is implied.
 </td>
                </tr>
                <tr>
                  <td>Transactioning_Direct</td>
                  <td>0</td>
                  <td>
 Indicates that, in direct mode, each change to a storage or stream element is written as it occurs. 
 <p />
 This is the default if neither <span class="selflink">Transactioning_Direct</span> nor 
 <span class="selflink">Transactioning_Transacted</span> is specified.
 </td>
                </tr>
                <tr>
                  <td>Access_Write</td>
                  <td>1</td>
                  <td>
 Enables you to save changes to the object, but does not permit access to its data. 
 <p />
 The provided implementations of the IPropertyStorage and IPropertySetStorage interfaces do not
 support this write-only mode.
 </td>
                </tr>
                <tr>
                  <td>Access_ReadWrite</td>
                  <td>2</td>
                  <td>
 Enables access and modification of object data. 
 <p />
 For example, if a stream object is created or opened in this mode, 
 it is possible to call both IStream::Read and IStream::Write. 
 <p />
 Be aware that this constant is not a simple binary OR operation of the 
 <span class="selflink">Access_Write</span> and <span class="selflink">Access_Read</span> elements.
 </td>
                </tr>
                <tr>
                  <td>Sharing_Exclusive</td>
                  <td>16</td>
                  <td>
 Prevents others from subsequently opening the object in any mode. 
 <p />
 Be aware that this value is not a simple bitwise OR operation of the 
 <span class="selflink">Sharing_DenyRead</span> and <span class="selflink">Sharing_DenyWrite</span> values. 
 <p />
 In transacted mode, sharing of <span class="selflink">Sharing_DenyWrite</span> or 
 <span class="selflink">Sharing_Exclusive</span> can significantly 
 improve performance because they do not require snapshots.
 </td>
                </tr>
                <tr>
                  <td>Sharing_DenyWrite</td>
                  <td>32</td>
                  <td>
 Prevents others from subsequently opening the object for <span class="selflink">Access_Write</span> or 
 <span class="selflink">Access_ReadWrite</span> access. 
 <p />
 In transacted mode, sharing of <span class="selflink">Sharing_DenyWrite</span> or
 <span class="selflink">Sharing_Exclusive</span> can significantly 
 improve performance because they do not require snapshots. 
 </td>
                </tr>
                <tr>
                  <td>Sharing_DenyRead</td>
                  <td>48</td>
                  <td>
 Prevents others from subsequently opening the object in <span class="selflink">Access_Read</span> mode.
 <p />
 It is typically used on a root storage object.
 </td>
                </tr>
                <tr>
                  <td>Sharing_DenyNone</td>
                  <td>64</td>
                  <td>
 Specifies that subsequent openings of the object are not denied read or write access. 
 <p />
 If no flag from the sharing group is specified, this flag is assumed.
 </td>
                </tr>
                <tr>
                  <td>Creation_Create</td>
                  <td>4,096</td>
                  <td>
 Indicates that an existing storage object or stream should be removed before the new object replaces it. 
 A new object is created when this flag is specified only if the existing object has been successfully removed.
 <p />
 This flag Is used When attempting To create
 <p />
   - A storage object on a disk, but a file of that name exists.
 <p />
   - An object inside a storage object, but an object with the specified name exists.
 <p />
   - A byte array object, but one with the specified name exists.
 </td>
                </tr>
                <tr>
                  <td>Transactioning_Transacted</td>
                  <td>65,536</td>
                  <td>
 Indicates that, in transacted mode, changes are buffered and written only if an explicit commit operation is called. 
 <p />
 To ignore the changes, call the Revert method in the IStream, IStorage, or IPropertyStorage interface. 
 <p />
 The COM compound file implementation of IStorage does not support transacted streams, 
 which means that streams can be opened only in direct mode, and you cannot revert changes to them, 
 however transacted storages are supported. 
 <p />
 The compound file, stand-alone, and NTFS file system implementations of IPropertySetStorage similarly do not 
 support transacted, simple property sets because these property sets are stored in streams. 
 <p />
 However, transactioning of nonsimple property sets, which can be created by 
 specifying the PROPSETFLAG_NONSIMPLE flag in the grfFlags parameter of IPropertySetStorage::Create, are supported.
 </td>
                </tr>
                <tr>
                  <td>Creation_Convert</td>
                  <td>131,072</td>
                  <td>
 Creates the new object while preserving existing data in a stream named "Contents". 
 <p />
 In the case of a storage object or a byte array, the old data is 
 formatted into a stream regardless of whether the existing file 
 or byte array currently contains a layered storage object. 
 <p />
 This flag can only be used when creating a root storage object. 
 <p />
 It cannot be used within a storage object; for example, in IStorage::CreateStream. 
 <p />
 It is also not valid to use this flag and the <span class="selflink">DeleteOnRelease_Yes</span> flag simultaneously.
 </td>
                </tr>
                <tr>
                  <td>Sharing_Priority</td>
                  <td>262,144</td>
                  <td>
 Opens the storage object with exclusive access to the most recently committed version. 
 <p />
 Thus, other users cannot commit changes to the object while you have it open in priority mode. 
 <p />
 You gain performance benefits for copy operations, but you prevent others from committing changes. 
 <p />
 Limit the time that objects are open in priority mode. 
 <p />
 You must specify <span class="selflink">Transactioning_Direct</span> and 
 <span class="selflink">Access_Read</span> with priority mode, 
 and you cannot specify <span class="selflink">DeleteOnRelease_Yes</span>. 
 <p /><span class="selflink">DeleteOnRelease_Yes</span> is only valid when creating a root object, 
 such as with StgCreateStorageEx.
 <p />
 It is not valid when opening an existing root object, such as with StgOpenStorageEx. 
 <p />
 It is also not valid when creating or opening a subelement, such as with IStorage::OpenStorage.
 </td>
                </tr>
                <tr>
                  <td>TransactioningPerformance_NoScratch</td>
                  <td>1,048,576</td>
                  <td>
 Indicates that, in transacted mode, a temporary scratch file is usually used to 
 save modifications until the Commit method is called. 
 <p />
 Specifying <span class="selflink">TransactioningPerformance_NoScratch</span> permits the 
 unused portion of the original file to be used as work space instead of creating a new file for that purpose. 
 <p />
 This does not affect the data in the original file, and in certain cases can result in improved performance. 
 <p />
 It is not valid to specify this flag without also specifying <span class="selflink">Transactioning_Transacted</span>, 
 and this flag may only be used in a root open.
 </td>
                </tr>
                <tr>
                  <td>TransactioningPerformance_NoSnapshot</td>
                  <td>2,097,152</td>
                  <td>
 This flag is used when opening a storage object with
 <span class="selflink">Transactioning_Transacted</span> and without 
 <span class="selflink">Sharing_Exclusive</span> or <span class="selflink">Sharing_DenyWrite</span>. 
 <p />
 In this case, specifying <span class="selflink">TransactioningPerformance_NoSnapshot</span> prevents the 
 system-provided implementation from creating a snapshot copy of the file. 
 <p />
 Instead, changes to the file are written to the end of the file. 
 <p />
 Unused space is not reclaimed unless consolidation is performed during the commit, 
 and there is only one current writer on the file. 
 <p />
 When the file is opened in no snapshot mode, another open operation cannot be 
 performed without specifying <span class="selflink">TransactioningPerformance_NoSnapshot</span>. 
 <p />
 This flag may only be used in a root open operation.
 </td>
                </tr>
                <tr>
                  <td>DirectSWMRorSimple_SWMR</td>
                  <td>4,194,304</td>
                  <td>
 Supports direct mode for single-writer multireader (SWRM) file operations.
 </td>
                </tr>
                <tr>
                  <td>DeleteOnRelease_Yes</td>
                  <td>67,108,864</td>
                  <td>
 Indicates that the underlying file is to be automatically destroyed when the root storage object is released.
 <p />
 This feature is most useful for creating temporary files. 
 <p />
 This flag can only be used when creating a root object, such as with StgCreateStorageEx. 
 <p />
 It is not valid when opening a root object, such as with StgOpenStorageEx,
 or when creating or opening a subelement, such as with IStorage::CreateStream. 
 <p />
 It is also not valid to use this flag and the <span class="selflink">Creation_Convert</span> flag simultaneously.
 </td>
                </tr>
                <tr>
                  <td>DirectSWMRorSimple_Simple</td>
                  <td>134,217,728</td>
                  <td>
 Provides a faster implementation of a compound file in a limited, but frequently used, case. 
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="bc387bbf-c905-2558-9de0-4a5ffd59a6a0.htm">DevCase.Win32.Enums Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                </li>
                <li>
                  <a class="quickLink">Remarks</a>
                </li>
                <li>
                  <a class="quickLink">Members</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
    <script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script>
  </body>
</html>