<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>WindowMessages Enumeration</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="WindowMessages enumeration" />
    <meta name="System.Keywords" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages enumeration" />
    <meta name="System.Keywords" content="Null enumeration member" />
    <meta name="System.Keywords" content="MM_MciNotify enumeration member" />
    <meta name="System.Keywords" content="HWND_Broadcast enumeration member" />
    <meta name="System.Keywords" content="WM_AppCommand enumeration member" />
    <meta name="System.Keywords" content="WM_SysCommand enumeration member" />
    <meta name="System.Keywords" content="WM_SettingChange enumeration member" />
    <meta name="System.Keywords" content="WM_Command enumeration member" />
    <meta name="System.Keywords" content="WM_GetText enumeration member" />
    <meta name="System.Keywords" content="WM_GetTextLength enumeration member" />
    <meta name="System.Keywords" content="WM_SetText enumeration member" />
    <meta name="System.Keywords" content="WM_Close enumeration member" />
    <meta name="System.Keywords" content="WM_Move enumeration member" />
    <meta name="System.Keywords" content="WM_NcLButtonDown enumeration member" />
    <meta name="System.Keywords" content="WM_NcLButtonUp enumeration member" />
    <meta name="System.Keywords" content="WM_NcRButtonDown enumeration member" />
    <meta name="System.Keywords" content="WM_NcRButtonUp enumeration member" />
    <meta name="System.Keywords" content="WM_InitMenu enumeration member" />
    <meta name="System.Keywords" content="WM_InitMenuPopup enumeration member" />
    <meta name="System.Keywords" content="WM_NchitTest enumeration member" />
    <meta name="System.Keywords" content="WM_Hotkey enumeration member" />
    <meta name="System.Keywords" content="WM_SetRedraw enumeration member" />
    <meta name="System.Keywords" content="WM_Sizing enumeration member" />
    <meta name="System.Keywords" content="WM_EnterSizeMove enumeration member" />
    <meta name="System.Keywords" content="WM_ExitSizeMove enumeration member" />
    <meta name="System.Keywords" content="WM_WindowPosChanging enumeration member" />
    <meta name="System.Keywords" content="WM_NcMouseMove enumeration member" />
    <meta name="System.Keywords" content="WM_MouseMove enumeration member" />
    <meta name="System.Keywords" content="WM_ShowWindow enumeration member" />
    <meta name="System.Keywords" content="WM_Size enumeration member" />
    <meta name="System.Keywords" content="WM_Activate enumeration member" />
    <meta name="System.Keywords" content="WM_ActivateApp enumeration member" />
    <meta name="System.Keywords" content="WM_ChangeUiState enumeration member" />
    <meta name="System.Keywords" content="WM_Contextmenu enumeration member" />
    <meta name="System.Keywords" content="WM_Create enumeration member" />
    <meta name="System.Keywords" content="WM_Destroy enumeration member" />
    <meta name="System.Keywords" content="WM_DestroyClipboard enumeration member" />
    <meta name="System.Keywords" content="WM_DeviceChange enumeration member" />
    <meta name="System.Keywords" content="WM_DevmodeChange enumeration member" />
    <meta name="System.Keywords" content="WM_DisplayChange enumeration member" />
    <meta name="System.Keywords" content="WM_Enable enumeration member" />
    <meta name="System.Keywords" content="WM_EndSession enumeration member" />
    <meta name="System.Keywords" content="WM_EnterIdle enumeration member" />
    <meta name="System.Keywords" content="WM_EraseBkgnd enumeration member" />
    <meta name="System.Keywords" content="WM_FontChange enumeration member" />
    <meta name="System.Keywords" content="WM_GetHotkey enumeration member" />
    <meta name="System.Keywords" content="WM_GetMinMaxInfo enumeration member" />
    <meta name="System.Keywords" content="WM_Help enumeration member" />
    <meta name="System.Keywords" content="WM_HScroll enumeration member" />
    <meta name="System.Keywords" content="WM_InitDialog enumeration member" />
    <meta name="System.Keywords" content="WM_KeyDown enumeration member" />
    <meta name="System.Keywords" content="WM_KeyUp enumeration member" />
    <meta name="System.Keywords" content="WM_KillFocus enumeration member" />
    <meta name="System.Keywords" content="WM_LButtonDblClk enumeration member" />
    <meta name="System.Keywords" content="WM_LButtonDown enumeration member" />
    <meta name="System.Keywords" content="WM_LButtonUp enumeration member" />
    <meta name="System.Keywords" content="WM_MButtonDblClk enumeration member" />
    <meta name="System.Keywords" content="WM_MButtonDown enumeration member" />
    <meta name="System.Keywords" content="WM_MButtonUp enumeration member" />
    <meta name="System.Keywords" content="WM_MdiActivate enumeration member" />
    <meta name="System.Keywords" content="WM_MdiCreate enumeration member" />
    <meta name="System.Keywords" content="WM_MdiDestroy enumeration member" />
    <meta name="System.Keywords" content="WM_MenuCommand enumeration member" />
    <meta name="System.Keywords" content="WM_MenuRButtonUp enumeration member" />
    <meta name="System.Keywords" content="WM_MenuSelect enumeration member" />
    <meta name="System.Keywords" content="WM_MouseActivate enumeration member" />
    <meta name="System.Keywords" content="WM_MouseHover enumeration member" />
    <meta name="System.Keywords" content="WM_MouseLeave enumeration member" />
    <meta name="System.Keywords" content="WM_MouseWheel enumeration member" />
    <meta name="System.Keywords" content="WM_MouseHWheel enumeration member" />
    <meta name="System.Keywords" content="WM_Moving enumeration member" />
    <meta name="System.Keywords" content="WM_NcActivate enumeration member" />
    <meta name="System.Keywords" content="WM_NcCalcSize enumeration member" />
    <meta name="System.Keywords" content="WM_NcCreate enumeration member" />
    <meta name="System.Keywords" content="WM_NcDestroy enumeration member" />
    <meta name="System.Keywords" content="WM_NcLButtonDblClk enumeration member" />
    <meta name="System.Keywords" content="WM_NcMButtonDblClk enumeration member" />
    <meta name="System.Keywords" content="WM_NcMButtonDown enumeration member" />
    <meta name="System.Keywords" content="WM_NcMButtonUp enumeration member" />
    <meta name="System.Keywords" content="WM_NcMouseLeave enumeration member" />
    <meta name="System.Keywords" content="WM_NcPaint enumeration member" />
    <meta name="System.Keywords" content="WM_NcRButtonDblClk enumeration member" />
    <meta name="System.Keywords" content="WM_Paint enumeration member" />
    <meta name="System.Keywords" content="WM_PowerBroadcast enumeration member" />
    <meta name="System.Keywords" content="WM_Print enumeration member" />
    <meta name="System.Keywords" content="WM_PrintClient enumeration member" />
    <meta name="System.Keywords" content="WM_QueryEndSession enumeration member" />
    <meta name="System.Keywords" content="WM_Quit enumeration member" />
    <meta name="System.Keywords" content="WM_RButtonDblClk enumeration member" />
    <meta name="System.Keywords" content="WM_RButtonDown enumeration member" />
    <meta name="System.Keywords" content="WM_RButtonUp enumeration member" />
    <meta name="System.Keywords" content="WM_SetFocus enumeration member" />
    <meta name="System.Keywords" content="WM_SetHotkey enumeration member" />
    <meta name="System.Keywords" content="WM_SpoolerStatus enumeration member" />
    <meta name="System.Keywords" content="WM_StyleChanged enumeration member" />
    <meta name="System.Keywords" content="WM_StyleChanging enumeration member" />
    <meta name="System.Keywords" content="WM_SysColorChange enumeration member" />
    <meta name="System.Keywords" content="WM_SysKeyDown enumeration member" />
    <meta name="System.Keywords" content="WM_SysKeyUp enumeration member" />
    <meta name="System.Keywords" content="WM_TimeChange enumeration member" />
    <meta name="System.Keywords" content="WM_Undo enumeration member" />
    <meta name="System.Keywords" content="WM_UserChanged enumeration member" />
    <meta name="System.Keywords" content="WM_VScroll enumeration member" />
    <meta name="System.Keywords" content="WM_WindowPosChanged enumeration member" />
    <meta name="System.Keywords" content="WM_Copy enumeration member" />
    <meta name="System.Keywords" content="WM_Cut enumeration member" />
    <meta name="System.Keywords" content="WM_Paste enumeration member" />
    <meta name="System.Keywords" content="WM_Clear enumeration member" />
    <meta name="System.Keywords" content="WM_XButtonDown enumeration member" />
    <meta name="System.Keywords" content="WM_XButtonUp enumeration member" />
    <meta name="System.Keywords" content="WM_XButtonDblClk enumeration member" />
    <meta name="System.Keywords" content="WM_NcXButtonDown enumeration member" />
    <meta name="System.Keywords" content="WM_NcXButtonUp enumeration member" />
    <meta name="System.Keywords" content="WM_NcXButtonDblClk enumeration member" />
    <meta name="System.Keywords" content="WM_Input enumeration member" />
    <meta name="System.Keywords" content="WM_InputDeviceChange enumeration member" />
    <meta name="System.Keywords" content="WM_DwmSendIconicThumbnail enumeration member" />
    <meta name="System.Keywords" content="WM_DwmSendIconicLivePreviewBitmap enumeration member" />
    <meta name="System.Keywords" content="WM_DwmCompositionChanged enumeration member" />
    <meta name="System.Keywords" content="Wm_DwmNcRenderingChanged enumeration member" />
    <meta name="System.Keywords" content="WM_DwmColorizationColorChanged enumeration member" />
    <meta name="System.Keywords" content="WM_DwmWindowMaximizedChanged enumeration member" />
    <meta name="System.Keywords" content="WM_CancelMode enumeration member" />
    <meta name="System.Keywords" content="WM_QueryOpen enumeration member" />
    <meta name="System.Keywords" content="WM_SetFont enumeration member" />
    <meta name="System.Keywords" content="WM_App enumeration member" />
    <meta name="System.Keywords" content="WM_User enumeration member" />
    <meta name="System.Keywords" content="WM_CtlColorEdit enumeration member" />
    <meta name="System.Keywords" content="WM_KeyFirst enumeration member" />
    <meta name="System.Keywords" content="WM_KeyLast enumeration member" />
    <meta name="System.Keywords" content="WM_MouseFirst enumeration member" />
    <meta name="System.Keywords" content="WM_MouseLast enumeration member" />
    <meta name="System.Keywords" content="WM_Timer enumeration member" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.Null" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.MM_MciNotify" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.HWND_Broadcast" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_AppCommand" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SysCommand" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SettingChange" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Command" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_GetText" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_GetTextLength" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SetText" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Close" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Move" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcLButtonDown" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcLButtonUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcRButtonDown" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcRButtonUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_InitMenu" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_InitMenuPopup" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NchitTest" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Hotkey" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SetRedraw" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Sizing" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_EnterSizeMove" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_ExitSizeMove" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_WindowPosChanging" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcMouseMove" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseMove" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_ShowWindow" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Size" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Activate" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_ActivateApp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_ChangeUiState" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Contextmenu" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Create" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Destroy" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DestroyClipboard" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DeviceChange" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DevmodeChange" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DisplayChange" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Enable" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_EndSession" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_EnterIdle" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_EraseBkgnd" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_FontChange" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_GetHotkey" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_GetMinMaxInfo" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Help" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_HScroll" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_InitDialog" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_KeyDown" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_KeyUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_KillFocus" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_LButtonDblClk" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_LButtonDown" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_LButtonUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MButtonDblClk" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MButtonDown" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MButtonUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MdiActivate" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MdiCreate" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MdiDestroy" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MenuCommand" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MenuRButtonUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MenuSelect" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseActivate" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseHover" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseLeave" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseWheel" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseHWheel" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Moving" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcActivate" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcCalcSize" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcCreate" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcDestroy" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcLButtonDblClk" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcMButtonDblClk" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcMButtonDown" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcMButtonUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcMouseLeave" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcPaint" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcRButtonDblClk" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Paint" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_PowerBroadcast" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Print" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_PrintClient" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_QueryEndSession" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Quit" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_RButtonDblClk" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_RButtonDown" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_RButtonUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SetFocus" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SetHotkey" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SpoolerStatus" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_StyleChanged" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_StyleChanging" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SysColorChange" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SysKeyDown" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SysKeyUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_TimeChange" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Undo" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_UserChanged" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_VScroll" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_WindowPosChanged" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Copy" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Cut" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Paste" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Clear" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_XButtonDown" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_XButtonUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_XButtonDblClk" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcXButtonDown" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcXButtonUp" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcXButtonDblClk" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Input" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_InputDeviceChange" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DwmSendIconicThumbnail" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DwmSendIconicLivePreviewBitmap" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DwmCompositionChanged" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.Wm_DwmNcRenderingChanged" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DwmColorizationColorChanged" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DwmWindowMaximizedChanged" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_CancelMode" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_QueryOpen" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SetFont" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_App" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_User" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_CtlColorEdit" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_KeyFirst" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_KeyLast" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseFirst" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseLast" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Timer" />
    <meta name="Microsoft.Help.Id" content="T:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages" />
    <meta name="Description" content="The system sends or posts a system-defined message when it communicates with an application. It uses these messages to control the operations of applications and to provide input and other information for applications to process." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="DevCase.Interop.Unmanaged.Win32.Enums" />
    <meta name="file" content="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowMessages" />
    <meta name="guid" content="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowMessages" />
    
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">DevCase Class Library v3.3<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_DevCase_Class_Library_v3_3.htm" title="DevCase Class Library v3.3" tocid="roottoc">DevCase Class Library v3.3</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_DevCase_Class_Library_v3_3.htm" title="Namespaces" tocid="R_Project_DevCase_Class_Library_v3_3">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_DevCase_Interop.htm" title="DevCase.Interop Namespaces" tocid="G_DevCase_Interop">DevCase.Interop Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_DevCase_Interop_Unmanaged.htm" title="DevCase.Interop.Unmanaged Namespaces" tocid="G_DevCase_Interop_Unmanaged">DevCase.Interop.Unmanaged Namespaces</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_DevCase_Interop_Unmanaged_Win32_Enums.htm" title="DevCase.Interop.Unmanaged.Win32.Enums" tocid="N_DevCase_Interop_Unmanaged_Win32_Enums">DevCase.Interop.Unmanaged.Win32.Enums</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ActiveDesktopApplyMode.htm" title="ActiveDesktopApplyMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ActiveDesktopApplyMode">ActiveDesktopApplyMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AppbarMessages.htm" title="AppbarMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AppbarMessages">AppbarMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ApplicationRestartFlags.htm" title="ApplicationRestartFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ApplicationRestartFlags">ApplicationRestartFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyCreateFileAccess.htm" title="AppPolicyCreateFileAccess Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyCreateFileAccess">AppPolicyCreateFileAccess Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyProcessTerminationMethod.htm" title="AppPolicyProcessTerminationMethod Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyProcessTerminationMethod">AppPolicyProcessTerminationMethod Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyShowDeveloperDiagnostic.htm" title="AppPolicyShowDeveloperDiagnostic Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyShowDeveloperDiagnostic">AppPolicyShowDeveloperDiagnostic Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyThreadInitializationType.htm" title="AppPolicyThreadInitializationType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyThreadInitializationType">AppPolicyThreadInitializationType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AssemblyInfoFlags.htm" title="AssemblyInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AssemblyInfoFlags">AssemblyInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AssocF.htm" title="AssocF Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AssocF">AssocF Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AssocStr.htm" title="AssocStr Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AssocStr">AssocStr Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AutoCompleteFlags.htm" title="AutoCompleteFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AutoCompleteFlags">AutoCompleteFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_BackgroundMode.htm" title="BackgroundMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_BackgroundMode">BackgroundMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_BinaryType.htm" title="BinaryType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_BinaryType">BinaryType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_BroadcastSystemMessageFlags.htm" title="BroadcastSystemMessageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_BroadcastSystemMessageFlags">BroadcastSystemMessageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_BroadcastSystemMessageInfo.htm" title="BroadcastSystemMessageInfo Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_BroadcastSystemMessageInfo">BroadcastSystemMessageInfo Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ChangeDisplaySettingsFlags.htm" title="ChangeDisplaySettingsFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ChangeDisplaySettingsFlags">ChangeDisplaySettingsFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ChangeWindowMessageFilterExAction.htm" title="ChangeWindowMessageFilterExAction Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ChangeWindowMessageFilterExAction">ChangeWindowMessageFilterExAction Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CharInfoAttributes.htm" title="CharInfoAttributes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CharInfoAttributes">CharInfoAttributes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ClipBoxComplexity.htm" title="ClipBoxComplexity Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ClipBoxComplexity">ClipBoxComplexity Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CodePage.htm" title="CodePage Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CodePage">CodePage Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ComputerNameFormat.htm" title="ComputerNameFormat Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ComputerNameFormat">ComputerNameFormat Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ConsoleDisplayMode.htm" title="ConsoleDisplayMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ConsoleDisplayMode">ConsoleDisplayMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ContinueDebugEventFlags.htm" title="ContinueDebugEventFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ContinueDebugEventFlags">ContinueDebugEventFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ControlPanelView.htm" title="ControlPanelView Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ControlPanelView">ControlPanelView Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileFlags.htm" title="CopyFileFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileFlags">CopyFileFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileProgressAction.htm" title="CopyFileProgressAction Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileProgressAction">CopyFileProgressAction Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileProgressCallbackReason.htm" title="CopyFileProgressCallbackReason Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileProgressCallbackReason">CopyFileProgressCallbackReason Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CoWaitForMultipleHandlesFlags.htm" title="CoWaitForMultipleHandlesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CoWaitForMultipleHandlesFlags">CoWaitForMultipleHandlesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CreateFileFlags.htm" title="CreateFileFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CreateFileFlags">CreateFileFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CreateIconFromResourceFlags.htm" title="CreateIconFromResourceFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CreateIconFromResourceFlags">CreateIconFromResourceFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CreateMutexFlags.htm" title="CreateMutexFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CreateMutexFlags">CreateMutexFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CreateProcessFlags.htm" title="CreateProcessFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CreateProcessFlags">CreateProcessFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CreateThreadFlags.htm" title="CreateThreadFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CreateThreadFlags">CreateThreadFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CredentialsDialogOptions.htm" title="CredentialsDialogOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CredentialsDialogOptions">CredentialsDialogOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CredentialsPackFlags.htm" title="CredentialsPackFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CredentialsPackFlags">CredentialsPackFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CursorInfoFlags.htm" title="CursorInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CursorInfoFlags">CursorInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DefineDosDeviceFlags.htm" title="DefineDosDeviceFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DefineDosDeviceFlags">DefineDosDeviceFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceEvents.htm" title="DeviceEvents Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceEvents">DeviceEvents Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceModeDisplayOrientation.htm" title="DeviceModeDisplayOrientation Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceModeDisplayOrientation">DeviceModeDisplayOrientation Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceModeFields.htm" title="DeviceModeFields Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceModeFields">DeviceModeFields Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceType.htm" title="DeviceType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceType">DeviceType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DirectoryManagementControlCodes.htm" title="DirectoryManagementControlCodes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DirectoryManagementControlCodes">DirectoryManagementControlCodes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DisplayDeviceStateFlags.htm" title="DisplayDeviceStateFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DisplayDeviceStateFlags">DisplayDeviceStateFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DisplaySettingsChange.htm" title="DisplaySettingsChange Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DisplaySettingsChange">DisplaySettingsChange Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DpiAwareness.htm" title="DpiAwareness Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DpiAwareness">DpiAwareness Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DuplicateHandleOptions.htm" title="DuplicateHandleOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DuplicateHandleOptions">DuplicateHandleOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DwmBlurBehindFlags.htm" title="DwmBlurBehindFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmBlurBehindFlags">DwmBlurBehindFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DwmIconicLivePreviewFlags.htm" title="DwmIconicLivePreviewFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmIconicLivePreviewFlags">DwmIconicLivePreviewFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DwmIconicThumbnailFlags.htm" title="DwmIconicThumbnailFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmIconicThumbnailFlags">DwmIconicThumbnailFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DwmThumbnailPropertiesFlags.htm" title="DwmThumbnailPropertiesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmThumbnailPropertiesFlags">DwmThumbnailPropertiesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DwmWindowAttribute.htm" title="DwmWindowAttribute Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmWindowAttribute">DwmWindowAttribute Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EAudioSessionDisconnectReason.htm" title="EAudioSessionDisconnectReason Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EAudioSessionDisconnectReason">EAudioSessionDisconnectReason Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EAudioSessionState.htm" title="EAudioSessionState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EAudioSessionState">EAudioSessionState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EDataFlow.htm" title="EDataFlow Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EDataFlow">EDataFlow Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EDeviceState.htm" title="EDeviceState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EDeviceState">EDeviceState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EditControlMessages.htm" title="EditControlMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EditControlMessages">EditControlMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EnumDisplaySettingsMode.htm" title="EnumDisplaySettingsMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EnumDisplaySettingsMode">EnumDisplaySettingsMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EnumProcessModulesFilter.htm" title="EnumProcessModulesFilter Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EnumProcessModulesFilter">EnumProcessModulesFilter Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EnumSystemCodePagesFlags.htm" title="EnumSystemCodePagesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EnumSystemCodePagesFlags">EnumSystemCodePagesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EnumSystemLocalesFlags.htm" title="EnumSystemLocalesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EnumSystemLocalesFlags">EnumSystemLocalesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ERole.htm" title="ERole Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ERole">ERole Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EStgmAccess.htm" title="EStgmAccess Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EStgmAccess">EStgmAccess Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EventAccessRights.htm" title="EventAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EventAccessRights">EventAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ExceptionFlags.htm" title="ExceptionFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ExceptionFlags">ExceptionFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ExecutionState.htm" title="ExecutionState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ExecutionState">ExecutionState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ExitwindowsExFlags.htm" title="ExitwindowsExFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ExitwindowsExFlags">ExitwindowsExFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ExtTextOutOptions.htm" title="ExtTextOutOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ExtTextOutOptions">ExtTextOutOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_FiberFlags.htm" title="FiberFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_FiberFlags">FiberFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_FileAccessRights.htm" title="FileAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_FileAccessRights">FileAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_FlashWindowFlags.htm" title="FlashWindowFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_FlashWindowFlags">FlashWindowFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_FormatMessageFlags.htm" title="FormatMessageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_FormatMessageFlags">FormatMessageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GenericAccessRights.htm" title="GenericAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GenericAccessRights">GenericAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetAncestorFlags.htm" title="GetAncestorFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetAncestorFlags">GetAncestorFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetDeviceCapsItem.htm" title="GetDeviceCapsItem Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetDeviceCapsItem">GetDeviceCapsItem Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetDeviceLparam.htm" title="GetDeviceLparam Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetDeviceLparam">GetDeviceLparam Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetModuleHandleExFlags.htm" title="GetModuleHandleExFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetModuleHandleExFlags">GetModuleHandleExFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetMouseMovePointsResolution.htm" title="GetMouseMovePointsResolution Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetMouseMovePointsResolution">GetMouseMovePointsResolution Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetNextWindowCmd.htm" title="GetNextWindowCmd Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetNextWindowCmd">GetNextWindowCmd Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetPathFromIdListOption.htm" title="GetPathFromIdListOption Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetPathFromIdListOption">GetPathFromIdListOption Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetRawInputDataCommand.htm" title="GetRawInputDataCommand Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetRawInputDataCommand">GetRawInputDataCommand Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetRawInputDeviceInfoCommand.htm" title="GetRawInputDeviceInfoCommand Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetRawInputDeviceInfoCommand">GetRawInputDeviceInfoCommand Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetWindowCmd.htm" title="GetWindowCmd Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetWindowCmd">GetWindowCmd Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HandleFlags.htm" title="HandleFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HandleFlags">HandleFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HardErrorResponse.htm" title="HardErrorResponse Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HardErrorResponse">HardErrorResponse Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HardErrorResponseOption.htm" title="HardErrorResponseOption Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HardErrorResponseOption">HardErrorResponseOption Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HeapFlags.htm" title="HeapFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HeapFlags">HeapFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HeapInformationClass.htm" title="HeapInformationClass Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HeapInformationClass">HeapInformationClass Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HookType.htm" title="HookType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HookType">HookType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HResult.htm" title="HResult Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HResult">HResult Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_InitiateShutdownFlags.htm" title="InitiateShutdownFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_InitiateShutdownFlags">InitiateShutdownFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_InputType.htm" title="InputType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_InputType">InputType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_IpStatsForwarding.htm" title="IpStatsForwarding Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_IpStatsForwarding">IpStatsForwarding Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_IShellItemImageFactoryGetImageFlags.htm" title="IShellItemImageFactoryGetImageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_IShellItemImageFactoryGetImageFlags">IShellItemImageFactoryGetImageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_IShellLinkGetPathFlags.htm" title="IShellLinkGetPathFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_IShellLinkGetPathFlags">IShellLinkGetPathFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_IShellLinkResolveFlags.htm" title="IShellLinkResolveFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_IShellLinkResolveFlags">IShellLinkResolveFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_KeybdEventFlags.htm" title="KeybdEventFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_KeybdEventFlags">KeybdEventFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardInputFlags.htm" title="KeyboardInputFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardInputFlags">KeyboardInputFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardLayoutFlags.htm" title="KeyboardLayoutFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardLayoutFlags">KeyboardLayoutFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardLowLevelHookStructFlags.htm" title="KeyboardLowLevelHookStructFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardLowLevelHookStructFlags">KeyboardLowLevelHookStructFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_LayeredWindowAttributesFlags.htm" title="LayeredWindowAttributesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_LayeredWindowAttributesFlags">LayeredWindowAttributesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ListBoxMessages.htm" title="ListBoxMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ListBoxMessages">ListBoxMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ListViewMessages.htm" title="ListViewMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ListViewMessages">ListViewMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_LoadImageFlags.htm" title="LoadImageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_LoadImageFlags">LoadImageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_LoadImageType.htm" title="LoadImageType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_LoadImageType">LoadImageType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_LoadLibraryFlags.htm" title="LoadLibraryFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_LoadLibraryFlags">LoadLibraryFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_LParams.htm" title="LParams Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_LParams">LParams Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MCICommands.htm" title="MCICommands Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MCICommands">MCICommands Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryAllocationType.htm" title="MemoryAllocationType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryAllocationType">MemoryAllocationType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryFreeType.htm" title="MemoryFreeType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryFreeType">MemoryFreeType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryProtectionOptions.htm" title="MemoryProtectionOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryProtectionOptions">MemoryProtectionOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryResourceNotificationType.htm" title="MemoryResourceNotificationType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryResourceNotificationType">MemoryResourceNotificationType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryState.htm" title="MemoryState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryState">MemoryState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryType.htm" title="MemoryType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryType">MemoryType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItem.htm" title="MenuItem Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItem">MenuItem Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemMask.htm" title="MenuItemMask Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemMask">MenuItemMask Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemState.htm" title="MenuItemState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemState">MenuItemState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemType.htm" title="MenuItemType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemType">MenuItemType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuMask.htm" title="MenuMask Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuMask">MenuMask Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuPosition.htm" title="MenuPosition Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuPosition">MenuPosition Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuStyle.htm" title="MenuStyle Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuStyle">MenuStyle Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MessageFilterInfo.htm" title="MessageFilterInfo Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MessageFilterInfo">MessageFilterInfo Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MiniDumpType.htm" title="MiniDumpType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MiniDumpType">MiniDumpType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MonitorFromFlags.htm" title="MonitorFromFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MonitorFromFlags">MonitorFromFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MonitorInfoFlags.htm" title="MonitorInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MonitorInfoFlags">MonitorInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MouseEventFlags.htm" title="MouseEventFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MouseEventFlags">MouseEventFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MouseInputFlags.htm" title="MouseInputFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MouseInputFlags">MouseInputFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MouseLowLevelHookStructFlags.htm" title="MouseLowLevelHookStructFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MouseLowLevelHookStructFlags">MouseLowLevelHookStructFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MuiLanguageMode.htm" title="MuiLanguageMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MuiLanguageMode">MuiLanguageMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MultiByteCharConversionType.htm" title="MultiByteCharConversionType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MultiByteCharConversionType">MultiByteCharConversionType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MutexInformationClass.htm" title="MutexInformationClass Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MutexInformationClass">MutexInformationClass Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_NativeHotkeyModifiers.htm" title="NativeHotkeyModifiers Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_NativeHotkeyModifiers">NativeHotkeyModifiers Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_NativeWindowState.htm" title="NativeWindowState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_NativeWindowState">NativeWindowState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_NcRenderingPolicyFlags.htm" title="NcRenderingPolicyFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_NcRenderingPolicyFlags">NcRenderingPolicyFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_NetworkErrorCode.htm" title="NetworkErrorCode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_NetworkErrorCode">NetworkErrorCode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_NTStatus.htm" title="NTStatus Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_NTStatus">NTStatus Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ObjectHandleAttributes.htm" title="ObjectHandleAttributes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ObjectHandleAttributes">ObjectHandleAttributes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_OfferVirtualMemoryPriority.htm" title="OfferVirtualMemoryPriority Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_OfferVirtualMemoryPriority">OfferVirtualMemoryPriority Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_OpenAsInfoFlags.htm" title="OpenAsInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_OpenAsInfoFlags">OpenAsInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_OpenFolderFlags.htm" title="OpenFolderFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_OpenFolderFlags">OpenFolderFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PathOptions.htm" title="PathOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PathOptions">PathOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PathResolveFlags.htm" title="PathResolveFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PathResolveFlags">PathResolveFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PeekMessageFlags.htm" title="PeekMessageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PeekMessageFlags">PeekMessageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PopupWindowPositionFlags.htm" title="PopupWindowPositionFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PopupWindowPositionFlags">PopupWindowPositionFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PowerPlanAccess.htm" title="PowerPlanAccess Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PowerPlanAccess">PowerPlanAccess Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PrivilegeStates.htm" title="PrivilegeStates Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PrivilegeStates">PrivilegeStates Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessAccessRights.htm" title="ProcessAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessAccessRights">ProcessAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessErrorMode.htm" title="ProcessErrorMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessErrorMode">ProcessErrorMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessInformationClass.htm" title="ProcessInformationClass Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessInformationClass">ProcessInformationClass Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessLogonFlags.htm" title="ProcessLogonFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessLogonFlags">ProcessLogonFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessNameFlags.htm" title="ProcessNameFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessNameFlags">ProcessNameFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessPrivileges.htm" title="ProcessPrivileges Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessPrivileges">ProcessPrivileges Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessStartupInfoFlags.htm" title="ProcessStartupInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessStartupInfoFlags">ProcessStartupInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressBarMessages.htm" title="ProgressBarMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressBarMessages">ProgressBarMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressDialogFlags.htm" title="ProgressDialogFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressDialogFlags">ProgressDialogFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressDialogTimerFlags.htm" title="ProgressDialogTimerFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressDialogTimerFlags">ProgressDialogTimerFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PssCaptureFlags.htm" title="PssCaptureFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PssCaptureFlags">PssCaptureFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PssDuplicateFlags.htm" title="PssDuplicateFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PssDuplicateFlags">PssDuplicateFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PssProcessFlags.htm" title="PssProcessFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PssProcessFlags">PssProcessFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PssQueryInformationClass.htm" title="PssQueryInformationClass Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PssQueryInformationClass">PssQueryInformationClass Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_QueryAssemblyInfoFlags.htm" title="QueryAssemblyInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_QueryAssemblyInfoFlags">QueryAssemblyInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_QueryUserNotificationState.htm" title="QueryUserNotificationState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_QueryUserNotificationState">QueryUserNotificationState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_QueueStatusFlags.htm" title="QueueStatusFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_QueueStatusFlags">QueueStatusFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RawInputDeviceFlags.htm" title="RawInputDeviceFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RawInputDeviceFlags">RawInputDeviceFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RawKeyboardFlags.htm" title="RawKeyboardFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RawKeyboardFlags">RawKeyboardFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RawMouseButtons.htm" title="RawMouseButtons Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RawMouseButtons">RawMouseButtons Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RawMouseFlags.htm" title="RawMouseFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RawMouseFlags">RawMouseFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RedrawWindowFlags.htm" title="RedrawWindowFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RedrawWindowFlags">RedrawWindowFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RegionCombineMode.htm" title="RegionCombineMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RegionCombineMode">RegionCombineMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RegionComplexity.htm" title="RegionComplexity Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RegionComplexity">RegionComplexity Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RegNotifyChangeFilter.htm" title="RegNotifyChangeFilter Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RegNotifyChangeFilter">RegNotifyChangeFilter Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ReparseDataBufferFlags.htm" title="ReparseDataBufferFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ReparseDataBufferFlags">ReparseDataBufferFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ReparsePointTags.htm" title="ReparsePointTags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ReparsePointTags">ReparsePointTags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ResourceType.htm" title="ResourceType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ResourceType">ResourceType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ScrollBarOrientation.htm" title="ScrollBarOrientation Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ScrollBarOrientation">ScrollBarOrientation Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ScrollInfoMask.htm" title="ScrollInfoMask Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ScrollInfoMask">ScrollInfoMask Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SectionAccessRights.htm" title="SectionAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SectionAccessRights">SectionAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SectionAttributes.htm" title="SectionAttributes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SectionAttributes">SectionAttributes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SectionInherit.htm" title="SectionInherit Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SectionInherit">SectionInherit Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SecurityImpersonationLevel.htm" title="SecurityImpersonationLevel Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SecurityImpersonationLevel">SecurityImpersonationLevel Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SecurityInformation.htm" title="SecurityInformation Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SecurityInformation">SecurityInformation Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SendMessageTimeoutFlags.htm" title="SendMessageTimeoutFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SendMessageTimeoutFlags">SendMessageTimeoutFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SetForegroundWindowLockModes.htm" title="SetForegroundWindowLockModes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SetForegroundWindowLockModes">SetForegroundWindowLockModes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SetProcessWorkingSetSizeFlags.htm" title="SetProcessWorkingSetSizeFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SetProcessWorkingSetSizeFlags">SetProcessWorkingSetSizeFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SetWindowPosFlags.htm" title="SetWindowPosFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SetWindowPosFlags">SetWindowPosFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHChangeNotifyEventID.htm" title="SHChangeNotifyEventID Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHChangeNotifyEventID">SHChangeNotifyEventID Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHChangeNotifyFlags.htm" title="SHChangeNotifyFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHChangeNotifyFlags">SHChangeNotifyFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellAddToRecentDocsFlags.htm" title="ShellAddToRecentDocsFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellAddToRecentDocsFlags">ShellAddToRecentDocsFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellFolderEnumObjectsFlags.htm" title="ShellFolderEnumObjectsFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellFolderEnumObjectsFlags">ShellFolderEnumObjectsFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellFoldermGetDisplayName.htm" title="ShellFoldermGetDisplayName Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellFoldermGetDisplayName">ShellFoldermGetDisplayName Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemAttributesMask.htm" title="ShellItemAttributesMask Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemAttributesMask">ShellItemAttributesMask Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemCompareHint.htm" title="ShellItemCompareHint Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemCompareHint">ShellItemCompareHint Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemGetDisplayName.htm" title="ShellItemGetDisplayName Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemGetDisplayName">ShellItemGetDisplayName Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellStateFlags.htm" title="ShellStateFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellStateFlags">ShellStateFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHEmptyRecycleBinFlags.htm" title="SHEmptyRecycleBinFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHEmptyRecycleBinFlags">SHEmptyRecycleBinFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHGetFileInfoFlags.htm" title="SHGetFileInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHGetFileInfoFlags">SHGetFileInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHGetNewLinkInfoFlags.htm" title="SHGetNewLinkInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHGetNewLinkInfoFlags">SHGetNewLinkInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHObjectPropertiesFlags.htm" title="SHObjectPropertiesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHObjectPropertiesFlags">SHObjectPropertiesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHUpdateImageFlags.htm" title="SHUpdateImageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHUpdateImageFlags">SHUpdateImageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShutdownPlanning.htm" title="ShutdownPlanning Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShutdownPlanning">ShutdownPlanning Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShutdownReason.htm" title="ShutdownReason Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShutdownReason">ShutdownReason Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SpecialWindowHandles.htm" title="SpecialWindowHandles Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SpecialWindowHandles">SpecialWindowHandles Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_StandardAccessRights.htm" title="StandardAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_StandardAccessRights">StandardAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_StandardDevice.htm" title="StandardDevice Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_StandardDevice">StandardDevice Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_StrFormatByteSizeFlags.htm" title="StrFormatByteSizeFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_StrFormatByteSizeFlags">StrFormatByteSizeFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SymbolicLinkFlags.htm" title="SymbolicLinkFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SymbolicLinkFlags">SymbolicLinkFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SymFlags.htm" title="SymFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SymFlags">SymFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SymLoadModuleFlags.htm" title="SymLoadModuleFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SymLoadModuleFlags">SymLoadModuleFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SymOptionFlags.htm" title="SymOptionFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SymOptionFlags">SymOptionFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SymTagEnum.htm" title="SymTagEnum Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SymTagEnum">SymTagEnum Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SystemCursorId.htm" title="SystemCursorId Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SystemCursorId">SystemCursorId Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SystemParametersActionFlags.htm" title="SystemParametersActionFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SystemParametersActionFlags">SystemParametersActionFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SystemParametersWinIniFlags.htm" title="SystemParametersWinIniFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SystemParametersWinIniFlags">SystemParametersWinIniFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_TaskbarProgressBarState.htm" title="TaskbarProgressBarState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_TaskbarProgressBarState">TaskbarProgressBarState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_TernaryRasterOperations.htm" title="TernaryRasterOperations Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_TernaryRasterOperations">TernaryRasterOperations Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ThreadAccessRights.htm" title="ThreadAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ThreadAccessRights">ThreadAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ThreadErrorMode.htm" title="ThreadErrorMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ThreadErrorMode">ThreadErrorMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailAlphaType.htm" title="ThumbnailAlphaType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailAlphaType">ThumbnailAlphaType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailCacheFlags.htm" title="ThumbnailCacheFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailCacheFlags">ThumbnailCacheFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailFlags.htm" title="ThumbnailFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailFlags">ThumbnailFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_TokenAccess.htm" title="TokenAccess Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_TokenAccess">TokenAccess Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_TokenInformationClass.htm" title="TokenInformationClass Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_TokenInformationClass">TokenInformationClass Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_TokenType.htm" title="TokenType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_TokenType">TokenType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ToolBarButtonInfoMask.htm" title="ToolBarButtonInfoMask Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ToolBarButtonInfoMask">ToolBarButtonInfoMask Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ToolbarButtonStates.htm" title="ToolbarButtonStates Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ToolbarButtonStates">ToolbarButtonStates Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ToolbarMessages.htm" title="ToolbarMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ToolbarMessages">ToolbarMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_UpdateLayeredWindowflags.htm" title="UpdateLayeredWindowflags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_UpdateLayeredWindowflags">UpdateLayeredWindowflags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_VirtualKeyMappingTypes.htm" title="VirtualKeyMappingTypes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_VirtualKeyMappingTypes">VirtualKeyMappingTypes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_VirtualKeys.htm" title="VirtualKeys Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_VirtualKeys">VirtualKeys Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_VolumeInformationFlags.htm" title="VolumeInformationFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_VolumeInformationFlags">VolumeInformationFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WaitObjectResult.htm" title="WaitObjectResult Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WaitObjectResult">WaitObjectResult Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WerFaultReporting.htm" title="WerFaultReporting Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WerFaultReporting">WerFaultReporting Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WerRegisterFileType.htm" title="WerRegisterFileType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WerRegisterFileType">WerRegisterFileType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WerRegisterFileTypeFlags.htm" title="WerRegisterFileTypeFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WerRegisterFileTypeFlags">WerRegisterFileTypeFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WideCharConversionType.htm" title="WideCharConversionType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WideCharConversionType">WideCharConversionType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_Win32ErrorCode.htm" title="Win32ErrorCode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_Win32ErrorCode">Win32ErrorCode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowAnimation.htm" title="WindowAnimation Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowAnimation">WindowAnimation Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowHitTestRegions.htm" title="WindowHitTestRegions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowHitTestRegions">WindowHitTestRegions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowLongValues.htm" title="WindowLongValues Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowLongValues">WindowLongValues Enumeration</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowMessages.htm" title="WindowMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowMessages">WindowMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowsBeepType.htm" title="WindowsBeepType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowsBeepType">WindowsBeepType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowsCredentialsDialogOptions.htm" title="WindowsCredentialsDialogOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowsCredentialsDialogOptions">WindowsCredentialsDialogOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowSkipOptions.htm" title="WindowSkipOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowSkipOptions">WindowSkipOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowStyles.htm" title="WindowStyles Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowStyles">WindowStyles Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowStylesEx.htm" title="WindowStylesEx Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowStylesEx">WindowStylesEx Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WinMmResult.htm" title="WinMmResult Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WinMmResult">WinMmResult Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm" title="WParams Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams">WParams Enumeration</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>WindowMessages Enumeration</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
 The system sends or posts a system-defined message when it communicates with an application. 
 <p />
 It uses these messages to control the operations of applications and to provide input and other information for applications to process. 
 <p />
 An application can also send or post system-defined messages.
 <p />
 Applications generally use these messages to control the operation of control windows created by using preregistered window classes.
 </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_DevCase_Interop_Unmanaged_Win32_Enums.htm">DevCase.Interop.Unmanaged.Win32.Enums</a><br />
    <strong>Assembly:</strong>
   DevCase.Interop (in DevCase.Interop.dll) Version: 3.3.0.0 (3.3)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EECA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','cs','1','4');return false;">C#</a></div><div id="ID0EECA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','vb','2','4');return false;">VB</a></div><div id="ID0EECA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','cpp','3','4');return false;">C++</a></div><div id="ID0EECA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EECA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EECA');return false;" title="Copy">Copy</a></div></div><div id="ID0EECA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="identifier">WindowMessages</span></pre></div><div id="ID0EECA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Enumeration</span> <span class="identifier">WindowMessages</span>

<span class="keyword">Dim</span> <span class="parameter">instance</span> <span class="keyword">As</span> <span class="identifier">WindowMessages</span></pre></div><div id="ID0EECA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">enum class</span> <span class="identifier">WindowMessages</span></pre></div><div id="ID0EECA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">WindowMessages</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EECA");</script></div><div id="enumerationSection"><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Members</span></div><div id="ID2RBSection" class="collapsibleSection"><table id="enumMemberList" class="members"><tr><th class="iconColumn">
									 
								</th><th>Member name</th><th>Value</th><th>Description</th></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.Null"><span class="selflink">Null</span></td><td>0</td><td>
 The <span class="selflink">Null</span> message performs no operation.
 <p />
 An application sends the <span class="selflink">Null</span> message if it wants to 
 send a message that the recipient window will ignore.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.MM_MciNotify"><span class="selflink">MM_MciNotify</span></td><td>953</td><td>
 Notifies an application that an MCI device has completed an operation. 
 MCI devices send this message only when the <span class="code">MCI_NOTIFY</span> flag is used.
 <p /><span class="code">wParam</span> 
 Reason for the notification.
 <p /><span class="code">lParam</span> 
 Identifier of the device initiating the callback function.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.HWND_Broadcast"><span class="selflink">HWND_Broadcast</span></td><td>65535</td><td>
 The message is sent to all top-level windows in the system, including disabled or invisible unowned windows.
 <p />
 The function does not return until each window has timed out.
 Therefore, the total wait time can be up to the value of uTimeout multiplied by the number of top-level windows.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_AppCommand"><span class="selflink">WM_AppCommand</span></td><td>793</td><td>
 Notifies a window that the user generated an application command event, for example, 
 by clicking an application command button using the mouse or typing an application command key on the keyboard.
 <p /><span class="code">wParam</span> 
 A handle to the window where the user clicked the button or pressed the key.
 This can be a child window of the window receiving the message.
 <p /><span class="code">lParam</span>
 See Remarks.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SysCommand"><span class="selflink">WM_SysCommand</span></td><td>274</td><td>
 A window receives this message when the user chooses a command from the Window menu 
 (formerly known as the system or control menu) or when the user chooses the maximize button, 
 minimize button, restore button, or close button.
 <p /><span class="code">wParam</span>
 The type of system command requested
 <p /><span class="code">lParam</span>
 The low-order word specifies the horizontal position of the cursor, in screen coordinates, 
 if a window menu command is chosen with the mouse. 
 <p />
 Otherwise, this parameter is not used.
 <p />
 The high-order word specifies the vertical position of the cursor, in screen coordinates, 
 if a window menu command is chosen with the mouse. 
 <p />
 This parameter is –1 if the command is chosen using a system accelerator, or zero if using a mnemonic.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SettingChange"><span class="selflink">WM_SettingChange</span></td><td>26</td><td>
 A message that is sent to all top-level windows when 
 the SystemParametersInfo function changes a system-wide setting or when policy settings have changed.
 <p />
 Applications should send <span class="selflink">WM_SettingChange</span> to all top-level windows when 
 they make changes to system parameters
 <p />
 This message cannot be sent directly to a single window.
 <p />
 To send the <span class="selflink">WM_SettingChange</span> message to all top-level windows, 
 use the <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_SendMessageTimeout.htm">SendMessageTimeout(IntPtr, EditControlMessages, IntPtr, IntPtr, SendMessageTimeoutFlags, Int32, IntPtr<span id="LSTCACDF19B_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_0?cpp=%");</script>)</a> function with the <span class="code">hwnd</span> parameter set to 
 <span class="selflink">HWND_Broadcast</span>.
 <p /><span class="code">wParam</span> 
 See Remakrs.
 <p /><span class="code">lParam</span> 
 See Remakrs.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Command"><span class="selflink">WM_Command</span></td><td>273</td><td>
 Message sent when the user selects a command item from a menu,
 when a control sends a notification message to its parent window,
 or when an accelerator keystroke is translated.
 <p /><span class="code">wParam</span> 
 For a description of this parameter, see Remarks.
 <p /><span class="code">lParam</span> 
 For a description of this parameter, see Remarks.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_GetText"><span class="selflink">WM_GetText</span></td><td>13</td><td>
 Copies the text that corresponds to a window into a buffer provided by the caller.
 <p /><span class="code">wParam</span> 
 The maximum number of characters to be copied, including the terminating null character.
 <p />
 ANSI applications may have the string in the buffer reduced in size 
 (to a minimum of half that of the wParam value) due to conversion from ANSI to Unicode.
 <p /><span class="code">lParam</span> 
 A pointer to the buffer that is to receive the text.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_GetTextLength"><span class="selflink">WM_GetTextLength</span></td><td>14</td><td>
 Determines the length, in characters, of the text associated with a window.
 <p /><span class="code">wParam</span> 
 This parameter is not used and must be zero
 <p /><span class="code">lParam</span> 
 This parameter is not used and must be zero
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SetText"><span class="selflink">WM_SetText</span></td><td>12</td><td>
 Sets the text of a window.
 <p /><span class="code">wParam</span> 
 This parameter is not used
 <p /><span class="code">lParam</span> 
 A pointer to a null-terminated string that is the window text.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Close"><span class="selflink">WM_Close</span></td><td>16</td><td>
 Sent as a signal that a window or an application should terminate.
 <p /><span class="code">wParam</span> 
 This parameter is not used.
 <p /><span class="code">lParam</span> 
 This parameter is not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Move"><span class="selflink">WM_Move</span></td><td>3</td><td>
 Sent after a window has been moved.
 <p /><span class="code">wParam</span> 
 This parameter is not used.
 <p /><span class="code">lParam</span> 
 The x and y coordinates of the upper-left corner of the client area of the window. 
 <p />
 The low-order word contains the x-coordinate while the high-order word contains the y coordinate. 
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcLButtonDown"><span class="selflink">WM_NcLButtonDown</span></td><td>161</td><td>
 Posted when the user presses the left mouse button while the cursor is within the nonclient area of a window.
 <p />
 This message is posted to the window that contains the cursor. 
 <p />
 If a window has captured the mouse, this message is not posted.
 <p /><span class="code">wParam</span> 
 The hit-test value returned by the <span class="code">DefWindowProc</span> function as a 
 result of processing the <span class="selflink">WM_NchitTest</span> message.
 <p /><span class="code">lParam</span> 
 A <span class="code">POINTS</span> structure that contains the x- and y-coordinates of the cursor. 
 <p />
 The coordinates are relative to the upper-left corner of the screen. 
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcLButtonUp"><span class="selflink">WM_NcLButtonUp</span></td><td>162</td><td>
 Posted when the user releases the left mouse button while the cursor is within the nonclient area of a window.
 <p />
 This message is posted to the window that contains the cursor. 
 <p />
 If a window has captured the mouse, this message is not posted.
 <p /><span class="code">wParam</span> 
 The hit-test value returned by the <span class="code">DefWindowProc</span> function as a 
 result of processing the <span class="selflink">WM_NchitTest</span> message.
 <p /><span class="code">lParam</span> 
 A <span class="code">POINTS</span> structure that contains the x- and y-coordinates of the cursor. 
 <p />
 The coordinates are relative to the upper-left corner of the screen. 
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcRButtonDown"><span class="selflink">WM_NcRButtonDown</span></td><td>164</td><td>
 Posted when the user presses the right mouse button while the cursor is within the nonclient area of a window. 
 <p />
 This message is posted to the window that contains the cursor. 
 <p />
 If a window has captured the mouse, this message is not posted.
 <p /><span class="code">wParam</span> 
 The hit-test value returned by the <span class="code">DefWindowProc</span> function as a 
 result of processing the <span class="selflink">WM_NchitTest</span> message.
 <p /><span class="code">lParam</span> 
 A <span class="code">POINTS</span> structure that contains the x- and y-coordinates of the cursor.
 <p />
 The coordinates are relative to the upper-left corner of the screen. 
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcRButtonUp"><span class="selflink">WM_NcRButtonUp</span></td><td>165</td><td>
 Posted when the user releases the right mouse button while the cursor is within the nonclient area of a window.
 <p />
 This message is posted to the window that contains the cursor. 
 <p />
 If a window has captured the mouse, this message is not posted.
 <p /><span class="code">wParam</span> 
 The hit-test value returned by the <span class="code">DefWindowProc</span> function as a 
 result of processing the <span class="selflink">WM_NchitTest</span> message.
 <p /><span class="code">lParam</span> 
 A <span class="code">POINTS</span> structure that contains the x- and y-coordinates of the cursor.
 <p />
 The coordinates are relative to the upper-left corner of the screen. 
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_InitMenu"><span class="selflink">WM_InitMenu</span></td><td>278</td><td>
 Sent when a menu is about to become active. 
 <p />
 It occurs when the user clicks an item on the menu bar or presses a menu key. 
 <p />
 This allows the application to modify the menu before it is displayed. 
 <p /><span class="code">wParam</span> 
 A handle to the menu to be initialized.
 <p /><span class="code">lParam</span> 
 This parameter is not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_InitMenuPopup"><span class="selflink">WM_InitMenuPopup</span></td><td>279</td><td>
 Sent when a drop-down menu or submenu is about to become active.
 <p />
 This allows an application to modify the menu before it is displayed, 
 without changing the entire menu. 
 <p /><span class="code">wParam</span> 
 A handle to the drop-down menu or submenu. 
 <p /><span class="code">lParam</span> 
 The low-order word specifies the zero-based relative position of the
 menu item that opens the drop-down menu or submenu.
 <p />
 The high-order word indicates whether the drop-down menu is the window menu. 
 <p />
 If the menu is the window menu, this parameter is <span class="keyword"><span id="LSTCACDF19B_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_1?vb=True|nu=true");</script></span>; otherwise, it is <span class="keyword"><span id="LSTCACDF19B_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_2?vb=False|nu=false");</script></span>.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NchitTest"><span class="selflink">WM_NchitTest</span></td><td>132</td><td>
 Sent to a window in order to determine what part of the window corresponds to a particular screen coordinate.
 <p />
 This can happen, for example, when the cursor moves, when a mouse button is pressed or released, 
 or in response to a call to a function such as <span class="code">WindowFromPoint</span>.
 <p />
 If the mouse is not captured, the message is sent to the window beneath the cursor. 
 Otherwise, the message is sent to the window that has captured the mouse.
 <p /><span class="code">wParam</span> 
 This parameter is not used.
 <p /><span class="code">lParam</span> 
 The low-order word specifies the x-coordinate of the cursor. 
 The coordinate is relative to the upper-left corner of the screen.
 <p />
 The high-order word specifies the y-coordinate of the cursor. 
 The coordinate is relative to the upper-left corner of the screen.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Hotkey"><span class="selflink">WM_Hotkey</span></td><td>786</td><td>
 Posted when the user presses a hot key registered by the <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_RegisterHotKey.htm">RegisterHotKey(IntPtr, Int32, UInt32, UInt32)</a> function. 
 <p />
 The message is placed at the top of the message queue associated with the thread that registered the hot key.
 <p /><span class="code">wParam</span> 
 The identifier of the hot key that generated the message.
 If the message was generated by a system-defined hot key.
 <p /><span class="code">lParam</span> 
 The low-order word specifies the keys that were to be pressed in 
 combination with the key specified by the high-order word to generate the 
 <span class="selflink">WM_Hotkey</span> message.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SetRedraw"><span class="selflink">WM_SetRedraw</span></td><td>11</td><td>
 An application sends this message to a window to allow changes in that window to be redrawn 
 or to prevent changes in that window from being redrawn.
 <p /><span class="code">wParam</span> 
 The redraw state.
 <p />
 If this parameter is <span class="keyword"><span id="LSTCACDF19B_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_3?vb=True|nu=true");</script></span>, the content can be redrawn after a change.
 <p />
 If this parameter is <span class="keyword"><span id="LSTCACDF19B_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_4?vb=False|nu=false");</script></span>, the content cannot be redrawn after a change.
 <p /><span class="code">lParam</span> 
 This parameter is not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Sizing"><span class="selflink">WM_Sizing</span></td><td>532</td><td>
 Sent to a window that the user is resizing.
 <p />
 By processing this message, an application can monitor the size and position of the drag rectangle
 and, if needed, change its size or position.
 <p /><span class="code">wParam</span> 
 The edge of the window that is being sized.
 <p /><span class="code">lParam</span> 
 A pointer to a <a href="T_DevCase_Interop_Unmanaged_Win32_Structures_NativeRectangle.htm">NativeRectangle</a> structure with the screen coordinates of the drag rectangle.
 <p />
 To change the size or position of the drag rectangle, an application must change the members of this structure.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_EnterSizeMove"><span class="selflink">WM_EnterSizeMove</span></td><td>561</td><td>
 Sent one time to a window, after it enters the moving or sizing modal loop.
 <p />
 The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border,
 <p />
 or when the window passes the <span class="selflink">WM_SysCommand</span> message to the 
 <span class="code">DefWindowProc</span> function and the <span class="code">wParam</span> parameter of the message
 specifies the <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm">SC_Move</a> or <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm">SC_Size</a> value.
 <p />
 The operation is complete when <span class="code">DefWindowProc</span> returns.
 <p />
 The system sends the <span class="selflink">WM_EnterSizeMove</span> message regardless of 
 whether the dragging of full windows is enabled.
 <p /><span class="code">wParam</span> 
 This parameter is not used.
 <p /><span class="code">lParam</span> 
 This parameter is not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_ExitSizeMove"><span class="selflink">WM_ExitSizeMove</span></td><td>562</td><td>
 Sent one time to a window, after it has exited the moving or sizing modal loop.
 <p />
 The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border,
 <p />
 or when the window passes the <span class="selflink">WM_SysCommand</span> message to the 
 <span class="code">DefWindowProc</span> function and the <span class="code">wParam</span> parameter of the message
 specifies the <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm">SC_Move</a> or <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm">SC_Size</a> value.
 <p />
 The operation is complete when <span class="code">DefWindowProc</span> returns.
 <p /><span class="code">wParam</span> 
 This parameter is not used.
 <p /><span class="code">lParam</span> 
 This parameter is not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_WindowPosChanging"><span class="selflink">WM_WindowPosChanging</span></td><td>70</td><td>
 Sent to a window whose size, position, or place in the Z order is about to change as a 
 result of a call to the <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_SetWindowPos.htm">SetWindowPos(IntPtr, IntPtr, Int32, Int32, Int32, Int32, SetWindowPosFlags)</a> function or another window-management function.
 <p /><span class="code">wParam</span> 
 This parameter is not used.
 <p /><span class="code">lParam</span> 
 A pointer to a <span class="code">WINDOWPOS</span> structure that contains information about the window's new size and position.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcMouseMove"><span class="selflink">WM_NcMouseMove</span></td><td>160</td><td>
 This message is posted to a window when the cursor is moved within the nonclient area of the window.
 <p />
 This message is posted to the window that contains the cursor.
 <p />
 If a window has captured the mouse this message is not posted.
 <p /><span class="code">wParam</span> 
 The hit-test value returned by the <span class="code">DefWindowProc</span> function 
 as a result of processing the <span class="selflink">WM_NchitTest</span> message.
 <p />
 For a list of hit-test values, see <span class="selflink">WM_NchitTest</span>.
 <p /><span class="code">lParam</span> 
 A <span class="code">POINTS</span> structure that contains the x- and y-coordinates of the cursor.
 <p />
 The coordinates are relative to the upper-left corner of the screen. 
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseMove"><span class="selflink">WM_MouseMove</span></td><td>512</td><td>
 Posted to a window when the cursor moves.
 <p />
 If the mouse is not captured, the message is posted to the window that contains the cursor.
 <p />
 Otherwise, the message is posted to the window that has captured the mouse.
 <p /><span class="code">wParam</span> 
 Indicates whether various virtual keys are down.
 <p /><span class="code">lParam</span> 
 The low-order word specifies the x-coordinate of the cursor.
 The coordinate is relative to the upper-left corner of the client area. 
 <p />
 The high-order word specifies the y-coordinate of the cursor.
 The coordinate is relative to the upper-left corner of the client area.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_ShowWindow"><span class="selflink">WM_ShowWindow</span></td><td>24</td><td>
 Sent to a window when the window is about to be hidden or shown.
 <p /><span class="code">wParam</span> 
 Indicates whether a window is being shown.
 <p />
 If wParam is <span class="keyword"><span id="LSTCACDF19B_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_5?vb=True|nu=true");</script></span>, the window is being shown.
 If wParam is <span class="keyword"><span id="LSTCACDF19B_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_6?vb=False|nu=false");</script></span>, the window is being hidden.
 <p /><span class="code">lParam</span> 
 The status of the window being shown.
 <p />
 If <span class="code">lParam</span> is zero, the message was sent because of a 
 call to the <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_ShowWindow.htm">ShowWindow(IntPtr, NativeWindowState)</a> function.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Size"><span class="selflink">WM_Size</span></td><td>5</td><td>
 Sent to a window after its size has changed.
 <p /><span class="code">wParam</span> 
 The type of resizing requested.
 <p /><span class="code">lParam</span> 
 The low-order word of <span class="code">lParam</span> specifies the new width of the client area.
 <p />
 The high-order word of <span class="code">lParam</span> specifies the new height of the client area. 
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Activate"><span class="selflink">WM_Activate</span></td><td>6</td><td>
 The message is sent when a window is being activated or deactivated.
 <p />
 This message is sent first to the window procedure of the top-level window being deactivated; 
 it is then sent to the window procedure of the top-level window being activated.
 <p /><span class="code">wParam</span> 
 The low-order word specifies whether the window is being activated or deactivated. 
 <p />
 This parameter can be one of the following values:
 <p />
 • <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm">WA_Active</a> 
 • <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm">WA_ClickActive</a> 
 • <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm">WA_Inactive</a><p />
 The high-order word specifies the minimized state of the window being activated or deactivated. 
 A nonzero value indicates the window is minimized.
 <p /><span class="code">lParam</span> 
 A handle to the window being activated or deactivated, depending on the value of the wParam parameter. 
 <p />
 If the low-order word of wParam is <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm">WA_Inactive</a>, 
 lParam is the handle to the window being activated. 
 <p />
 If the low-order word of wParam is <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm">WA_Active</a> or <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm">WA_ClickActive</a>, 
 lParam is the handle to the window being deactivated. 
 This handle can be <span class="nolink">Zero</span>.
 <p /><span class="code">Return value</span> 
 If an application processes this message, it should return zero.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_ActivateApp"><span class="selflink">WM_ActivateApp</span></td><td>28</td><td>
 The message is sent when a window belonging to a different application than the 
 active window is about to be activated. 
 <p />
 The message is sent to the application whose window is being activated and to 
 the application whose window is being deactivated.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_ChangeUiState"><span class="selflink">WM_ChangeUiState</span></td><td>295</td><td>
 An application sends the message to indicate that the user interface (UI) state should be changed.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Contextmenu"><span class="selflink">WM_Contextmenu</span></td><td>123</td><td>
 The message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Create"><span class="selflink">WM_Create</span></td><td>1</td><td>
 The message is sent when an application requests that a window be created by 
 calling the <span class="code">CreateWindowEx</span> or <span class="code">CreateWindow</span> function.
 <p />
 (The message is sent before the function returns.) 
 <p />
 The window procedure of the new window receives this message after the window is 
 created but before the window becomes visible.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Destroy"><span class="selflink">WM_Destroy</span></td><td>2</td><td>
 The message is sent when a window is being destroyed.
 <p />
 It is sent to the window procedure of the window being destroyed after the 
 window is removed from the screen.
 <p />
 This message is sent first to the window being destroyed and then 
 to the child windows (if any) as they are destroyed.
 <p />
 During the processing of the message it can be assumed that all child windows still exist.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DestroyClipboard"><span class="selflink">WM_DestroyClipboard</span></td><td>775</td><td>
 The message is sent to the clipboard owner when a call to the 
 <span class="code">EmptyClipboard</span> function empties the clipboard.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DeviceChange"><span class="selflink">WM_DeviceChange</span></td><td>537</td><td>
 Notifies an application of a change to the hardware configuration of a device or the computer.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DevmodeChange"><span class="selflink">WM_DevmodeChange</span></td><td>27</td><td>
 The message is sent to all top-level windows whenever the user changes device-mode settings.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DisplayChange"><span class="selflink">WM_DisplayChange</span></td><td>126</td><td>
 The message is sent to all windows when the display resolution has changed.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Enable"><span class="selflink">WM_Enable</span></td><td>10</td><td>
 The message is sent when an application changes the enabled state of a window.
 It is sent to the window whose enabled state is changing.
 <p />
 This message is sent before the EnableWindow function returns but after the 
 enabled state (<span class="code">WS_DISABLED</span> style bit) of the window has changed.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_EndSession"><span class="selflink">WM_EndSession</span></td><td>22</td><td>
 The message is sent to an application after the system processes the 
 results of the <span class="code">WM_QUERYENDSESSION</span> message. 
 <p />
 This message informs the application whether the session is ending.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_EnterIdle"><span class="selflink">WM_EnterIdle</span></td><td>289</td><td>
 The message is sent to the owner window of a modal dialog box or menu that is entering an idle state.
 <p />
 A modal dialog box or menu enters an idle state when no messages are waiting in its queue 
 after it has processed one or more previous messages.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_EraseBkgnd"><span class="selflink">WM_EraseBkgnd</span></td><td>20</td><td>
 The message is sent when the window background must be erased (for example when a window is resized).
 <p />
 The message is sent to prepare an invalidated portion of a window for painting.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_FontChange"><span class="selflink">WM_FontChange</span></td><td>29</td><td>
 An application sends the message to all top-level windows in the system after changing the 
 pool of font resources.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_GetHotkey"><span class="selflink">WM_GetHotkey</span></td><td>51</td><td>
 An application sends this message to determine the hot key associated with a window.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_GetMinMaxInfo"><span class="selflink">WM_GetMinMaxInfo</span></td><td>36</td><td>
 The message is sent to a window when the size or position of the window is about to change.
 <p />
 An application can use this message to override the window's default maximized size and 
 position or its default minimum or maximum tracking size.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Help"><span class="selflink">WM_Help</span></td><td>83</td><td>
 Indicates that the user pressed the <span class="code">F1</span> key.
 <p />
 If a menu is active when <span class="code">F1</span> is pressed <span class="selflink">WM_Help</span> is sent to the window associated with the menu; 
 otherwise WmHELP is sent to the window that has the keyboard focus.
 <p />
 If no window has the keyboard focus <span class="selflink">WM_Help</span> is sent to the currently active window.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_HScroll"><span class="selflink">WM_HScroll</span></td><td>276</td><td>
 This message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar.
 <p />
 This message is also sent to the owner of a horizontal scroll bar control when a 
 scroll event occurs in the control.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_InitDialog"><span class="selflink">WM_InitDialog</span></td><td>272</td><td>
 The message is sent to the dialog box procedure immediately before a dialog box is displayed.
 <p />
 Dialog box procedures typically use this message to initialize controls and carry out any other 
 initialization tasks that affect the appearance of the dialog box.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_KeyDown"><span class="selflink">WM_KeyDown</span></td><td>256</td><td>
 The message is posted to the window with the keyboard focus when a nonsystem key is pressed.
 <p />
 A nonsystem key is a key that is pressed when the <span class="code">ALT</span> key is not pressed. 
 <p /><span class="code">wParam</span> 
 The virtual-key code of the nonsystem key.
 <p /><span class="code">lParam</span> 
 The repeat count, scan code, extended-key flag, context code, 
 previous key-state flag, and transition-state flag, as shown following:
 <p />
 Bit 0-15: The repeat count for the current message. 
 <p />
 The value is the number of times the keystroke is autorepeated as a result of the user holding down the key. 
 <p />
 If the keystroke is held long enough, multiple messages are sent. However, the repeat count is not cumulative
 <p />
 Bit 16-23: The scan code. The value depends on the OEM.
 <p />
 Bit 24: Indicates whether the key is an extended key, 
 such as the right-hand ALT and CTRL keys that appear on an enhanced 101- or 102-key keyboard. 
 <p />
 The value is 1 if it is an extended key; otherwise, it is 0.
 <p />
 Bit 25-28: Reserved; do not use
 <p />
 Bit 29: The context code. 
 <p />
 The value is always 0 for a <span class="selflink">WM_KeyDown</span> message.
 <p />
 Bit 30: The previous key state. 
 <p />
 The value is 1 if the key is down before the message is sent, or it is zero if the key is up.
 <p />
 Bit 31: The transition state. 
 <p />
 The value is always 0 for a <span class="selflink">WM_KeyDown</span> message.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_KeyUp"><span class="selflink">WM_KeyUp</span></td><td>257</td><td>
 The message is posted to the window with the keyboard focus when a nonsystem key is released.
 <p />
 A nonsystem key is a key that is pressed when the <span class="code">ALT</span> key is not pressed 
 or a keyboard key that is pressed when a window has the keyboard focus. 
 <p /><span class="code">wParam</span> 
 The virtual-key code of the nonsystem key.
 <p /><span class="code">lParam</span> 
 The repeat count, scan code, extended-key flag, context code, 
 previous key-state flag, and transition-state flag, as shown following:
 <p />
 Bit 0-15: The repeat count for the current message. 
 <p />
 The value is the number of times the keystroke is autorepeated as a result of the user holding down the key.
 <p /> 
 The repeat count is always 1 for a <span class="selflink">WM_KeyUp</span> message. 
 <p />
 If the keystroke is held long enough, multiple messages are sent. However, the repeat count is not cumulative
 <p />
 Bit 16-23: The scan code. The value depends on the OEM.
 <p />
 Bit 24: Indicates whether the key is an extended key, 
 such as the right-hand ALT and CTRL keys that appear on an enhanced 101- or 102-key keyboard. 
 <p />
 The value is 1 if it is an extended key; otherwise, it is 0.
 <p />
 The value is 1 if it is an extended key; otherwise, it is 0.
 <p />
 Bit 25-28: Reserved; do not use
 <p />
 Bit 29: The context code. 
 <p />
 The value is always 0 for a <span class="selflink">WM_KeyUp</span> message.
 <p />
 Bit 30: The previous key state. 
 <p />
 The value is always 1 for a <span class="selflink">WM_KeyUp</span> message.
 <p />
 Bit 31: The transition state. 
 <p />
 The value is always 1 for a <span class="selflink">WM_KeyUp</span> message.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_KillFocus"><span class="selflink">WM_KillFocus</span></td><td>8</td><td>
 The message is sent to a window immediately before it loses the keyboard focus.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_LButtonDblClk"><span class="selflink">WM_LButtonDblClk</span></td><td>515</td><td>
 The message is posted when the user double-clicks the left mouse button while the cursor is in the 
 client area of a window.
 <p />
 If the mouse is not captured the message is posted to the window beneath the cursor. 
 <p />
 Otherwise the message is posted to the window that has captured the mouse.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_LButtonDown"><span class="selflink">WM_LButtonDown</span></td><td>513</td><td>
 The message is posted when the user presses the left mouse button while the cursor is in the 
 client area of a window. 
 <p />
 If the mouse is not captured the message is posted to the window beneath the cursor. 
 <p />
 Otherwise the message is posted to the window that has captured the mouse.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_LButtonUp"><span class="selflink">WM_LButtonUp</span></td><td>514</td><td>
 The message is posted when the user releases the left mouse button while the cursor is in the 
 client area of a window. 
 <p />
 If the mouse is not captured the message is posted to the window beneath the cursor. 
 <p />
 Otherwise the message is posted to the window that has captured the mouse.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MButtonDblClk"><span class="selflink">WM_MButtonDblClk</span></td><td>521</td><td>
 The WmMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the 
 cursor is in the client area of a window.
 <p />
 If the mouse is not captured the message is posted to the window beneath the cursor.
 <p />
 Otherwise the message is posted to the window that has captured the mouse.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MButtonDown"><span class="selflink">WM_MButtonDown</span></td><td>519</td><td>
 The message is posted when the user presses the middle mouse button while the cursor is in the 
 client area of a window.
 <p />
 If the mouse is not captured the message is posted to the window beneath the cursor.
 <p />
 Otherwise the message is posted to the window that has captured the mouse.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MButtonUp"><span class="selflink">WM_MButtonUp</span></td><td>520</td><td>
 The message is posted when the user releases the middle mouse button while the cursor is in the 
 client area of a window. 
 <p />
 If the mouse is not captured the message is posted to the window beneath the cursor. 
 <p />
 Otherwise the message is posted to the window that has captured the mouse.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MdiActivate"><span class="selflink">WM_MdiActivate</span></td><td>546</td><td>
 An application sends this message to a multiple-document interface (MDI) client window to 
 instruct the client window to activate a different MDI child window.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MdiCreate"><span class="selflink">WM_MdiCreate</span></td><td>544</td><td>
 An application sends this message to a multiple-document interface (MDI) client window to 
 create an MDI child window.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MdiDestroy"><span class="selflink">WM_MdiDestroy</span></td><td>545</td><td>
 An application sends this message to a multiple-document interface (MDI) client window to 
 close an MDI child window.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MenuCommand"><span class="selflink">WM_MenuCommand</span></td><td>294</td><td>
 The message is sent when the user makes a selection from a menu.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MenuRButtonUp"><span class="selflink">WM_MenuRButtonUp</span></td><td>290</td><td>
 The message is sent when the user releases the right mouse button while the cursor is on a menu item.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MenuSelect"><span class="selflink">WM_MenuSelect</span></td><td>287</td><td>
 The message is sent to a menu's owner window when the user selects a menu item.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseActivate"><span class="selflink">WM_MouseActivate</span></td><td>33</td><td>
 The message is sent when the cursor is in an inactive window and the user presses a mouse button.
 <p />
 The parent window receives this message only if the child window passes it to the <span class="code">DefWindowProc</span> function.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseHover"><span class="selflink">WM_MouseHover</span></td><td>673</td><td>
 The message is posted to a window when the cursor hovers over the client area of the window for the 
 period of time specified in a prior call to <span class="code">TrackMouseEvent</span>.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseLeave"><span class="selflink">WM_MouseLeave</span></td><td>675</td><td>
 The message is posted to a window when the cursor leaves the client area of the 
 window specified in a prior call to <span class="code">TrackMouseEvent</span>.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseWheel"><span class="selflink">WM_MouseWheel</span></td><td>522</td><td>
 The message is sent to the focus window when the mouse wheel is rotated.
 <p />
 The <span class="code">DefWindowProc</span> function propagates the message to the window's parent. 
 <p />
 There should be no internal forwarding of the message since <span class="code">DefWindowProc</span> propagates it up the 
 parent chain until it finds a window that processes it.
 <p /><span class="code">wParam</span> 
 The high-order word indicates the distance the wheel is rotated, 
 expressed in multiples or divisions of WHEEL_DELTA, which is 120. 
 A positive value indicates that the wheel was rotated forward, away from the user; 
 a negative value indicates that the wheel was rotated backward, toward the user.
 <p />
 The low-order word indicates whether various virtual keys are down.
 <p /><span class="code">lParam</span> 
 The low-order word specifies the x-coordinate of the pointer, relative to the upper-left corner of the screen.
 <p />
 The high-order word specifies the y-coordinate of the pointer, relative to the upper-left corner of the screen
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseHWheel"><span class="selflink">WM_MouseHWheel</span></td><td>526</td><td>
 The message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated.
 <p />
 The <span class="code">DefWindowProc</span> function propagates the message to the window's parent.
 <p />
 There should be no internal forwarding of the message since <span class="code">DefWindowProc</span> propagates it up 
 the parent chain until it finds a window that processes it.
 <p /><span class="code">wParam</span> 
 The high-order word indicates the distance the wheel is rotated, 
 expressed in multiples or factors of WHEEL_DELTA, which is set to 120. 
 A positive value indicates that the wheel was rotated to the right; 
 a negative value indicates that the wheel was rotated to the left.
 <p />
 The low-order word indicates whether various virtual keys are down.
 <p /><span class="code">lParam</span> 
 The low-order word specifies the x-coordinate of the pointer, relative to the upper-left corner of the screen.
 <p />
 The high-order word specifies the y-coordinate of the pointer, relative to the upper-left corner of the screen
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Moving"><span class="selflink">WM_Moving</span></td><td>534</td><td>
 The message is sent to a window that the user is moving.
 <p />
 By processing this message an application can monitor the position of the drag rectangle and
  if needed change its position.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcActivate"><span class="selflink">WM_NcActivate</span></td><td>134</td><td>
 Non Client Area Activated Caption(Title) of the Form.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcCalcSize"><span class="selflink">WM_NcCalcSize</span></td><td>131</td><td>
 The message is sent when the size and position of a window's client area must be calculated.
 <p />
 By processing this message an application can control the content of the window's client area 
 when the size or position of the window changes.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcCreate"><span class="selflink">WM_NcCreate</span></td><td>129</td><td>
 The message is sent prior to the <span class="selflink">WM_Create</span> message when a window is first created.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcDestroy"><span class="selflink">WM_NcDestroy</span></td><td>130</td><td>
 The message informs a window that its nonclient area is being destroyed.
 <p />
 The <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_DestroyWindow.htm">DestroyWindow(IntPtr)</a> function sends the <span class="selflink">WM_NcDestroy</span> message to the 
 window following the <span class="selflink">WM_Destroy</span> message.
 <p /><span class="selflink">WM_Destroy</span> is used to free the allocated memory object associated with the window.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcLButtonDblClk"><span class="selflink">WM_NcLButtonDblClk</span></td><td>163</td><td>
 The message is posted when the user double-clicks the left mouse button while the cursor is 
 within the nonclient area of a window.
 <p />
 This message is posted to the window that contains the cursor.
 <p />
 If a window has captured the mouse this message is not posted.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcMButtonDblClk"><span class="selflink">WM_NcMButtonDblClk</span></td><td>169</td><td>
 The message is posted when the user double-clicks the middle mouse button while the cursor is 
 within the nonclient area of a window.
 <p />
 This message is posted to the window that contains the cursor. 
 <p />
 If a window has captured the mouse this message is not posted.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcMButtonDown"><span class="selflink">WM_NcMButtonDown</span></td><td>167</td><td>
 The message is posted when the user presses the middle mouse button while the cursor is 
 within the nonclient area of a window. 
 <p />
 This message is posted to the window that contains the cursor. 
 <p />
 If a window has captured the mouse this message is not posted.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcMButtonUp"><span class="selflink">WM_NcMButtonUp</span></td><td>168</td><td>
 The message is posted when the user releases the middle mouse button while the cursor is 
 within the nonclient area of a window.
 <p />
 This message is posted to the window that contains the cursor. 
 <p />
 If a window has captured the mouse this message is not posted.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcMouseLeave"><span class="selflink">WM_NcMouseLeave</span></td><td>674</td><td>
 The message is posted to a window when the cursor leaves the nonclient area of the 
 window specified in a prior call to <span class="code">TrackMouseEvent</span>.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcPaint"><span class="selflink">WM_NcPaint</span></td><td>133</td><td>
 The message is sent to a window when its frame must be painted.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcRButtonDblClk"><span class="selflink">WM_NcRButtonDblClk</span></td><td>166</td><td>
 The message is posted when the user double-clicks the right mouse button while the cursor is 
 within the nonclient area of a window.
 <p />
 This message is posted to the window that contains the cursor.
 <p />
 If a window has captured the mouse this message is not posted.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Paint"><span class="selflink">WM_Paint</span></td><td>15</td><td>
 Occurs when the control needs repainting.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_PowerBroadcast"><span class="selflink">WM_PowerBroadcast</span></td><td>536</td><td>
 Notifies applications that a power-management event has occurred.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Print"><span class="selflink">WM_Print</span></td><td>791</td><td>
 The message is sent to a window to request that it draw itself in the specified device context
  most commonly in a printer device context.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_PrintClient"><span class="selflink">WM_PrintClient</span></td><td>792</td><td>
 The message is sent to a window to request that it draw its client area in the specified device context 
 most commonly in a printer device context.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_QueryEndSession"><span class="selflink">WM_QueryEndSession</span></td><td>17</td><td>
 The message is sent when the user chooses to end the session or when an application calls one of the 
 system shutdown functions.
 <p />
 If any application returns zero the session is not ended.
 <p />
 The system stops sending <span class="selflink">WM_QueryEndSession</span> messages as soon as one application returns zero.
 <p />
 After processing this message the system sends the <span class="selflink">WM_EndSession</span> message with the 
 <span class="code">wParam</span> parameter set to the results of the <span class="selflink">WM_QueryEndSession</span> message.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Quit"><span class="selflink">WM_Quit</span></td><td>18</td><td>
 Once received it ends the application's Message Loop signaling the application to end.
 <p />
 It can be sent by pressing <span class="code">Alt</span>+<span class="code">F4</span> Clicking the X in the upper right-hand of the 
 program or going to File-&gt;Exit.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_RButtonDblClk"><span class="selflink">WM_RButtonDblClk</span></td><td>518</td><td>
 The message is posted when the user double-clicks the right mouse button while the cursor is in the 
 client area of a window.
 <p />
 If the mouse is not captured the message is posted to the window beneath the cursor.
 <p />
 Otherwise the message is posted to the window that has captured the mouse.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_RButtonDown"><span class="selflink">WM_RButtonDown</span></td><td>516</td><td>
 The message is posted when the user presses the right mouse button while the cursor is in the 
 client area of a window.
 <p />
 If the mouse is not captured the message is posted to the window beneath the cursor.
 <p />
 Otherwise the message is posted to the window that has captured the mouse.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_RButtonUp"><span class="selflink">WM_RButtonUp</span></td><td>517</td><td>
 The message is posted when the user releases the right mouse button while the cursor is in the 
 client area of a window.
 <p />
 If the mouse is not captured the message is posted to the window beneath the cursor.
 <p />
 Otherwise the message is posted to the window that has captured the mouse.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SetFocus"><span class="selflink">WM_SetFocus</span></td><td>7</td><td>
 When the control got the focus.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SetHotkey"><span class="selflink">WM_SetHotkey</span></td><td>50</td><td>
 An application sends this message to a window to associate a hot key with the window.
 <p />
 When the user presses the hot key the system activates the window.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SpoolerStatus"><span class="selflink">WM_SpoolerStatus</span></td><td>42</td><td>
 The message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_StyleChanged"><span class="selflink">WM_StyleChanged</span></td><td>125</td><td>
 The message is sent to a window after the <span class="code">SetWindowLong</span> function has changed one or more of the window's styles.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_StyleChanging"><span class="selflink">WM_StyleChanging</span></td><td>124</td><td>
 The message is sent to a window when the <span class="code">SetWindowLong</span> function is about to change one or more of the 
 window's styles.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SysColorChange"><span class="selflink">WM_SysColorChange</span></td><td>21</td><td>
 This message is sent to all top-level windows when a change is made to a system color setting.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SysKeyDown"><span class="selflink">WM_SysKeyDown</span></td><td>260</td><td>
 The message is posted to the window with the keyboard focus when the user presses the <span class="code">F10</span> key 
 (which activates the menu bar) or holds down the <span class="code">ALT</span> key and then presses another key.
 <p />
 It also occurs when no window currently has the keyboard focus; 
 in this case the <span class="selflink">WM_SysKeyDown</span> message is sent to the active window.
 <p />
 The window that receives the message can distinguish between these two contexts by checking the 
 context code in the <span class="code">lParam</span> parameter.
 <p /><span class="code">wParam</span> 
 The virtual-key code of the key being pressed.
 <p /><span class="code">lParam</span> 
 The repeat count, scan code, extended-key flag, context code, 
 previous key-state flag, and transition-state flag, as shown following:
 <p />
 Bit 0-15: The repeat count for the current message. 
 The value is the number of times the keystroke is autorepeated as a result of the user holding down the key. 
 <p />
 If the keystroke is held long enough, multiple messages are sent. However, the repeat count is not cumulative.
 <p />
 Bit 16-23: The scan code. The value depends on the OEM.
 <p />
 Bit 24: Indicates whether the key is an extended key, 
 such as the right-hand ALT and CTRL keys that appear on an enhanced 101- or 102-key keyboard. 
 <p />
 The value is 1 if it is an extended key; otherwise, it is 0.
 <p />
 Bit 25-28: Reserved; do not use
 <p />
 Bit 29: The context code. 
 <p />
 The value is 1 if the ALT key is down while the key is pressed; 
 it is 0 if the <span class="selflink">WM_SysKeyDown</span> message is posted to the active window because 
 no window has the keyboard focus.
 <p />
 Bit 30: The previous key state. 
 <p />
 The value is 1 if the key is down before the message is sent, or it is 0 if the key is up.
 <p />
 Bit 31: The transition state. 
 <p />
 The value is always 0 for a <span class="selflink">WM_SysKeyDown</span> message.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SysKeyUp"><span class="selflink">WM_SysKeyUp</span></td><td>261</td><td>
 The message is posted to the window with the keyboard focus when the user releases a key that 
 was pressed while the <span class="code">ALT</span> key was held down.
 <p />
 It also occurs when no window currently has the keyboard focus; 
 in this case the <span class="selflink">WM_SysKeyUp</span> message is sent to the active window.
 <p />
 The window that receives the message can distinguish between these two contexts by checking the 
 context code in the <span class="code">lParam</span> parameter.
 <p /><span class="code">wParam</span> 
 The virtual-key code of the key being released.
 <p /><span class="code">lParam</span> 
 The repeat count, scan code, extended-key flag, context code, 
 previous key-state flag, and transition-state flag, as shown following:
 <p />
 Bit 0-15: The repeat count for the current message. 
 <p />
 The value is the number of times the keystroke is autorepeated as a result of the user holding down the key. 
 <p />
 The repeat count is always one for a <span class="selflink">WM_SysKeyUp</span> message.
 <p />
 Bit 16-23: The scan code. The value depends on the OEM.
 <p />
 Bit 24: Indicates whether the key is an extended key, 
 such as the right-hand ALT and CTRL keys that appear on an enhanced 101- or 102-key keyboard. 
 <p />
 The value is 1 if it is an extended key; otherwise, it is zero.
 <p />
 Bit 25-28: Reserved; do not use
 <p />
 Bit 29: The context code. 
 <p />
 The value is 1 if the ALT key is down while the key is released; 
 it is zero if the <span class="selflink">WM_SysKeyDown</span> message is posted to the active window because 
 no window has the keyboard focus.
 <p />
 Bit 30: The previous key state. 
 <p />
 The value is always 1 for a <span class="selflink">WM_SysKeyUp</span> message.
 <p />
 Bit 31: The transition state. 
 <p />
 The value is always 1 for a <span class="selflink">WM_SysKeyUp</span> message.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_TimeChange"><span class="selflink">WM_TimeChange</span></td><td>30</td><td>
 A message that is sent whenever there is a change in the system time.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Undo"><span class="selflink">WM_Undo</span></td><td>772</td><td>
 An application sends this message to an edit control to undo the last operation.
 <p />
 When this message is sent to an edit control the previously deleted text is restored or the 
 previously added text is deleted.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_UserChanged"><span class="selflink">WM_UserChanged</span></td><td>84</td><td>
 The message is sent to all windows after the user has logged on or off.
 <p />
 When the user logs on or off the system updates the user-specific settings.
 <p />
 The system sends this message immediately after updating the settings.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_VScroll"><span class="selflink">WM_VScroll</span></td><td>277</td><td>
 The message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar.
 <p />
 This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_WindowPosChanged"><span class="selflink">WM_WindowPosChanged</span></td><td>71</td><td>
 The message is sent to a window whose size position or place in the Z order has changed as a 
 result of a call to the <span class="code">SetWindowPos</span> function or another window-management function.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Copy"><span class="selflink">WM_Copy</span></td><td>769</td><td>
 An application sends this message to an edit control or combo box to copy the current 
 selection to the clipboard in <span class="code">CF_TEXT</span> format.
 <p /><span class="code">wParam</span> 
 This parameter is not used and must be zero.
 <p /><span class="code">lParam</span> 
 This parameter is not used and must be zero.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Cut"><span class="selflink">WM_Cut</span></td><td>768</td><td>
 An application sends this message to an edit control or combo box to delete (cut) the 
 current selection if any in the edit control and copy the deleted text to the clipboard in <span class="code">CF_TEXT</span> format.
 <p /><span class="code">wParam</span> 
 This parameter is not used and must be zero.
 <p /><span class="code">lParam</span> 
 This parameter is not used and must be zero.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Paste"><span class="selflink">WM_Paste</span></td><td>770</td><td>
 An application sends this message to an edit control or combo box to copy the current content of the 
 clipboard to the edit control at the current caret position.
 <p />
 Data is inserted only if the clipboard contains data in <span class="code">CF_TEXT</span> format.
 <p /><span class="code">wParam</span> 
 This parameter is not used and must be zero.
 <p /><span class="code">lParam</span> 
 This parameter is not used and must be zero.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Clear"><span class="selflink">WM_Clear</span></td><td>771</td><td>
 An application sends the message to an edit control or combo box to delete (clear) the 
 current selection if any from the edit control.
 <p /><span class="code">wParam</span> 
 This parameter is not used and must be zero.
 <p /><span class="code">lParam</span> 
 This parameter is not used and must be zero.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_XButtonDown"><span class="selflink">WM_XButtonDown</span></td><td>523</td><td>
 Posted when the user presses the first or second X button while the cursor is in the client area of a window.
 <p />
 If the mouse is not captured, the message is posted to the window beneath the cursor.
 <p />
 Otherwise, the message is posted to the window that has captured the mouse.
 <p /><span class="code">wParam</span> 
 The low-order word indicates whether various virtual keys are down.
 <p />
 The high-order word indicates which button was clicked.
 <p /><span class="code">lParam</span> 
 The low-order word specifies the x-coordinate of the cursor. 
 The coordinate is relative to the upper-left corner of the client area.
 <p />
 The high-order word specifies the y-coordinate of the cursor. 
 The coordinate is relative to the upper-left corner of the client area.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_XButtonUp"><span class="selflink">WM_XButtonUp</span></td><td>524</td><td>
 Posted when the user releases the first or second X button while the cursor is in the client area of a window.
 <p />
 If the mouse is not captured, the message is posted to the window beneath the cursor.
 <p />
 Otherwise, the message is posted to the window that has captured the mouse.
 <p /><span class="code">wParam</span> 
 The low-order word indicates whether various virtual keys are down.
 <p />
 The high-order word indicates which button was double-clicked.
 <p /><span class="code">lParam</span> 
 The low-order word specifies the x-coordinate of the cursor. 
 The coordinate is relative to the upper-left corner of the client area.
 <p />
 The high-order word specifies the y-coordinate of the cursor. 
 The coordinate is relative to the upper-left corner of the client area.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_XButtonDblClk"><span class="selflink">WM_XButtonDblClk</span></td><td>525</td><td>
 Posted when the user double-clicks the first or second X button while the cursor is in the client area of a window.
 <p />
 If the mouse is not captured, the message is posted to the window beneath the cursor.
 <p />
 Otherwise, the message is posted to the window that has captured the mouse.
 <p /><span class="code">wParam</span> 
 The low-order word indicates whether various virtual keys are down.
 <p />
 The high-order word indicates which button was double-clicked.
 <p /><span class="code">lParam</span> 
 The low-order word specifies the x-coordinate of the cursor. 
 The coordinate is relative to the upper-left corner of the client area.
 <p />
 The high-order word specifies the y-coordinate of the cursor. 
 The coordinate is relative to the upper-left corner of the client area.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcXButtonDown"><span class="selflink">WM_NcXButtonDown</span></td><td>171</td><td>
 Posted when the user presses the first or second X button while the cursor is in the client area of a window.
 <p />
 If the mouse is not captured, the message is posted to the window beneath the cursor.
 <p />
 Otherwise, the message is posted to the window that has captured the mouse.
 <p /><span class="code">wParam</span> 
 The low-order word specifies the hit-test value returned by the 
 <span class="code">DefWindowProc</span> function from processing the <span class="selflink">WM_NchitTest</span> message. 
 <p />
 For a list of hit-test values, <span class="selflink">WM_NchitTest</span>.
 <p />
 The high-order word indicates which button was pressed. 
 <p /><span class="code">lParam</span> 
 A pointer to a <span class="code">POINTS</span> structure that contains the x- and y-coordinates of the cursor.
 <p />
 The coordinates are relative to the upper-left corner of the screen. 
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcXButtonUp"><span class="selflink">WM_NcXButtonUp</span></td><td>172</td><td>
 Posted when the user releases the first or second X button while the cursor is in the nonclient area of a window.
 <p />
 This message is posted to the window that contains the cursor.
 <p />
 If a window has captured the mouse, this message is not posted.
 <p /><span class="code">wParam</span> 
 The low-order word specifies the hit-test value returned by the 
 <span class="code">DefWindowProc</span> function from processing the <span class="selflink">WM_NchitTest</span> message. 
 <p />
 For a list of hit-test values, <span class="selflink">WM_NchitTest</span>.
 <p />
 The high-order word indicates which button was released. 
 <p /><span class="code">lParam</span> 
 A pointer to a <span class="code">POINTS</span> structure that contains the x- and y-coordinates of the cursor.
 <p />
 The coordinates are relative to the upper-left corner of the screen. 
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_NcXButtonDblClk"><span class="selflink">WM_NcXButtonDblClk</span></td><td>173</td><td>
 Posted when the user double-clicks the first or second X button while the cursor is in the nonclient area of a window.
 <p />
 This message is posted to the window that contains the cursor.
 <p />
 If a window has captured the mouse, this message is not posted.
 <p /><span class="code">wParam</span> 
 The low-order word specifies the hit-test value returned by the 
 <span class="code">DefWindowProc</span> function from processing the <span class="selflink">WM_NchitTest</span> message. 
 <p />
 For a list of hit-test values, <span class="selflink">WM_NchitTest</span>.
 <p />
 The high-order word indicates which button was double-clicked. 
 <p /><span class="code">lParam</span> 
 A pointer to a <span class="code">POINTS</span> structure that contains the x- and y-coordinates of the cursor.
 <p />
 The coordinates are relative to the upper-left corner of the screen. 
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Input"><span class="selflink">WM_Input</span></td><td>255</td><td>
 Sent to the window that is getting raw input.
 <p />
 A window receives this message through its <span class="code">WndProc</span> function. 
 <p /><span class="code">wParam</span> 
 The input code. 
 <p /><span class="code">lParam</span> 
 A handle to the <a href="T_DevCase_Interop_Unmanaged_Win32_Structures_RawInput.htm">RawInput</a> structure that contains the raw input from the device.
 <p />
 Call <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_GetRawInputDeviceInfo.htm">GetRawInputDeviceInfo(IntPtr, GetRawInputDeviceInfoCommand, IntPtr, UInt32<span id="LSTCACDF19B_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_7?cpp=%");</script>)</a> to get more information regarding the device.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_InputDeviceChange"><span class="selflink">WM_InputDeviceChange</span></td><td>254</td><td>
 Sent to the window that registered to receive raw input. 
 <p />
 A window receives this message through its <span class="code">WndProc</span> function.
 <p /><span class="code">wParam</span> 
 This parameter can be one of the following values.
 <p />
 GIDC_ARRIVAL (<span class="code">1</span>): A new device has been added to the system. 
 <p />
 GIDC_REMOVAL (<span class="code">0</span>): A new device has been removed from the system. 
 <p /><span class="code">lParam</span> 
 A handle to the <a href="T_DevCase_Interop_Unmanaged_Win32_Structures_RawInput.htm">RawInput</a> structure that contains the raw input from the device.
 <p />
 Call <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_GetRawInputDeviceInfo.htm">GetRawInputDeviceInfo(IntPtr, GetRawInputDeviceInfoCommand, IntPtr, UInt32<span id="LSTCACDF19B_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_8?cpp=%");</script>)</a> to get more information regarding the device.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DwmSendIconicThumbnail"><span class="selflink">WM_DwmSendIconicThumbnail</span></td><td>803</td><td>
 Instructs a window to provide a static bitmap to use as a thumbnail representation of that window.
 <p />
 Desktop Window Manager (DWM) sends this message to a window if all of the following situations are true: 
 <p /><span class="code">DWM</span> is displaying an iconic representation of the window.
 <p />
 The <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmWindowAttribute.htm">HasIconicBitmap</a> and <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmWindowAttribute.htm">ForceIconicRepresentation</a> attributes are set on the window.
 <p />
 The window did not set a cached bitmap.
 <p />
 There is room in the cache for another bitmap.
 <p /><span class="code">wParam</span> 
 Not used. 
 <p /><span class="code">lParam</span> 
 The <span class="code">HIWORD</span> of this value is the maximum possible width of the thumbnail.
 <p />
 The <span class="code">LOWORD</span> is the maximum possible height.
 <p />
 If a thumbnail has a dimension that exceeds one or both of these values, 
 the <span class="code">DWM</span> does not accept the thumbnail.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DwmSendIconicLivePreviewBitmap"><span class="selflink">WM_DwmSendIconicLivePreviewBitmap</span></td><td>806</td><td>
 Instructs a window to provide a static bitmap to use as a live preview (also known as a <span class="code">Peek preview</span>) 
 of that window.
 <p />
 Desktop Window Manager (DWM) sends this message to a window if all of the following situations are true: 
 <p />
 Live preview has been invoked on the window
 <p />
 The <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmWindowAttribute.htm">HasIconicBitmap</a> and <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmWindowAttribute.htm">ForceIconicRepresentation</a> attributes are set on the window.
 <p />
 An iconic representation is the only one that exists for this window.
 <p /><span class="code">wParam</span> 
 Not used. 
 <p /><span class="code">lParam</span> 
 Not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DwmCompositionChanged"><span class="selflink">WM_DwmCompositionChanged</span></td><td>798</td><td>
 Informs all top-level windows that Desktop Window Manager (DWM) composition has been enabled or disabled.
 <p />
 Note: As of Windows 8/8.1/10, DWM composition is always enabled, 
 so this message is not sent regardless of video mode changes.
 <p /><span class="code">wParam</span> 
 Not used. 
 <p /><span class="code">lParam</span> 
 Not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.Wm_DwmNcRenderingChanged"><span class="selflink">Wm_DwmNcRenderingChanged</span></td><td>799</td><td>
 Sent when the non-client area rendering policy has changed.
 <p /><span class="code">wParam</span> 
 Specifies whether DWM rendering is enabled for the non-client area of the window. 
 <span class="keyword"><span id="LSTCACDF19B_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_9?vb=True|nu=true");</script></span> if enabled; otherwise, <span class="keyword"><span id="LSTCACDF19B_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_10?vb=False|nu=false");</script></span>. 
 <p /><span class="code">lParam</span> 
 Not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DwmColorizationColorChanged"><span class="selflink">WM_DwmColorizationColorChanged</span></td><td>800</td><td>
 Informs all top-level windows that the colorization color has changed.
 <p /><span class="code">wParam</span> 
 Specifies the new colorization color.<p />
 The color format is <span class="code">0xAARRGGBB</span>. 
 <p /><span class="code">lParam</span> 
 Specifies whether the new color is blended with opacity.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_DwmWindowMaximizedChanged"><span class="selflink">WM_DwmWindowMaximizedChanged</span></td><td>801</td><td>
 Sent when a Desktop Window Manager (DWM) composed window is maximized.
 <p /><span class="code">wParam</span> 
 Set to true to specify that the window has been maximized.
 <p /><span class="code">lParam</span> 
 Not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_CancelMode"><span class="selflink">WM_CancelMode</span></td><td>31</td><td>
 Sent to cancel certain modes, such as mouse capture.
 <p />
 For example, the system sends this message to the active window when a dialog box or message box is displayed.
 <p />
 Certain functions also send this message explicitly to the specified window regardless of 
 whether it is the active window.
 <p />
 For example, the EnableWindow function sends this message when disabling the specified window.
 <p /><span class="code">wParam</span> 
 Not used.
 <p /><span class="code">lParam</span> 
 Not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_QueryOpen"><span class="selflink">WM_QueryOpen</span></td><td>19</td><td>
 Sent to an icon when the user requests that the window be restored to its previous size and position.
 <p /><span class="code">wParam</span> 
 Not used.
 <p /><span class="code">lParam</span> 
 Not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_SetFont"><span class="selflink">WM_SetFont</span></td><td>48</td><td>
 Sets the font that a control is to use when drawing text.
 <p /><span class="code">wParam</span> 
 A handle to the font (HFONT).
 <p />
 If this parameter is <span class="keyword"><span id="LSTCACDF19B_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_11?vb=Nothing|cpp=nullptr|nu=null");</script></span>, the control uses the default system font to draw text. 
 <p /><span class="code">lParam</span> 
 The low-order word of lParam specifies whether the control should be redrawn immediately upon setting the font. 
 <p />
 If this parameter is TRUE, the control redraws itself.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_App"><span class="selflink">WM_App</span></td><td>32768</td><td>
 Used to define private messages, 
 usually of the form '<span class="selflink">WM_App</span> + x', where 'x' is an integer value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_User"><span class="selflink">WM_User</span></td><td>1024</td><td>
 Used to define private messages for use by private window classes, 
 usually of the form '<span class="selflink">WM_User</span> + x', where 'x' is an integer value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_CtlColorEdit"><span class="selflink">WM_CtlColorEdit</span></td><td>307</td><td>
 An edit control that is not read-only or disabled sends the <span class="selflink">WM_CtlColorEdit</span> message to 
 its parent window when the control is about to be drawn. 
 <p />
 By responding to this message, the parent window can use the specified device context handle to 
 set the text and background colors of the edit control.
 <p /><span class="code">wParam</span> 
 A handle to the device context for the edit control window.
 <p /><span class="code">lParam</span> 
 A handle to the edit control.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_KeyFirst"><span class="selflink">WM_KeyFirst</span></td><td>256</td><td>
 This message filters for keyboard messages. 
 <p />
 Use the <span class="selflink">WM_KeyFirst</span> and <span class="selflink">WM_KeyLast</span> messages 
 to filter for keyboard messages when using the 
 <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_GetMessage.htm">GetMessage(NativeMessage<span id="LSTCACDF19B_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_12?cpp=%");</script>, IntPtr, UInt32, UInt32)</a> and <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_PeekMessage.htm">PeekMessage(NativeMessage<span id="LSTCACDF19B_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_13?cpp=%");</script>, IntPtr, UInt32, UInt32, PeekMessageFlags)</a> functions.
 <p /><span class="code">wParam</span> 
 Not used.
 <p /><span class="code">lParam</span> 
 Not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_KeyLast"><span class="selflink">WM_KeyLast</span></td><td>265</td><td>
 This message filters for keyboard messages. 
 <p />
 Use the <span class="selflink">WM_KeyFirst</span> and <span class="selflink">WM_KeyLast</span> messages 
 to filter for keyboard messages when using the 
 <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_GetMessage.htm">GetMessage(NativeMessage<span id="LSTCACDF19B_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_14?cpp=%");</script>, IntPtr, UInt32, UInt32)</a> and <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_PeekMessage.htm">PeekMessage(NativeMessage<span id="LSTCACDF19B_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_15?cpp=%");</script>, IntPtr, UInt32, UInt32, PeekMessageFlags)</a> functions.
 <p /><span class="code">wParam</span> 
 Not used.
 <p /><span class="code">lParam</span> 
 Not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseFirst"><span class="selflink">WM_MouseFirst</span></td><td>512</td><td>
 This message filters for mouse messages. 
 <p />
 Use the <span class="selflink">WM_MouseFirst</span> and <span class="selflink">WM_MouseLast</span> messages 
 to filter for mouse messages when using the 
 <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_GetMessage.htm">GetMessage(NativeMessage<span id="LSTCACDF19B_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_16?cpp=%");</script>, IntPtr, UInt32, UInt32)</a> and <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_PeekMessage.htm">PeekMessage(NativeMessage<span id="LSTCACDF19B_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_17?cpp=%");</script>, IntPtr, UInt32, UInt32, PeekMessageFlags)</a> functions.
 <p /><span class="code">wParam</span> 
 Not used.
 <p /><span class="code">lParam</span> 
 Not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_MouseLast"><span class="selflink">WM_MouseLast</span></td><td>522</td><td>
 This message filters for mouse messages. 
 <p />
 Use the <span class="selflink">WM_MouseFirst</span> and <span class="selflink">WM_MouseLast</span> messages 
 to filter for mouse messages when using the 
 <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_GetMessage.htm">GetMessage(NativeMessage<span id="LSTCACDF19B_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_18?cpp=%");</script>, IntPtr, UInt32, UInt32)</a> and <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_PeekMessage.htm">PeekMessage(NativeMessage<span id="LSTCACDF19B_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_19?cpp=%");</script>, IntPtr, UInt32, UInt32, PeekMessageFlags)</a> functions.
 <p /><span class="code">wParam</span> 
 Not used.
 <p /><span class="code">lParam</span> 
 Not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.WindowMessages.WM_Timer"><span class="selflink">WM_Timer</span></td><td>275</td><td>
 Posted to the installing thread's message queue when a timer expires. 
 <p />
 The message is posted by the <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_GetMessage.htm">GetMessage(NativeMessage<span id="LSTCACDF19B_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_20?cpp=%");</script>, IntPtr, UInt32, UInt32)</a> 
 or <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_PeekMessage.htm">PeekMessage(NativeMessage<span id="LSTCACDF19B_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCACDF19B_21?cpp=%");</script>, IntPtr, UInt32, UInt32, PeekMessageFlags)</a> function.
 <p /><span class="code">wParam</span> 
 The timer identifier.
 <p /><span class="code">lParam</span> 
 A pointer to an application-defined callback function that was passed to the 
 SetTimer function when the timer was installed.
 </td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection"><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms644927%28v=vs.85%29.aspx" target="_blank">https://msdn.microsoft.com/en-us/library/windows/desktop/ms644927%28v=vs.85%29.aspx</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_DevCase_Interop_Unmanaged_Win32_Enums.htm">DevCase.Interop.Unmanaged.Win32.Enums Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>ElektroStudios 2020</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:ElektroStudios%40ElHacker.net?Subject=DevCase%20Class%20Library%20v3.3">ElektroStudios@ElHacker.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>