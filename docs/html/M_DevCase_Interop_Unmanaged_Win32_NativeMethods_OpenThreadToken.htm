<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>NativeMethods.OpenThreadToken Method (IntPtr, TokenAccess, Boolean, IntPtr)</title>
    <meta name="Language" content="en-us" />
    <meta name="Microsoft.Help.Id" content="M:DevCase.Interop.Unmanaged.Win32.NativeMethods.OpenThreadToken(System.IntPtr,DevCase.Interop.Unmanaged.Win32.Enums.TokenAccess,System.Boolean,System.IntPtr@)" />
    <meta name="Description" content="Opens the access token associated with a thread." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="DevCase.Interop.Unmanaged.Win32" />
    <meta name="file" content="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_OpenThreadToken" />
    <meta name="guid" content="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_OpenThreadToken" />
    
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">DevCase Class Library v3.3<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_DevCase_Class_Library_v3_3.htm" title="DevCase Class Library v3.3" tocid="roottoc">DevCase Class Library v3.3</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_DevCase_Class_Library_v3_3.htm" title="Namespaces" tocid="R_Project_DevCase_Class_Library_v3_3">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_DevCase_Interop.htm" title="DevCase.Interop Namespaces" tocid="G_DevCase_Interop">DevCase.Interop Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_DevCase_Interop_Unmanaged.htm" title="DevCase.Interop.Unmanaged Namespaces" tocid="G_DevCase_Interop_Unmanaged">DevCase.Interop.Unmanaged Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_DevCase_Interop_Unmanaged_Win32.htm" title="DevCase.Interop.Unmanaged.Win32" tocid="N_DevCase_Interop_Unmanaged_Win32">DevCase.Interop.Unmanaged.Win32</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_DevCase_Interop_Unmanaged_Win32_NativeMethods.htm" title="NativeMethods Class" tocid="T_DevCase_Interop_Unmanaged_Win32_NativeMethods">NativeMethods Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_DevCase_Interop_Unmanaged_Win32_NativeMethods.htm" title="NativeMethods Methods" tocid="Methods_T_DevCase_Interop_Unmanaged_Win32_NativeMethods">NativeMethods Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_DevCase_Interop_Unmanaged_Win32_NativeMethods_OpenThreadToken.htm" title="OpenThreadToken Method " tocid="Overload_DevCase_Interop_Unmanaged_Win32_NativeMethods_OpenThreadToken">OpenThreadToken Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_DevCase_Interop_Unmanaged_Win32_NativeMethods_OpenThreadToken.htm" title="OpenThreadToken Method (IntPtr, TokenAccess, Boolean, IntPtr)" tocid="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_OpenThreadToken">OpenThreadToken Method (IntPtr, TokenAccess, Boolean, IntPtr)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_DevCase_Interop_Unmanaged_Win32_NativeMethods_OpenThreadToken_1.htm" title="OpenThreadToken Method (SafeHandle, TokenAccess, Boolean, IntPtr)" tocid="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_OpenThreadToken_1">OpenThreadToken Method (SafeHandle, TokenAccess, Boolean, IntPtr)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>NativeMethods<span id="LSTA41D1C64_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_0?cpp=::|nu=.");</script>OpenThreadToken Method (IntPtr, TokenAccess, Boolean, IntPtr<span id="LSTA41D1C64_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_1?cpp=%");</script>)</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
 Opens the access token associated with a thread.
 </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_DevCase_Interop_Unmanaged_Win32.htm">DevCase.Interop.Unmanaged.Win32</a><br />
    <strong>Assembly:</strong>
   DevCase.Interop (in DevCase.Interop.dll) Version: 3.3.0.0 (3.3)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EECA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','cs','1','4');return false;">C#</a></div><div id="ID0EECA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','vb','2','4');return false;">VB</a></div><div id="ID0EECA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','cpp','3','4');return false;">C++</a></div><div id="ID0EECA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EECA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EECA');return false;" title="Copy">Copy</a></div></div><div id="ID0EECA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">DllImportAttribute</span>("AdvApi32.dll", SetLastError = true)]
<span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">OpenThreadToken</span>(
	<span class="identifier">IntPtr</span> <span class="parameter">threadHandle</span>,
	<span class="identifier">TokenAccess</span> <span class="parameter">desiredAccess</span>,
	<span class="identifier">bool</span> <span class="parameter">openAsSelf</span>,
	<span class="keyword">ref</span> <span class="identifier">IntPtr</span> <span class="parameter">refTokenHandle</span>
)</pre></div><div id="ID0EECA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">DllImportAttribute</span>("AdvApi32.dll", SetLastError := true&gt;]
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">OpenThreadToken</span> ( 
	<span class="parameter">threadHandle</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>,
	<span class="parameter">desiredAccess</span> <span class="keyword">As</span> <span class="identifier">TokenAccess</span>,
	<span class="parameter">openAsSelf</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="keyword">ByRef</span> <span class="parameter">refTokenHandle</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span>

<span class="keyword">Dim</span> <span class="parameter">threadHandle</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>
<span class="keyword">Dim</span> <span class="parameter">desiredAccess</span> <span class="keyword">As</span> <span class="identifier">TokenAccess</span>
<span class="keyword">Dim</span> <span class="parameter">openAsSelf</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
<span class="keyword">Dim</span> <span class="parameter">refTokenHandle</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>
<span class="keyword">Dim</span> <span class="parameter">returnValue</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>

<span class="parameter">returnValue</span> = <span class="identifier">NativeMethods</span>.<span class="identifier">OpenThreadToken</span>(<span class="parameter">threadHandle</span>, 
	<span class="parameter">desiredAccess</span>, <span class="parameter">openAsSelf</span>, <span class="parameter">refTokenHandle</span>)</pre></div><div id="ID0EECA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
[<span class="identifier">DllImportAttribute</span>(L"AdvApi32.dll", SetLastError = true)]
<span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">OpenThreadToken</span>(
	<span class="identifier">IntPtr</span> <span class="parameter">threadHandle</span>, 
	<span class="identifier">TokenAccess</span> <span class="parameter">desiredAccess</span>, 
	<span class="identifier">bool</span> <span class="parameter">openAsSelf</span>, 
	<span class="identifier">IntPtr</span>% <span class="parameter">refTokenHandle</span>
)</pre></div><div id="ID0EECA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">DllImportAttribute</span>("AdvApi32.dll", SetLastError = true)&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">OpenThreadToken</span> : 
        <span class="parameter">threadHandle</span> : <span class="identifier">IntPtr</span> * 
        <span class="parameter">desiredAccess</span> : <span class="identifier">TokenAccess</span> * 
        <span class="parameter">openAsSelf</span> : <span class="identifier">bool</span> * 
        <span class="parameter">refTokenHandle</span> : <span class="identifier">IntPtr</span> <span class="keyword">byref</span> <span class="keyword">-&gt;</span> <span class="identifier">bool</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EECA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">threadHandle</span></dt><dd>Type: <span class="nolink">System<span id="LSTA41D1C64_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IntPtr</span><br />
 A handle To the thread whose access token Is opened.
 </dd><dt><span class="parameter">desiredAccess</span></dt><dd>Type: <a href="T_DevCase_Interop_Unmanaged_Win32_Enums_TokenAccess.htm">DevCase.Interop.Unmanaged.Win32.Enums<span id="LSTA41D1C64_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TokenAccess</a><br />
 Specifies an access mask that specifies the requested types of access to the access token. 
 <p />
 These requested access types are compared with the discretionary access control list (DACL) 
 of the token to determine which accesses are granted or denied.
 </dd><dt><span class="parameter">openAsSelf</span></dt><dd>Type: <span class="nolink">System<span id="LSTA41D1C64_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</span><br /><span class="keyword"><span id="LSTA41D1C64_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_5?vb=True|nu=true");</script></span> if the access check is to be made against the process-level security context.
 <p /><span class="keyword"><span id="LSTA41D1C64_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_6?vb=False|nu=false");</script></span> if the access check is to be made against the current security context 
 of the thread calling the <span class="selflink">OpenThreadToken(IntPtr, TokenAccess, Boolean, IntPtr<span id="LSTA41D1C64_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_7?cpp=%");</script>)</span> function.
 <p />
 The <span class="parameter">openAsSelf</span> parameter allows the caller of this function to open the access token 
 of a specified thread when the caller is impersonating a token at SecurityIdentification level. 
 Without this parameter, the calling thread cannot open the access token on the specified thread 
 because it is impossible to open executive-level objects by using the SecurityIdentification impersonation level.
 </dd><dt><span class="parameter">refTokenHandle</span></dt><dd>Type: <span class="nolink">System<span id="LSTA41D1C64_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IntPtr</span><span id="LSTA41D1C64_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_9?cpp=%");</script><br />
 A <span class="nolink">IntPtr</span> handle that identifies the newly opened access token when the function returns.
 </dd></dl><h4 class="subHeading">Return Value</h4>Type: <span class="nolink">Boolean</span><br />
 If the function succeeds, the return value is <span class="keyword"><span id="LSTA41D1C64_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_10?vb=True|nu=true");</script></span>.
 <p />
 If the function fails, the return value is <span class="keyword"><span id="LSTA41D1C64_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_11?vb=False|nu=false");</script></span>.
 <p />
 To get extended error information, call <span class="nolink">GetLastWin32Error<span id="LSTA41D1C64_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA41D1C64_12?cs=()|vb=|cpp=()|nu=()|fs=()");</script></span>.
 </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa379296%28v=vs.85%29.aspx" target="_blank">https://msdn.microsoft.com/en-us/library/windows/desktop/aa379296%28v=vs.85%29.aspx</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_DevCase_Interop_Unmanaged_Win32_NativeMethods.htm">NativeMethods Class</a></div><div class="seeAlsoStyle"><a href="Overload_DevCase_Interop_Unmanaged_Win32_NativeMethods_OpenThreadToken.htm">OpenThreadToken Overload</a></div><div class="seeAlsoStyle"><a href="N_DevCase_Interop_Unmanaged_Win32.htm">DevCase.Interop.Unmanaged.Win32 Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>ElektroStudios 2020</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:ElektroStudios%40ElHacker.net?Subject=DevCase%20Class%20Library%20v3.3">ElektroStudios@ElHacker.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>