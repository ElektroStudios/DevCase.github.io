<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>SystemParametersActionFlags Enumeration</title>
    <meta name="Title" content="SystemParametersActionFlags" />
    <meta name="Help.Id" content="T:DevCase.Win32.Enums.SystemParametersActionFlags" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Win32.Enums" />
    <meta name="guid" content="3960a837-c738-5e87-652f-5fa7acd604d6" />
    <meta name="Description" content="Flags for uiAction parameter of function." />
    <meta name="tocFile" content="../toc/IDDFA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>System<wbr />Parameters<wbr />Action<wbr />Flags Enumeration</h1>
            <div class="summary">
 Flags for <span class="code">uiAction</span> parameter of <a href="5777d09b-7c75-af00-f45b-2fd07ab7c4e6.htm">SystemParametersInfo(SystemParametersActionFlags, Boolean, Boolean<span id="LSTB88F61E_0" data-languageSpecificText="cpp=%"></span>, SystemParametersWinIniFlags)</a> function.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="bc387bbf-c905-2558-9de0-4a5ffd59a6a0.htm">DevCase.Win32.Enums</a><br /><strong>Assembly:</strong> DevCase.net48 (in DevCase.net48.dll) Version: 6.0.0.0 (6.0)<br /><strong>XMLNS for XAML:</strong> Not mapped to an xmlns.<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="identifier">SystemParametersActionFlags</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Enumeration</span> <span class="identifier">SystemParametersActionFlags</span>

<span class="keyword">Dim</span> <span class="parameter">instance</span> <span class="keyword">As</span> <span class="identifier">SystemParametersActionFlags</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">enum class</span> <span class="identifier">SystemParametersActionFlags</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">type</span> <span class="identifier">SystemParametersActionFlags</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Remarks</h2>
            <div id="IDBCSection">
              <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms724947(v=vs.85).aspx" target="_blank" rel="noopener noreferrer">https://msdn.microsoft.com/en-us/library/windows/desktop/ms724947(v=vs.85).aspx</a>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Members</h2>
            <div id="IDAEASection">
              <table id="enumMemberList" class="table is-hoverable">
                <tr>
                  <td>GetBeep</td>
                  <td>1</td>
                  <td>
 Determines whether the warning beeper is on.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_1" data-languageSpecificText="vb=True|nu=true"></span></span> if the beeper is on,
 or <span class="keyword"><span id="LSTB88F61E_2" data-languageSpecificText="vb=False|nu=false"></span></span> if it is off.
 </td>
                </tr>
                <tr>
                  <td>SetBeep</td>
                  <td>2</td>
                  <td>
 Turns the warning beeper on or off. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_3" data-languageSpecificText="vb=True|nu=true"></span></span> for on, or <span class="keyword"><span id="LSTB88F61E_4" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 </td>
                </tr>
                <tr>
                  <td>GetMouse</td>
                  <td>3</td>
                  <td>
 Retrieves the two mouse threshold values and the mouse speed.
 </td>
                </tr>
                <tr>
                  <td>SetMouse</td>
                  <td>4</td>
                  <td>
 Sets the two mouse threshold values and the mouse speed.
 </td>
                </tr>
                <tr>
                  <td>Getborder</td>
                  <td>5</td>
                  <td>
 Retrieves the border multiplier factor that determines the width of a window's sizing border.
 The <span class="code">pvParam</span> parameter must point to an <span class="noLink">Int32</span> variable that receives this value.
 </td>
                </tr>
                <tr>
                  <td>SetBorder</td>
                  <td>6</td>
                  <td>
 Sets the border multiplier factor that determines the width of a window's sizing border.
 The <span class="code">uiParam</span> parameter specifies the new value.
 </td>
                </tr>
                <tr>
                  <td>GetKeyboardSpeed</td>
                  <td>10</td>
                  <td>
 Retrieves the keyboard repeat-speed setting, which is a value in the range 
 from 0 (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second). 
 The actual repeat rates are hardware-dependent and may vary from a linear scale by as much as 20%. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Int32</span> variable that receives the setting
 </td>
                </tr>
                <tr>
                  <td>SetKeyboardSpeed</td>
                  <td>11</td>
                  <td>
 Sets the keyboard repeat-speed setting. 
 The <span class="code">uiParam</span> parameter must specify a value in the range 
 from 0 (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second).
 The actual repeat rates are hardware-dependent and may vary from a linear scale by as much as 20%.
 If <span class="code">uiParam</span> is greater than 31, the parameter is set to 31.
 </td>
                </tr>
                <tr>
                  <td>LangDriver</td>
                  <td>12</td>
                  <td>
 Not implemented.
 </td>
                </tr>
                <tr>
                  <td>IconHorizontalSpacing</td>
                  <td>13</td>
                  <td>
 Sets or retrieves the width, in pixels, of an icon cell. 
 The system uses this rectangle to arrange icons in large icon view.
 To set this value, set <span class="code">uiParam</span> to the new value and set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_5" data-languageSpecificText="cpp=nullptr|vb=Nothing|nu=null"></span></span>. 
 You cannot set this value to less than SM_CXICON.
 To retrieve this value, <span class="code">pvParam</span> must point to an <span class="noLink">Int32</span> that receives the current value.
 </td>
                </tr>
                <tr>
                  <td>GetScreensaveTimeout</td>
                  <td>14</td>
                  <td>
 Retrieves the screen saver time-out value, in seconds. 
 The <span class="code">pvParam</span> parameter must point to an <span class="noLink">Int32</span> variable that receives the value.
 </td>
                </tr>
                <tr>
                  <td>SetScreensaveTimeout</td>
                  <td>15</td>
                  <td>
 Sets the screen saver time-out value to the value of the <span class="code">uiParam</span> parameter. 
 This value is the amount of time, in seconds, that the system must be idle before the screen saver activates.
 </td>
                </tr>
                <tr>
                  <td>GetScreensaveActive</td>
                  <td>16</td>
                  <td>
 Determines whether screen saving is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that 
 receives <span class="keyword"><span id="LSTB88F61E_6" data-languageSpecificText="vb=True|nu=true"></span></span> if screen saving is enabled, or <span class="keyword"><span id="LSTB88F61E_7" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 Does not work for Windows 7: <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms724947(v=vs.85).aspx" target="_blank" rel="noopener noreferrer">https://msdn.microsoft.com/en-us/library/windows/desktop/ms724947(v=vs.85).aspx</a></td>
                </tr>
                <tr>
                  <td>SetScreensaveActive</td>
                  <td>17</td>
                  <td>
 Sets the state of the screen saver. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_8" data-languageSpecificText="vb=True|nu=true"></span></span> to activate screen saving, or <span class="keyword"><span id="LSTB88F61E_9" data-languageSpecificText="vb=False|nu=false"></span></span> to deactivate it.
 </td>
                </tr>
                <tr>
                  <td>GetGridGranularity</td>
                  <td>18</td>
                  <td>
 Retrieves the current granularity value of the desktop sizing grid. 
 The <span class="code">pvParam</span> parameter must point to an <span class="noLink">Int32</span> variable that receives the granularity.
 </td>
                </tr>
                <tr>
                  <td>SetGridGranularity</td>
                  <td>19</td>
                  <td>
 Sets the granularity of the desktop sizing grid to the value of the <span class="code">uiParam</span> parameter.
 </td>
                </tr>
                <tr>
                  <td>SetDesktopWallpaper</td>
                  <td>20</td>
                  <td>
 Sets the desktop wallpaper. 
 The value of the <span class="code">pvParam</span> parameter determines the new wallpaper. 
 To specify a wallpaper bitmap, set <span class="code">pvParam</span> to point to a null-terminated string containing the name of a bitmap file. 
 Setting <span class="code">pvParam</span> to "" removes the wallpaper.
 Setting <span class="code">pvParam</span> to null reverts to the default wallpaper.
 </td>
                </tr>
                <tr>
                  <td>SetDeskPattern</td>
                  <td>21</td>
                  <td>
 Sets the current desktop pattern by causing Windows to read the Pattern= setting from the WIN.INI file.
 </td>
                </tr>
                <tr>
                  <td>GetKeyboardDelay</td>
                  <td>22</td>
                  <td>
 Retrieves the keyboard repeat-delay setting, 
 which is a value in the range from 0 (approximately 250 ms delay) through 3 (approximately 1 second delay). 
 The actual delay associated with each value may vary depending on the hardware. 
 The <span class="code">pvParam</span> parameter must point to an <span class="noLink">Int32</span> variable that receives the setting.
 </td>
                </tr>
                <tr>
                  <td>SetKeyboardDelay</td>
                  <td>23</td>
                  <td>
 Sets the keyboard repeat-delay setting. 
 The <span class="code">uiParam</span> parameter must specify 0, 1, 2, or 3, where zero sets the shortest delay
 (approximately 250 ms) and 3 sets the longest delay (approximately 1 second).
 The actual delay associated with each value may vary depending on the hardware.
 </td>
                </tr>
                <tr>
                  <td>IconVerticalSpacing</td>
                  <td>24</td>
                  <td>
 Sets or retrieves the height, in pixels, of an icon cell.
 To set this value, set <span class="code">uiParam</span> to the new value and set <span class="code">pvParam</span> to null.
 You cannot set this value to less than SM_CYICON.
 To retrieve this value, <span class="code">pvParam</span> must point to an <span class="noLink">Int32</span> that receives the current value.
 </td>
                </tr>
                <tr>
                  <td>GetIconTitleWrap</td>
                  <td>25</td>
                  <td>
 Determines whether icon-title wrapping is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_10" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled, 
 or <span class="keyword"><span id="LSTB88F61E_11" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 </td>
                </tr>
                <tr>
                  <td>SetIconTitleWrap</td>
                  <td>26</td>
                  <td>
 Turns icon-title wrapping on or off. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_12" data-languageSpecificText="vb=True|nu=true"></span></span> for on, or <span class="keyword"><span id="LSTB88F61E_13" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 </td>
                </tr>
                <tr>
                  <td>GetMenuDropAlignment</td>
                  <td>27</td>
                  <td>
 Determines whether pop-up menus are left-aligned or right-aligned, relative to the corresponding menu-bar item.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_14" data-languageSpecificText="vb=True|nu=true"></span></span> if left-aligned, 
 or <span class="keyword"><span id="LSTB88F61E_15" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 </td>
                </tr>
                <tr>
                  <td>SetMenuDropAlignment</td>
                  <td>28</td>
                  <td>
 Sets the alignment value of pop-up menus. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_16" data-languageSpecificText="vb=True|nu=true"></span></span> for right alignment, or <span class="keyword"><span id="LSTB88F61E_17" data-languageSpecificText="vb=False|nu=false"></span></span> for left alignment.
 </td>
                </tr>
                <tr>
                  <td>SetDoubleClickWidth</td>
                  <td>29</td>
                  <td>
 Sets the width of the double-click rectangle to the value of the <span class="code">uiParam</span> parameter.
 The double-click rectangle is the rectangle within which the second click of a double-click must 
 fall for it to be registered as a double-click.
 To retrieve the width of the double-click rectangle, call GetSystemMetrics with the SM_CXDOUBLECLK flag.
 </td>
                </tr>
                <tr>
                  <td>SetDoubleClickHeight</td>
                  <td>30</td>
                  <td>
 Sets the height of the double-click rectangle to the value of the <span class="code">uiParam</span> parameter.
 The double-click rectangle is the rectangle within which the second click of a double-click must 
 fall for it to be registered as a double-click.
 To retrieve the height of the double-click rectangle, call <span class="code">GetSystemMetrics</span> with the <span class="code">SM_CYDOUBLECLK</span> flag.
 </td>
                </tr>
                <tr>
                  <td>GetIconTitleLogFont</td>
                  <td>31</td>
                  <td>
 Retrieves the logical font information for the current icon-title font. 
 The <span class="code">uiParam</span> parameter specifies the size of a LOGFONT structure,
 and the <span class="code">pvParam</span> parameter must point to the LOGFONT structure to fill in.
 </td>
                </tr>
                <tr>
                  <td>SetDoubleclickTime</td>
                  <td>32</td>
                  <td>
 Sets the double-click time for the mouse to the value of the <span class="code">uiParam</span> parameter. 
 The double-click time is the maximum number of milliseconds that can occur between the 
 first and second clicks of a double-click. 
 You can also call the <a href="0dbd2e53-6715-816b-d5e7-b0b33e8868f8.htm">SetDoubleClickTime(Int32)</a> function to set the double-click time. 
 To get the current double-click time, call the <a href="31e1a93d-9f6e-1ffb-0a4b-c112ff78633f.htm">GetDoubleClickTime<span id="LSTB88F61E_18" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> function.
 </td>
                </tr>
                <tr>
                  <td>SetMousebuttonSwap</td>
                  <td>33</td>
                  <td>
 Swaps or restores the meaning of the left and right mouse buttons. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_19" data-languageSpecificText="vb=True|nu=true"></span></span> to swap the meanings of the buttons, 
 or <span class="keyword"><span id="LSTB88F61E_20" data-languageSpecificText="vb=False|nu=false"></span></span> to restore their original meanings.
 </td>
                </tr>
                <tr>
                  <td>SetIconTitleLogFont</td>
                  <td>34</td>
                  <td>
 Sets the font that is used for icon titles. 
 The <span class="code">uiParam</span> parameter specifies the size of a LOGFONT structure,
 and the <span class="code">pvParam</span> parameter must point to a LOGFONT structure.
 </td>
                </tr>
                <tr>
                  <td>GetFastTaskSwitch</td>
                  <td>35</td>
                  <td>
 This flag is obsolete. 
 Previous versions of the system use this flag to determine whether ALT+TAB fast task switching is enabled.
 For Windows 95, Windows 98, and Windows NT version 4.0 and later, fast task switching is always enabled.
 </td>
                </tr>
                <tr>
                  <td>SetFastTaskSwitch</td>
                  <td>36</td>
                  <td>
 This flag is obsolete. 
 Previous versions of the system use this flag to enable or disable ALT+TAB fast task switching.
 For Windows 95, Windows 98, and Windows NT version 4.0 and later, fast task switching is always enabled.
 </td>
                </tr>
                <tr>
                  <td>SetDragFullWindows</td>
                  <td>37</td>
                  <td>
 Sets dragging of full windows either on or off. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_21" data-languageSpecificText="vb=True|nu=true"></span></span> for on, or <span class="keyword"><span id="LSTB88F61E_22" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 </td>
                </tr>
                <tr>
                  <td>GetDragFullWindows</td>
                  <td>38</td>
                  <td>
 Determines whether dragging of full windows is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives 
 <span class="keyword"><span id="LSTB88F61E_23" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled, or <span class="keyword"><span id="LSTB88F61E_24" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 </td>
                </tr>
                <tr>
                  <td>GetNonClientMetrics</td>
                  <td>41</td>
                  <td>
 Retrieves the metrics associated with the nonclient area of nonminimized windows. 
 The <span class="code">pvParam</span> parameter must point to a NONCLIENTMETRICS structure that receives the information. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(NONCLIENTMETRICS).
 </td>
                </tr>
                <tr>
                  <td>SetNonClientMetrics</td>
                  <td>42</td>
                  <td>
 Sets the metrics associated with the nonclient area of nonminimized windows. 
 The <span class="code">pvParam</span> parameter must point to a NONCLIENTMETRICS structure that contains the new parameters. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(NONCLIENTMETRICS). 
 Also, the lfHeight member of the LOGFONT structure must be a negative value.
 </td>
                </tr>
                <tr>
                  <td>GetMinimizedMetrics</td>
                  <td>43</td>
                  <td>
 Retrieves the metrics associated with minimized windows. 
 The <span class="code">pvParam</span> parameter must point to a MINIMIZEDMETRICS structure that receives the information. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(MINIMIZEDMETRICS).
 </td>
                </tr>
                <tr>
                  <td>SetMinimizedMetrics</td>
                  <td>44</td>
                  <td>
 Sets the metrics associated with minimized windows. 
 The <span class="code">pvParam</span> parameter must point to a MINIMIZEDMETRICS structure that contains the new parameters.
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(MINIMIZEDMETRICS).
 </td>
                </tr>
                <tr>
                  <td>GetIconMetrics</td>
                  <td>45</td>
                  <td>
 Retrieves the metrics associated with icons. 
 The <span class="code">pvParam</span> parameter must point to an ICONMETRICS structure that receives the information. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ICONMETRICS).
 </td>
                </tr>
                <tr>
                  <td>SetIconMetrics</td>
                  <td>46</td>
                  <td>
 Sets the metrics associated with icons. 
 The <span class="code">pvParam</span> parameter must point to an ICONMETRICS structure that contains the new parameters. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ICONMETRICS).
 </td>
                </tr>
                <tr>
                  <td>SetWorkArea</td>
                  <td>47</td>
                  <td>
 Sets the size of the work area. 
 The work area is the portion of the screen not obscured by the system taskbar or by application desktop toolbars.
 The <span class="code">pvParam</span> parameter is a pointer to a RECT structure that specifies the new work area rectangle,
 expressed in virtual screen coordinates. In a system with multiple display monitors, 
 the function sets the work area of the monitor that contains the specified rectangle.
 </td>
                </tr>
                <tr>
                  <td>GetWorkArea</td>
                  <td>48</td>
                  <td>
 Retrieves the size of the work area on the primary display monitor. 
 The work area is the portion of the screen not obscured by the system taskbar or by application desktop toolbars.
 The <span class="code">pvParam</span> parameter must point to a RECT structure that receives
 the coordinates of the work area, expressed in virtual screen coordinates.
 To get the work area of a monitor other than the primary display monitor, call the GetMonitorInfo function.
 </td>
                </tr>
                <tr>
                  <td>SetPenWindows</td>
                  <td>49</td>
                  <td>
 Windows Me/98/95: Pen windows is being loaded or unloaded. 
 The <span class="code">uiParam</span> parameter is <span class="keyword"><span id="LSTB88F61E_25" data-languageSpecificText="vb=True|nu=true"></span></span> when loading and <span class="keyword"><span id="LSTB88F61E_26" data-languageSpecificText="vb=False|nu=false"></span></span> when unloading pen windows. 
 The <span class="code">pvParam</span> parameter is null.
 </td>
                </tr>
                <tr>
                  <td>GetFilterKeys</td>
                  <td>50</td>
                  <td>
 Retrieves information about the FilterKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a FILTERKEYS structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(FILTERKEYS).
 </td>
                </tr>
                <tr>
                  <td>SetFilterKeys</td>
                  <td>51</td>
                  <td>
 Sets the parameters of the FilterKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a FILTERKEYS structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(FILTERKEYS).
 </td>
                </tr>
                <tr>
                  <td>GetToggleKeys</td>
                  <td>52</td>
                  <td>
 Retrieves information about the ToggleKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a TOGGLEKEYS structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(TOGGLEKEYS).
 </td>
                </tr>
                <tr>
                  <td>SetToggleKeys</td>
                  <td>53</td>
                  <td>
 Sets the parameters of the ToggleKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a TOGGLEKEYS structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(TOGGLEKEYS).
 </td>
                </tr>
                <tr>
                  <td>GetMouseKeys</td>
                  <td>54</td>
                  <td>
 Retrieves information about the MouseKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a MOUSEKEYS structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(MOUSEKEYS).
 </td>
                </tr>
                <tr>
                  <td>SetMouseKeys</td>
                  <td>55</td>
                  <td>
 Sets the parameters of the MouseKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a MOUSEKEYS structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(MOUSEKEYS).
 </td>
                </tr>
                <tr>
                  <td>GetShowSounds</td>
                  <td>56</td>
                  <td>
 Determines whether the Show Sounds accessibility flag is on or off.
 If it is on, the user requires an application to present information visually in situations where 
 it would otherwise present the information only in audible form.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_27" data-languageSpecificText="vb=True|nu=true"></span></span> if the feature is on, 
 or <span class="keyword"><span id="LSTB88F61E_28" data-languageSpecificText="vb=False|nu=false"></span></span> if it is off.
 Using this value is equivalent to calling GetSystemMetrics (SM_SHOWSOUNDS). That is the recommended call.
 </td>
                </tr>
                <tr>
                  <td>SetShowSounds</td>
                  <td>57</td>
                  <td>
 Sets the parameters of the SoundSentry accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a SOUNDSENTRY structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(SOUNDSENTRY).
 </td>
                </tr>
                <tr>
                  <td>GetStickyKeys</td>
                  <td>58</td>
                  <td>
 Retrieves information about the StickyKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a STICKYKEYS structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(STICKYKEYS).
 </td>
                </tr>
                <tr>
                  <td>SetStickyKeys</td>
                  <td>59</td>
                  <td>
 Sets the parameters of the StickyKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a STICKYKEYS structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(STICKYKEYS).
 </td>
                </tr>
                <tr>
                  <td>GetAccessTimeout</td>
                  <td>60</td>
                  <td>
 Retrieves information about the time-out period associated with the accessibility features. 
 The <span class="code">pvParam</span> parameter must point to an ACCESSTIMEOUT structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ACCESSTIMEOUT).
 </td>
                </tr>
                <tr>
                  <td>SetAccessTimeout</td>
                  <td>61</td>
                  <td>
 Sets the time-out period associated with the accessibility features. 
 The <span class="code">pvParam</span> parameter must point to an ACCESSTIMEOUT structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ACCESSTIMEOUT).
 </td>
                </tr>
                <tr>
                  <td>GetSerialKeys</td>
                  <td>62</td>
                  <td>
 Windows Me/98/95:  Retrieves information about the SerialKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a SERIALKEYS structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(SERIALKEYS).
 </td>
                </tr>
                <tr>
                  <td>SetSerialKeys</td>
                  <td>63</td>
                  <td>
 Windows Me/98/95:  Sets the parameters of the SerialKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a SERIALKEYS structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(SERIALKEYS).
 </td>
                </tr>
                <tr>
                  <td>GetSoundsEntry</td>
                  <td>64</td>
                  <td>
 Retrieves information about the SoundSentry accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a SOUNDSENTRY structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(SOUNDSENTRY).
 </td>
                </tr>
                <tr>
                  <td>SetSoundsEntry</td>
                  <td>65</td>
                  <td>
 Sets the parameters of the SoundSentry accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a SOUNDSENTRY structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(SOUNDSENTRY).
 </td>
                </tr>
                <tr>
                  <td>GetHighContrast</td>
                  <td>66</td>
                  <td>
 Retrieves information about the HighContrast accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a HIGHCONTRAST structure that receives the information. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(HIGHCONTRAST).
 For a general discussion, see remarks.
 Windows NT:  This value is not supported.
 </td>
                </tr>
                <tr>
                  <td>SetHighContrast</td>
                  <td>67</td>
                  <td>
 Sets the parameters of the HighContrast accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a HIGHCONTRAST structure that contains the new parameters. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(HIGHCONTRAST).
 Windows NT: This value is not supported.
 </td>
                </tr>
                <tr>
                  <td>GetKeyboardPref</td>
                  <td>68</td>
                  <td>
 Determines whether the user relies on the keyboard instead of the mouse, 
 and wants applications to display keyboard interfaces that would otherwise be hidden. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_29" data-languageSpecificText="vb=True|nu=true"></span></span> if the user relies on the keyboard; 
 or <span class="keyword"><span id="LSTB88F61E_30" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 Windows NT: This value is not supported.
 </td>
                </tr>
                <tr>
                  <td>SetKeyboardPref</td>
                  <td>69</td>
                  <td>
 Sets the keyboard preference. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_31" data-languageSpecificText="vb=True|nu=true"></span></span> if the user relies on the keyboard instead of the mouse,
 and wants applications to display keyboard interfaces that would otherwise be hidden; <span class="code">uiParam</span> is <span class="keyword"><span id="LSTB88F61E_32" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 Windows NT: This value is not supported.
 </td>
                </tr>
                <tr>
                  <td>GetScreenReader</td>
                  <td>70</td>
                  <td>
 Determines whether a screen reviewer utility is running. A screen reviewer utility directs textual information to an output device,
 such as a speech synthesizer or Braille display. When this flag is set, an application should provide textual information
 in situations where it would otherwise present the information graphically.
 The <span class="code">pvParam</span> parameter is a pointer to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_33" data-languageSpecificText="vb=True|nu=true"></span></span> if a screen reviewer utility is running, or <span class="keyword"><span id="LSTB88F61E_34" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 Windows NT:  This value is not supported.
 </td>
                </tr>
                <tr>
                  <td>SetScreenReader</td>
                  <td>71</td>
                  <td>
 Determines whether a screen review utility is running. The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_35" data-languageSpecificText="vb=True|nu=true"></span></span> for on, or <span class="keyword"><span id="LSTB88F61E_36" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 Windows NT:  This value is not supported.
 </td>
                </tr>
                <tr>
                  <td>GetAnimation</td>
                  <td>72</td>
                  <td>
 Retrieves the animation effects associated with user actions. 
 The <span class="code">pvParam</span> parameter must point to an ANIMATIONINFO structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ANIMATIONINFO).
 </td>
                </tr>
                <tr>
                  <td>SetAnimation</td>
                  <td>73</td>
                  <td>
 Sets the animation effects associated with user actions. 
 The <span class="code">pvParam</span> parameter must point to an ANIMATIONINFO structure that contains the new parameters.
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ANIMATIONINFO).
 </td>
                </tr>
                <tr>
                  <td>GetFontSmoothing</td>
                  <td>74</td>
                  <td>
 Determines whether the font smoothing feature is enabled. 
 This feature uses font antialiasing to make font curves appear smoother by painting pixels at different gray levels.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives 
 <span class="keyword"><span id="LSTB88F61E_37" data-languageSpecificText="vb=True|nu=true"></span></span> if the feature is enabled, or <span class="keyword"><span id="LSTB88F61E_38" data-languageSpecificText="vb=False|nu=false"></span></span> if it is not.
 <p />
 Windows 95:  This flag is supported only if Windows Plus! is installed. See GETWINDOWSEXTENSION.
 </td>
                </tr>
                <tr>
                  <td>SetFontSmoothing</td>
                  <td>75</td>
                  <td>
 Enables or disables the font smoothing feature, which uses font antialiasing to make font curves appear smoother
 by painting pixels at different gray levels.
 To enable the feature, set the <span class="code">uiParam</span> parameter to TRUE. 
 To disable the feature, set <span class="code">uiParam</span> to FALSE.
 </td>
                </tr>
                <tr>
                  <td>SetDragWidth</td>
                  <td>76</td>
                  <td>
 Sets the width, in pixels, of the rectangle used to detect the start of a drag operation. 
 Set <span class="code">uiParam</span> to the new value.
 To retrieve the drag width, call GetSystemMetrics with the SM_CXDRAG flag.
 </td>
                </tr>
                <tr>
                  <td>SetDragHeight</td>
                  <td>77</td>
                  <td>
 Sets the height, in pixels, of the rectangle used to detect the start of a drag operation. 
 Set <span class="code">uiParam</span> to the new value.
 To retrieve the drag height, call GetSystemMetrics with the SM_CYDRAG flag.
 </td>
                </tr>
                <tr>
                  <td>SetHandheld</td>
                  <td>78</td>
                  <td>
 Used internally; applications should not use this value.
 </td>
                </tr>
                <tr>
                  <td>GetLowPowerTimeout</td>
                  <td>79</td>
                  <td>
 Retrieves the time-out value for the low-power phase of screen saving. 
 The <span class="code">pvParam</span> parameter must point to an <span class="noLink">Int32</span> variable that receives the value. 
 This flag is supported for 32-bit applications only.
 </td>
                </tr>
                <tr>
                  <td>GetPowerOffTimeout</td>
                  <td>80</td>
                  <td>
 Retrieves the time-out value for the power-off phase of screen saving. The <span class="code">pvParam</span> parameter must 
 point to an <span class="noLink">Int32</span> variable that receives the value. 
 This flag is supported for 32-bit applications only.
 </td>
                </tr>
                <tr>
                  <td>SetLowPowerTimeout</td>
                  <td>81</td>
                  <td>
 Sets the time-out value, in seconds, for the low-power phase of screen saving. 
 The <span class="code">uiParam</span> parameter specifies the new value.
 The <span class="code">pvParam</span> parameter must be null. 
 This flag is supported for 32-bit applications only.
 </td>
                </tr>
                <tr>
                  <td>SetPowerOffTimeout</td>
                  <td>82</td>
                  <td>
 Sets the time-out value, in seconds, for the power-off phase of screen saving. The <span class="code">uiParam</span> parameter specifies the new value.
 The <span class="code">pvParam</span> parameter must be null. 
 This flag is supported for 32-bit applications only.
 </td>
                </tr>
                <tr>
                  <td>GetLowPowerActive</td>
                  <td>83</td>
                  <td>
 Determines whether the low-power phase of screen saving is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable
 that receives <span class="keyword"><span id="LSTB88F61E_39" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled, or <span class="keyword"><span id="LSTB88F61E_40" data-languageSpecificText="vb=False|nu=false"></span></span> if disabled. 
 This flag is supported for 32-bit applications only.
 </td>
                </tr>
                <tr>
                  <td>GetPowerOffActive</td>
                  <td>84</td>
                  <td>
 Determines whether the power-off phase of screen saving is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable
 that receives <span class="keyword"><span id="LSTB88F61E_41" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled, or <span class="keyword"><span id="LSTB88F61E_42" data-languageSpecificText="vb=False|nu=false"></span></span> if disabled. 
 This flag is supported for 32-bit applications only.
 </td>
                </tr>
                <tr>
                  <td>SetLowPowerActive</td>
                  <td>85</td>
                  <td>
 Activates or deactivates the low-power phase of screen saving. 
 Set <span class="code">uiParam</span> to 1 to activate, or zero to deactivate.
 The <span class="code">pvParam</span> parameter must be null. 
 This flag is supported for 32-bit applications only.
 </td>
                </tr>
                <tr>
                  <td>SetPowerOffActive</td>
                  <td>86</td>
                  <td>
 Activates or deactivates the power-off phase of screen saving. Set <span class="code">uiParam</span> to 1 to activate, or zero to deactivate.
 The <span class="code">pvParam</span> parameter must be null. 
 This flag is supported for 32-bit applications only.
 </td>
                </tr>
                <tr>
                  <td>Setcursors</td>
                  <td>87</td>
                  <td>
 Reloads the system cursors. 
 Set the <span class="code">uiParam</span> parameter to zero and the <span class="code">pvParam</span> parameter to null.
 </td>
                </tr>
                <tr>
                  <td>Seticons</td>
                  <td>88</td>
                  <td>
 Reloads the system icons. 
 Set the <span class="code">uiParam</span> parameter to zero and the <span class="code">pvParam</span> parameter to null.
 </td>
                </tr>
                <tr>
                  <td>GetDefaultInputLang</td>
                  <td>89</td>
                  <td>
 Retrieves the input locale identifier for the system default input language. 
 The <span class="code">pvParam</span> parameter must point to an HKL variable that receives this value. 
 For more information, see Languages, Locales, and Keyboard Layouts on MSDN.
 </td>
                </tr>
                <tr>
                  <td>SetDefaultInputLang</td>
                  <td>90</td>
                  <td>
 Sets the default input language for the system shell and applications. 
 The specified language must be displayable using the current system character set. 
 The <span class="code">pvParam</span> parameter must point to an HKL variable that contains the input locale identifier for the default language. 
 For more information, see Languages, Locales, and Keyboard Layouts on MSDN.
 </td>
                </tr>
                <tr>
                  <td>SetLangToggle</td>
                  <td>91</td>
                  <td>
 Sets the hot key set for switching between input languages. 
 The <span class="code">uiParam</span> and <span class="code">pvParam</span> parameters are not used.
 The value sets the shortcut keys in the keyboard property sheets by reading the registry again. 
 The registry must be set before this flag is used. 
 the path in the registry is \HKEY_CURRENT_USER\keyboard layout\toggle. 
 Valid values are "1" = ALT+SHIFT, "2" = CTRL+SHIFT, and "3" = none.
 </td>
                </tr>
                <tr>
                  <td>GetWindowsExtension</td>
                  <td>92</td>
                  <td>
 Windows 95:  Determines whether the Windows extension, Windows Plus!, is installed.
 Set the <span class="code">uiParam</span> parameter to 1.
 The <span class="code">pvParam</span> parameter is not used. 
 The function returns <span class="keyword"><span id="LSTB88F61E_43" data-languageSpecificText="vb=True|nu=true"></span></span> if the extension is installed, or <span class="keyword"><span id="LSTB88F61E_44" data-languageSpecificText="vb=False|nu=false"></span></span> if it is not.
 </td>
                </tr>
                <tr>
                  <td>SetMouseTrails</td>
                  <td>93</td>
                  <td>
 Enables or disables the Mouse Trails feature, which improves the visibility of mouse cursor movements by briefly showing
 a trail of cursors and quickly erasing them.
 To disable the feature, set the <span class="code">uiParam</span> parameter to zero or 1. 
 To enable the feature, set <span class="code">uiParam</span> to a value greater than 1 to indicate the number of cursors drawn in the trail.
 </td>
                </tr>
                <tr>
                  <td>GetMouseTrails</td>
                  <td>94</td>
                  <td>
 Determines whether the Mouse Trails feature is enabled. 
 This feature improves the visibility of mouse cursor movements by briefly showing a trail of cursors and quickly erasing them.
 The <span class="code">pvParam</span> parameter must point to an <span class="noLink">Int32</span> variable that receives a value. 
 If the value is zero or 1, the feature is disabled.
 If the value is greater than 1, the feature is enabled and the value indicates the number of cursors drawn in the trail.
 The <span class="code">uiParam</span> parameter is not used.
 </td>
                </tr>
                <tr>
                  <td>GetSnapToDefButton</td>
                  <td>95</td>
                  <td>
 Determines whether the snap-to-default-button feature is enabled. 
 If enabled, the mouse cursor automatically moves to the default button, such as "OK" or "Apply", of a dialog box. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_45" data-languageSpecificText="vb=True|nu=true"></span></span> if the feature is on, 
 or <span class="keyword"><span id="LSTB88F61E_46" data-languageSpecificText="vb=False|nu=false"></span></span> if it is off.
 </td>
                </tr>
                <tr>
                  <td>SetSnapToDefButton</td>
                  <td>96</td>
                  <td>
 Enables or disables the snap-to-default-button feature. 
 If enabled, the mouse cursor automatically moves to the default button, such as "OK" or "Apply", of a dialog box. 
 Set the <span class="code">uiParam</span> parameter to <span class="keyword"><span id="LSTB88F61E_47" data-languageSpecificText="vb=True|nu=true"></span></span> to enable the feature, or <span class="keyword"><span id="LSTB88F61E_48" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it.
 Applications should use the ShowWindow function when displaying a dialog box so the dialog manager can position the mouse cursor.
 </td>
                </tr>
                <tr>
                  <td>SetScreensaverRunning</td>
                  <td>97</td>
                  <td>
 Windows Me/98:  Used internally; applications should not use this flag.
 </td>
                </tr>
                <tr>
                  <td>GetMouseHoverWidth</td>
                  <td>98</td>
                  <td>
 Retrieves the width, in pixels, of the rectangle within which the mouse pointer has to stay for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 The <span class="code">pvParam</span> parameter must point to a UINT variable that receives the width.
 </td>
                </tr>
                <tr>
                  <td>SetMouseHoverWidth</td>
                  <td>99</td>
                  <td>
 Retrieves the width, in pixels, of the rectangle within which the mouse pointer has to stay for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 The <span class="code">pvParam</span> parameter must point to a UINT variable that receives the width.
 </td>
                </tr>
                <tr>
                  <td>GetMouseHoverHeight</td>
                  <td>100</td>
                  <td>
 Retrieves the height, in pixels, of the rectangle within which the mouse pointer has to stay for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 The <span class="code">pvParam</span> parameter must point to a UINT variable that receives the height.
 </td>
                </tr>
                <tr>
                  <td>SetMouseHoverHeight</td>
                  <td>101</td>
                  <td>
 Sets the height, in pixels, of the rectangle within which the mouse pointer has to stay for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 Set the <span class="code">uiParam</span> parameter to the new height.
 </td>
                </tr>
                <tr>
                  <td>GetMouseHoverTime</td>
                  <td>102</td>
                  <td>
 Retrieves the time, in milliseconds, that the mouse pointer has to stay in the hover rectangle for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 The <span class="code">pvParam</span> parameter must point to a UINT variable that receives the time.
 </td>
                </tr>
                <tr>
                  <td>SetMouseHoverTime</td>
                  <td>103</td>
                  <td>
 Sets the time, in milliseconds, that the mouse pointer has to stay in the hover rectangle for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 This is used only if you pass HOVER_DEFAULT in the dwHoverTime parameter in the call to TrackMouseEvent. 
 Set the <span class="code">uiParam</span> parameter to the new time.
 </td>
                </tr>
                <tr>
                  <td>GetWheelScrollLines</td>
                  <td>104</td>
                  <td>
 Retrieves the number of lines to scroll when the mouse wheel is rotated. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt32</span> variable that receives the number of lines. 
 The default value is 3.
 </td>
                </tr>
                <tr>
                  <td>SetWheelScrollLines</td>
                  <td>105</td>
                  <td>
 Sets the number of lines to scroll when the mouse wheel is rotated. 
 The number of lines is set from the <span class="code">uiParam</span> parameter.
 The number of lines is the suggested number of lines to scroll when the mouse wheel is rolled without using modifier keys.
 If the number is 0, then no scrolling should occur. 
 If the number of lines to scroll is greater than the number of lines viewable,
 and in particular if it is WHEEL_PAGESCROLL (#defined as UINT_MAX), the scroll operation should be interpreted
 as clicking once in the page down or page up regions of the scroll bar.
 </td>
                </tr>
                <tr>
                  <td>GetMenuShowDelay</td>
                  <td>106</td>
                  <td>
 Retrieves the time, in milliseconds, that the system waits before displaying a shortcut menu when the mouse cursor is over a submenu item. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt16</span> variable that receives the time of the delay.
 </td>
                </tr>
                <tr>
                  <td>SetMenuShowDelay</td>
                  <td>107</td>
                  <td>
 Sets <span class="code">uiParam</span> to the time, in milliseconds, that the system waits before displaying a shortcut menu when the mouse cursor is
 over a submenu item.
 </td>
                </tr>
                <tr>
                  <td>GetWheelscrollChars</td>
                  <td>108</td>
                  <td>
 Retrieves the number of characters to scroll when the horizontal mouse wheel is moved. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt32</span> variable that receives the number of lines. 
 The default value is 3.
 </td>
                </tr>
                <tr>
                  <td>SetWheelscrollChars</td>
                  <td>109</td>
                  <td>
 Sets the number of characters to scroll when the horizontal mouse wheel is moved. 
 The number of characters is set from the <span class="code">uiParam</span> parameter.
 </td>
                </tr>
                <tr>
                  <td>GetShowIMEui</td>
                  <td>110</td>
                  <td>
 Determines whether the IME status window is visible (on a per-user basis). 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable  that 
 receives <span class="keyword"><span id="LSTB88F61E_49" data-languageSpecificText="vb=True|nu=true"></span></span> if the status window is visible, or <span class="keyword"><span id="LSTB88F61E_50" data-languageSpecificText="vb=False|nu=false"></span></span> if it is not.
 </td>
                </tr>
                <tr>
                  <td>SetShowIMEui</td>
                  <td>111</td>
                  <td>
 Sets whether the IME status window is visible or not on a per-user basis. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_51" data-languageSpecificText="vb=True|nu=true"></span></span> for on or <span class="keyword"><span id="LSTB88F61E_52" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 </td>
                </tr>
                <tr>
                  <td>GetMouseSpeed</td>
                  <td>112</td>
                  <td>
 Retrieves the current mouse speed. 
 The mouse speed determines how far the pointer will move based on the distance the mouse moves.
 The <span class="code">pvParam</span> parameter must point to an <span class="noLink">Int32</span> variable that receives a value which 
 ranges between 1 (slowest) and 20 (fastest).
 A value of 10 is the default. 
 The value can be set by an end user using the mouse control panel application or by an application using SETMOUSESPEED.
 </td>
                </tr>
                <tr>
                  <td>SetMouseSpeed</td>
                  <td>113</td>
                  <td>
 Sets the current mouse speed. 
 The <span class="code">pvParam</span> parameter is an <span class="noLink">Int32</span> variable between 1 (slowest) and 20 (fastest). 
 A value of 10 is the default.
 This value is typically set using the mouse control panel application.
 </td>
                </tr>
                <tr>
                  <td>GetScreensaverRunning</td>
                  <td>114</td>
                  <td>
 Determines whether a screen saver is currently running on the window station of the calling process.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_53" data-languageSpecificText="vb=True|nu=true"></span></span> if a screen saver is currently running, 
 or <span class="keyword"><span id="LSTB88F61E_54" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 Note that only the interactive window station, "WinSta0", can have a screen saver running.
 </td>
                </tr>
                <tr>
                  <td>GetDesktopWallpaper</td>
                  <td>115</td>
                  <td>
 Retrieves the full path of the bitmap file for the desktop wallpaper.
 The <span class="code">pvParam</span> parameter must point to a <span class="code">StringBuilder</span> that receives a null-terminated path string.
 Set the <span class="code">uiParam</span> parameter to the size, in characters, of the <span class="code">pvParam</span> buffer. 
 The returned string will not exceed <span class="code">StringBuilder.MaxCapacity</span> characters. 
 If there is no desktop wallpaper, the returned string is empty.
 </td>
                </tr>
                <tr>
                  <td>GetAudioDescription</td>
                  <td>116</td>
                  <td>
 Determines whether audio descriptions are enabled or disabled. 
 The <span class="code">pvParam</span> parameter is a pointer to an AUDIODESCRIPTION structure. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(AUDIODESCRIPTION).
 </td>
                </tr>
                <tr>
                  <td>SetAudioDescription</td>
                  <td>117</td>
                  <td>
 Turns the audio descriptions feature on or off. 
 The pvParam parameter is a pointer to an AUDIODESCRIPTION structure.
 </td>
                </tr>
                <tr>
                  <td>GetScreensaveSecure</td>
                  <td>118</td>
                  <td>
 Determines whether the screen saver requires a password to display the Windows desktop. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_55" data-languageSpecificText="vb=True|nu=true"></span></span> if the screen saver requires a password, or <span class="keyword"><span id="LSTB88F61E_56" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise. 
 The <span class="code">uiParam</span> parameter is ignored.
 </td>
                </tr>
                <tr>
                  <td>SetScreensaveSecure</td>
                  <td>119</td>
                  <td>
 Sets whether the screen saver requires the user to enter a password to display the Windows desktop. 
 The <span class="code">uiParam</span> parameter is a <span class="noLink">Boolean</span> variable. 
 The <span class="code">pvParam</span> parameter is ignored. 
 Set <span class="code">uiParam</span> to <span class="keyword"><span id="LSTB88F61E_57" data-languageSpecificText="vb=True|nu=true"></span></span> to require a password, or <span class="keyword"><span id="LSTB88F61E_58" data-languageSpecificText="vb=False|nu=false"></span></span> to not require a password.
 If the machine has entered power saving mode or system lock state, an ERROR_OPERATION_IN_PROGRESS exception occurs.
 </td>
                </tr>
                <tr>
                  <td>GetHungAppTimeout</td>
                  <td>120</td>
                  <td>
 Retrieves the number of milliseconds that a thread can go without dispatching a message before the system considers it unresponsive. 
 The <span class="code">pvParam</span> parameter must point to an integer variable that receives the value.
 </td>
                </tr>
                <tr>
                  <td>SetHungAppTimeout</td>
                  <td>121</td>
                  <td>
 Sets the hung application time-out to the value of the <span class="code">uiParam</span> parameter. 
 This value is the number of milliseconds that a thread can go without dispatching a message before the system considers it unresponsive
 </td>
                </tr>
                <tr>
                  <td>GetWaitToKillTimeout</td>
                  <td>122</td>
                  <td>
 Retrieves the number of milliseconds that the system waits before terminating an application that does not respond to a shutdown request. 
 The <span class="code">pvParam</span> parameter must point to an integer variable that receives the value.
 </td>
                </tr>
                <tr>
                  <td>SetWaitToKillTimeout</td>
                  <td>123</td>
                  <td>
 Sets the application shutdown request time-out to the value of the <span class="code">uiParam</span> parameter. 
 This value is the number of milliseconds that the system waits before terminating an application that does not respond to a shutdown request
 </td>
                </tr>
                <tr>
                  <td>GetWaitToKillServiceTimeout</td>
                  <td>124</td>
                  <td>
 Retrieves the number of milliseconds that the service control manager waits before 
 terminating a service that does not respond to a shutdown request. 
 The <span class="code">pvParam</span> parameter must point to an integer variable that receives the value.
 </td>
                </tr>
                <tr>
                  <td>SetWaitToKillServiceTimeout</td>
                  <td>125</td>
                  <td>
 Sets the service shutdown request time-out to the value of the <span class="code">uiParam</span> parameter. 
 This value is the number of milliseconds that the system waits before terminating a service that does not respond to a shutdown request
 </td>
                </tr>
                <tr>
                  <td>GetMouseDockThreshold</td>
                  <td>126</td>
                  <td>
 Retrieves the threshold in pixels where docking behavior is triggered by using a mouse to drag a window to the edge of a monitor or monitor array. 
 The default threshold is 1. 
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that receives the value.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>SetMouseDockThreshold</td>
                  <td>127</td>
                  <td>
 Sets the threshold in pixels where docking behavior is triggered by using a mouse to drag a window to the edge of a monitor or monitor array. 
 The default threshold is 1. 
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that contains the new value
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>GetWinArranging</td>
                  <td>130</td>
                  <td>
 Determines whether window arrangement is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_59" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled, or <span class="keyword"><span id="LSTB88F61E_60" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 Window arrangement reduces the number of mouse, pen, or touch interactions needed to move and size top-level windows by 
 simplifying the default behavior of a window when it is dragged or sized.
 </td>
                </tr>
                <tr>
                  <td>SetWinArranging</td>
                  <td>131</td>
                  <td>
 Sets whether window arrangement is enabled. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_61" data-languageSpecificText="vb=True|nu=true"></span></span> for on or <span class="keyword"><span id="LSTB88F61E_62" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 Window arrangement reduces the number of mouse, pen, or touch interactions needed to move and size top-level windows by 
 simplifying the default behavior of a window when it is dragged or sized.
 </td>
                </tr>
                <tr>
                  <td>GetMouseDragoutThreshold</td>
                  <td>132</td>
                  <td>
 Retrieves the threshold in pixels where undocking behavior is triggered by using a mouse to drag a window from the edge of a monitor or 
 a monitor array toward the center. 
 The default threshold is 20.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>SetMouseDragoutThreshold</td>
                  <td>133</td>
                  <td>
 Sets the threshold in pixels where undocking behavior is triggered by using a mouse to drag a window from the edge of a monitor or 
 monitor array to its center. 
 The default threshold is 20. 
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that contains the new value.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>GetMouseSideMoveThreshold</td>
                  <td>136</td>
                  <td>
 Retrieves the threshold in pixels from the top of a monitor or a monitor array where a vertically maximized window is restored when dragged with the mouse. 
 The default threshold is 50.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>SetMouseSideMoveThreshold</td>
                  <td>137</td>
                  <td>
 Sets the threshold in pixels from the top of the monitor where a vertically maximized window is restored when dragged with the mouse. 
 The default threshold is 50. 
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that contains the new value
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>GetDragFromMaximize</td>
                  <td>140</td>
                  <td>
 Determines whether a maximized window is restored when its caption bar is dragged. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_63" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled, or <span class="keyword"><span id="LSTB88F61E_64" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>SetDragFromMaximize</td>
                  <td>141</td>
                  <td>
 Sets whether a maximized window is restored when its caption bar is dragged. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_65" data-languageSpecificText="vb=True|nu=true"></span></span> for on or <span class="keyword"><span id="LSTB88F61E_66" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 </td>
                </tr>
                <tr>
                  <td>GetSnapSizing</td>
                  <td>142</td>
                  <td>
 Determines whether a window is vertically maximized when it is sized to the top or bottom of a monitor or monitor array. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_67" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled, or <span class="keyword"><span id="LSTB88F61E_68" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>SetSnapSizing</td>
                  <td>143</td>
                  <td>
 Sets whether a window is vertically maximized when it is sized to the top or bottom of the monitor. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_69" data-languageSpecificText="vb=True|nu=true"></span></span> for on or <span class="keyword"><span id="LSTB88F61E_70" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>GetDockMoving</td>
                  <td>144</td>
                  <td>
 Determines whether a window is docked when it is moved to the top, left, or right edges of a monitor or monitor array. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_71" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled, or <span class="keyword"><span id="LSTB88F61E_72" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>SetDockMoving</td>
                  <td>145</td>
                  <td>
 Sets whether a window is docked when it is moved to the top, left, or right docking targets on a monitor or monitor array. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_73" data-languageSpecificText="vb=True|nu=true"></span></span> for on or <span class="keyword"><span id="LSTB88F61E_74" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td>
                </tr>
                <tr>
                  <td>GetLogicalDPIoverride</td>
                  <td>158</td>
                  <td>
 Gets a value that determines whether Windows 8/Windows 10 is using the recommended (default) DPI scale factor. 
 <p />
 The value indicates the relative index of DPI scaling percentage in the next scale factor steps list:
 <p />
 100%, 125%, 150%, 175%, 200%, 225%, 250%, 300%, 350%, 400%, 450%, 500% (all steps may not be of same percentage.)
 <p />
 So if for example the returned value is 0, it means the recommended DPI scaling value is 100%,
 or if for example the returned value is -1, it means the recommended DPI scaling value is 125%, and so on.
 <p /><a href="https://stackoverflow.com/a/62916586/1248295" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/a/62916586/1248295</a></td>
                </tr>
                <tr>
                  <td>SetLogicalDPIoverride</td>
                  <td>159</td>
                  <td>
 Sets a system-wide DPI scale factor in Windows 8/Windows 10 scaling mode.
 <p />
 This works only if there is a single monitor, or if there are multiple monitors and 
 the "Let me choose one scaling level for all my displays" checkbox is checked in system settings,
 then the user can specify a scale factor that applies to all displays.
 <p />
 The value represents the relative index of DPI scaling percentage in the next scale factor steps list
 <p />
 100%, 125%, 150%, 175%, 200%, 225%, 250%, 300%, 350%, 400%, 450%, 500% (all steps may not be of same percentage.)
 <p />
 So if for example you use a value of 0, DPI scaling value will be changed to 100%,
 or if for example you use a value of 1, DPI scaling value will be changed to 125%, and so on.
 <p />
 Note that the available scaled DPI factor steps depends on the pixel density of the display.
 If you try to set a value outside the available scaled DPI factor steps, Windows doesn't allow it, 
 and will use the nearest allowed value.
 <p /><a href="https://stackoverflow.com/a/62916586/1248295" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/a/62916586/1248295</a></td>
                </tr>
                <tr>
                  <td>GetActiveWindowTracking</td>
                  <td>4,096</td>
                  <td>
 Determines whether active window tracking (activating the window the mouse is on) is on or off. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_75" data-languageSpecificText="vb=True|nu=true"></span></span> for on, 
 or <span class="keyword"><span id="LSTB88F61E_76" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 </td>
                </tr>
                <tr>
                  <td>SetActiveWindowTracking</td>
                  <td>4,097</td>
                  <td>
 Sets active window tracking (activating the window the mouse is on) either on or off. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_77" data-languageSpecificText="vb=True|nu=true"></span></span> for on or <span class="keyword"><span id="LSTB88F61E_78" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 </td>
                </tr>
                <tr>
                  <td>GetMenuAnimation</td>
                  <td>4,098</td>
                  <td>
 Determines whether the menu animation feature is enabled. 
 This master switch must be on to enable menu animation effects.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_79" data-languageSpecificText="vb=True|nu=true"></span></span> if animation is enabled 
 and <span class="keyword"><span id="LSTB88F61E_80" data-languageSpecificText="vb=False|nu=false"></span></span> if it is disabled.
 If animation is enabled, GETMENUFADE indicates whether menus use fade or slide animation.
 </td>
                </tr>
                <tr>
                  <td>SetMenuAnimation</td>
                  <td>4,099</td>
                  <td>
 Enables or disables menu animation. 
 This master switch must be on for any menu animation to occur.
 The <span class="code">pvParam</span> parameter is a <span class="noLink">Boolean</span> variable; 
 set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_81" data-languageSpecificText="vb=True|nu=true"></span></span> to enable animation and <span class="keyword"><span id="LSTB88F61E_82" data-languageSpecificText="vb=False|nu=false"></span></span> to disable animation.
 If animation is enabled, GETMENUFADE indicates whether menus use fade or slide animation.
 </td>
                </tr>
                <tr>
                  <td>GetComboboxAnimation</td>
                  <td>4,100</td>
                  <td>
 Determines whether the slide-open effect for combo boxes is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_83" data-languageSpecificText="vb=True|nu=true"></span></span> for enabled, 
 or <span class="keyword"><span id="LSTB88F61E_84" data-languageSpecificText="vb=False|nu=false"></span></span> for disabled.
 </td>
                </tr>
                <tr>
                  <td>SetComboboxAnimation</td>
                  <td>4,101</td>
                  <td>
 Enables or disables the slide-open effect for combo boxes. 
 Set the <span class="code">pvParam</span> parameter to <span class="keyword"><span id="LSTB88F61E_85" data-languageSpecificText="vb=True|nu=true"></span></span> to enable the gradient effect, or <span class="keyword"><span id="LSTB88F61E_86" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it.
 </td>
                </tr>
                <tr>
                  <td>GetListboxSmoothScrolling</td>
                  <td>4,102</td>
                  <td>
 Determines whether the smooth-scrolling effect for list boxes is enabled. 
 The <span class="code">pvParam</span> parameter must point toa <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_87" data-languageSpecificText="vb=True|nu=true"></span></span> for enabled, 
 or <span class="keyword"><span id="LSTB88F61E_88" data-languageSpecificText="vb=False|nu=false"></span></span> for disabled.
 </td>
                </tr>
                <tr>
                  <td>SetListboxSmoothScrolling</td>
                  <td>4,103</td>
                  <td>
 Enables or disables the smooth-scrolling effect for list boxes. 
 Set the <span class="code">pvParam</span> parameter to <span class="keyword"><span id="LSTB88F61E_89" data-languageSpecificText="vb=True|nu=true"></span></span> to enable the smooth-scrolling effect,
 or <span class="keyword"><span id="LSTB88F61E_90" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it.
 </td>
                </tr>
                <tr>
                  <td>GetGradientCaptions</td>
                  <td>4,104</td>
                  <td>
 Determines whether the gradient effect for window title bars is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_91" data-languageSpecificText="vb=True|nu=true"></span></span> for enabled, 
 or <span class="keyword"><span id="LSTB88F61E_92" data-languageSpecificText="vb=False|nu=false"></span></span> for disabled. 
 For more information about the gradient effect, see the GetSysColor function.
 </td>
                </tr>
                <tr>
                  <td>SetGradientCaptions</td>
                  <td>4,105</td>
                  <td>
 Enables or disables the gradient effect for window title bars. 
 Set the <span class="code">pvParam</span> parameter to <span class="keyword"><span id="LSTB88F61E_93" data-languageSpecificText="vb=True|nu=true"></span></span> to enable it, or <span class="keyword"><span id="LSTB88F61E_94" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it.
 The gradient effect is possible only if the system has a color depth of more than 256 colors. For more information about
 the gradient effect, see the GetSysColor function.
 </td>
                </tr>
                <tr>
                  <td>GetKeyboardCues</td>
                  <td>4,106</td>
                  <td>
 Determines whether menu access keys are always underlined. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that 
 receives <span class="keyword"><span id="LSTB88F61E_95" data-languageSpecificText="vb=True|nu=true"></span></span> if menu access keys are always underlined, 
 and <span class="keyword"><span id="LSTB88F61E_96" data-languageSpecificText="vb=False|nu=false"></span></span> if they are underlined only when the menu is activated by the keyboard.
 </td>
                </tr>
                <tr>
                  <td>SetKeyboardCues</td>
                  <td>4,107</td>
                  <td>
 Sets the underlining of menu access key letters. 
 The <span class="code">pvParam</span> parameter is a <span class="noLink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_97" data-languageSpecificText="vb=True|nu=true"></span></span> to always underline menu access keys, 
 or <span class="keyword"><span id="LSTB88F61E_98" data-languageSpecificText="vb=False|nu=false"></span></span> to underline menu access keys only when the menu is activated from the keyboard.
 </td>
                </tr>
                <tr>
                  <td>GetActiveWndTrkZorder</td>
                  <td>4,108</td>
                  <td>
 Determines whether windows activated through active window tracking will be brought to the top. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_99" data-languageSpecificText="vb=True|nu=true"></span></span> for on,
 or <span class="keyword"><span id="LSTB88F61E_100" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 </td>
                </tr>
                <tr>
                  <td>SetActiveWndTrkZorder</td>
                  <td>4,109</td>
                  <td>
 Determines whether or not windows activated through active window tracking should be brought to the top. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_101" data-languageSpecificText="vb=True|nu=true"></span></span> for on or <span class="keyword"><span id="LSTB88F61E_102" data-languageSpecificText="vb=False|nu=false"></span></span> for off.
 </td>
                </tr>
                <tr>
                  <td>GetHotTracking</td>
                  <td>4,110</td>
                  <td>
 Determines whether hot tracking of user-interface elements, such as menu names on menu bars, is enabled.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_103" data-languageSpecificText="vb=True|nu=true"></span></span> for enabled, 
 or <span class="keyword"><span id="LSTB88F61E_104" data-languageSpecificText="vb=False|nu=false"></span></span> for disabled.
 Hot tracking means that when the cursor moves over an item, it is highlighted but not selected. 
 You can query this value to decide whether to use hot tracking in the user interface of your application.
 </td>
                </tr>
                <tr>
                  <td>SetHotTracking</td>
                  <td>4,111</td>
                  <td>
 Enables or disables hot tracking of user-interface elements such as menu names on menu bars. 
 Set the <span class="code">pvParam</span> parameter to <span class="keyword"><span id="LSTB88F61E_105" data-languageSpecificText="vb=True|nu=true"></span></span> to enable it, or <span class="keyword"><span id="LSTB88F61E_106" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it.
 Hot-tracking means that when the cursor moves over an item, it is highlighted but not selected.
 </td>
                </tr>
                <tr>
                  <td>GetMenuFade</td>
                  <td>4,114</td>
                  <td>
 Determines whether menu fade animation is enabled.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_107" data-languageSpecificText="vb=True|nu=true"></span></span>
 when fade animation is enabled and <span class="keyword"><span id="LSTB88F61E_108" data-languageSpecificText="vb=False|nu=false"></span></span> when it is disabled. 
 If fade animation is disabled, menus use slide animation.
 This flag is ignored unless menu animation is enabled, which you can do using the SETMENUANIMATION flag.
 For more information, see <a href="78d6ee96-8c48-9c83-8f76-777c8b281100.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a>.
 </td>
                </tr>
                <tr>
                  <td>SetMenuFade</td>
                  <td>4,115</td>
                  <td>
 Enables or disables menu fade animation. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_109" data-languageSpecificText="vb=True|nu=true"></span></span> to enable the menu fade effect or <span class="keyword"><span id="LSTB88F61E_110" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it.
 If fade animation is disabled, menus use slide animation.
 The menu fade effect is possible only if the system has a color depth of more than 256 colors. 
 This flag is ignored unless MENUANIMATION is also set. 
 For more information, see <a href="78d6ee96-8c48-9c83-8f76-777c8b281100.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a>.
 </td>
                </tr>
                <tr>
                  <td>GetSelectionFade</td>
                  <td>4,116</td>
                  <td>
 Determines whether the selection fade effect is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_111" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled 
 or <span class="keyword"><span id="LSTB88F61E_112" data-languageSpecificText="vb=False|nu=false"></span></span> if disabled.
 The selection fade effect causes the menu item selected by the user to remain on the screen briefly while fading out
 after the menu is dismissed.
 </td>
                </tr>
                <tr>
                  <td>SetSelectionFade</td>
                  <td>4,117</td>
                  <td>
 The selection fade effect causes the menu item selected by the user to remain on the screen briefly while fading out
 after the menu is dismissed. 
 The selection fade effect is possible only if the system has a color depth of more than 256 colors.
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_113" data-languageSpecificText="vb=True|nu=true"></span></span> to enable the selection fade effect or <span class="keyword"><span id="LSTB88F61E_114" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it.
 </td>
                </tr>
                <tr>
                  <td>GetTooltipAnimation</td>
                  <td>4,118</td>
                  <td>
 Determines whether ToolTip animation is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_115" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled 
 or <span class="keyword"><span id="LSTB88F61E_116" data-languageSpecificText="vb=False|nu=false"></span></span> if disabled. 
 If ToolTip animation is enabled, GETTOOLTIPFADE indicates whether ToolTips use fade or slide animation.
 </td>
                </tr>
                <tr>
                  <td>SetTooltipAnimation</td>
                  <td>4,119</td>
                  <td>
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_117" data-languageSpecificText="vb=True|nu=true"></span></span> to enable ToolTip animation or <span class="keyword"><span id="LSTB88F61E_118" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it. 
 If enabled, you can use SETTOOLTIPFADE to specify fade or slide animation.
 </td>
                </tr>
                <tr>
                  <td>GetTooltipFade</td>
                  <td>4,120</td>
                  <td>
 If SETTOOLTIPANIMATION is enabled, GETTOOLTIPFADE indicates whether ToolTip animation uses a fade effect or a slide effect.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_119" data-languageSpecificText="vb=True|nu=true"></span></span> for fade animation 
 or <span class="keyword"><span id="LSTB88F61E_120" data-languageSpecificText="vb=False|nu=false"></span></span> for slide animation.
 For more information on slide and fade effects, see <a href="78d6ee96-8c48-9c83-8f76-777c8b281100.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a>.
 </td>
                </tr>
                <tr>
                  <td>SetTooltipFade</td>
                  <td>4,121</td>
                  <td>
 If the SETTOOLTIPANIMATION flag is enabled, use SETTOOLTIPFADE to indicate whether ToolTip animation uses a fade effect or a slide effect. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_121" data-languageSpecificText="vb=True|nu=true"></span></span> for fade animation or <span class="keyword"><span id="LSTB88F61E_122" data-languageSpecificText="vb=False|nu=false"></span></span> for slide animation. 
 The tooltip fade effect is possible only if the system has a color depth of more than 256 colors. 
 For more information on the slide and fade effects, see the <a href="78d6ee96-8c48-9c83-8f76-777c8b281100.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a> function.
 </td>
                </tr>
                <tr>
                  <td>GetCursorShadow</td>
                  <td>4,122</td>
                  <td>
 Determines whether the cursor has a shadow around it. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_123" data-languageSpecificText="vb=True|nu=true"></span></span> if the shadow is enabled, 
 <span class="keyword"><span id="LSTB88F61E_124" data-languageSpecificText="vb=False|nu=false"></span></span> if it is disabled. 
 This effect appears only if the system has a color depth of more than 256 colors.
 </td>
                </tr>
                <tr>
                  <td>SetCursorShadow</td>
                  <td>4,123</td>
                  <td>
 Enables or disables a shadow around the cursor. 
 The <span class="code">pvParam</span> parameter is a <span class="noLink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_125" data-languageSpecificText="vb=True|nu=true"></span></span> to enable the shadow or <span class="keyword"><span id="LSTB88F61E_126" data-languageSpecificText="vb=False|nu=false"></span></span> to disable the shadow. 
 This effect appears only if the system has a color depth of more than 256 colors.
 </td>
                </tr>
                <tr>
                  <td>GetMouseSonar</td>
                  <td>4,124</td>
                  <td>
 Retrieves the state of the Mouse Sonar feature. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_127" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled or
 <span class="keyword"><span id="LSTB88F61E_128" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise. 
 For more information, see About Mouse Input on MSDN.
 </td>
                </tr>
                <tr>
                  <td>SetMouseSonar</td>
                  <td>4,125</td>
                  <td>
 Turns the Sonar accessibility feature on or off. 
 This feature briefly shows several concentric circles around the mouse pointer when the user presses and releases the CTRL key. 
 The <span class="code">pvParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_129" data-languageSpecificText="vb=True|nu=true"></span></span> for on and <span class="keyword"><span id="LSTB88F61E_130" data-languageSpecificText="vb=False|nu=false"></span></span> for off. 
 The default is off.
 For more information, see About Mouse Input.
 </td>
                </tr>
                <tr>
                  <td>GetMouseClickLock</td>
                  <td>4,126</td>
                  <td>
 Retrieves the state of the Mouse ClickLock feature. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_131" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled, 
 or <span class="keyword"><span id="LSTB88F61E_132" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise. 
 For more information, see About Mouse Input.
 </td>
                </tr>
                <tr>
                  <td>SetMouseClickLock</td>
                  <td>4,127</td>
                  <td>
 Turns the Mouse ClickLock accessibility feature on or off. 
 This feature temporarily locks down the primary mouse button when that button is clicked and 
 held down for the time specified by SETMOUSECLICKLOCKTIME. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_133" data-languageSpecificText="vb=True|nu=true"></span></span> for on, or <span class="keyword"><span id="LSTB88F61E_134" data-languageSpecificText="vb=False|nu=false"></span></span> for off. The default is off. 
 For more information, see Remarks and About Mouse Input on MSDN.
 </td>
                </tr>
                <tr>
                  <td>GetMouseVanish</td>
                  <td>4,128</td>
                  <td>
 Retrieves the state of the Mouse Vanish feature. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_135" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled or 
 <span class="keyword"><span id="LSTB88F61E_136" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise. 
 For more information, see About Mouse Input on MSDN.
 </td>
                </tr>
                <tr>
                  <td>SetMouseVanish</td>
                  <td>4,129</td>
                  <td>
 Turns the Vanish feature on or off. 
 This feature hides the mouse pointer when the user types; the pointer reappears when the user moves the mouse. 
 The <span class="code">pvParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_137" data-languageSpecificText="vb=True|nu=true"></span></span> for on and <span class="keyword"><span id="LSTB88F61E_138" data-languageSpecificText="vb=False|nu=false"></span></span> for off. The default is off.
 For more information, see About Mouse Input on MSDN.
 </td>
                </tr>
                <tr>
                  <td>GetFlatMenu</td>
                  <td>4,130</td>
                  <td>
 Determines whether native User menus have flat menu appearance. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that returns <span class="keyword"><span id="LSTB88F61E_139" data-languageSpecificText="vb=True|nu=true"></span></span> if the 
 flat menu appearance is set, or <span class="keyword"><span id="LSTB88F61E_140" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 </td>
                </tr>
                <tr>
                  <td>SetFlatMenu</td>
                  <td>4,131</td>
                  <td>
 Enables or disables flat menu appearance for native User menus. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_141" data-languageSpecificText="vb=True|nu=true"></span></span> to enable flat menu appearance or <span class="keyword"><span id="LSTB88F61E_142" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it.
 When enabled, the menu bar uses COLOR_MENUBAR for the menubar background, COLOR_MENU for the menu-popup background, COLOR_MENUHILIGHT
 for the fill of the current menu selection, and COLOR_HILIGHT for the outline of the current menu selection.
 If disabled, menus are drawn using the same metrics and colors as in Windows 2000 and earlier.
 </td>
                </tr>
                <tr>
                  <td>GetDropShadow</td>
                  <td>4,132</td>
                  <td>
 Determines whether the drop shadow effect is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that returns <span class="keyword"><span id="LSTB88F61E_143" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled or 
 <span class="keyword"><span id="LSTB88F61E_144" data-languageSpecificText="vb=False|nu=false"></span></span> if disabled.
 </td>
                </tr>
                <tr>
                  <td>SetDropShadow</td>
                  <td>4,133</td>
                  <td>
 Enables or disables the drop shadow effect.
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_145" data-languageSpecificText="vb=True|nu=true"></span></span> to enable the drop shadow effect or <span class="keyword"><span id="LSTB88F61E_146" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it.
 You must also have CS_DROPSHADOW in the window class style.
 </td>
                </tr>
                <tr>
                  <td>GetBlockSendInputResets</td>
                  <td>4,134</td>
                  <td>
 Retrieves a <span class="noLink">Boolean</span> indicating whether an application can reset the screensaver's timer by calling the SendInput function
 to simulate keyboard or mouse input. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_147" data-languageSpecificText="vb=True|nu=true"></span></span>
 if the simulated input will be blocked, or <span class="keyword"><span id="LSTB88F61E_148" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 </td>
                </tr>
                <tr>
                  <td>SetBlockSendInputResets</td>
                  <td>4,135</td>
                  <td>
 Determines whether an application can reset the screensaver's timer by calling the SendInput function to simulate keyboard
 or mouse input. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_149" data-languageSpecificText="vb=True|nu=true"></span></span> if the screensaver will not be deactivated by simulated input,
 or <span class="keyword"><span id="LSTB88F61E_150" data-languageSpecificText="vb=False|nu=false"></span></span> if the screensaver will be deactivated by simulated input.
 </td>
                </tr>
                <tr>
                  <td>GetUiEffects</td>
                  <td>4,158</td>
                  <td>
 Determines whether UI effects are enabled or disabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_151" data-languageSpecificText="vb=True|nu=true"></span></span>
 if all UI effects are enabled, or <span class="keyword"><span id="LSTB88F61E_152" data-languageSpecificText="vb=False|nu=false"></span></span> if they are disabled.
 </td>
                </tr>
                <tr>
                  <td>SetUiEffects</td>
                  <td>4,159</td>
                  <td>
 Enables or disables UI effects. 
 Set the <span class="code">pvParam</span> parameter to <span class="keyword"><span id="LSTB88F61E_153" data-languageSpecificText="vb=True|nu=true"></span></span> to enable all UI effects or <span class="keyword"><span id="LSTB88F61E_154" data-languageSpecificText="vb=False|nu=false"></span></span> to disable all UI effects.
 </td>
                </tr>
                <tr>
                  <td>GetDisableOverlappedContent</td>
                  <td>4,160</td>
                  <td>
 Determines whether overlapped content is enabled or disabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_155" data-languageSpecificText="vb=True|nu=true"></span></span> if enabled, 
 or <span class="keyword"><span id="LSTB88F61E_156" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 </td>
                </tr>
                <tr>
                  <td>SetDisableOverlappedContent</td>
                  <td>4,161</td>
                  <td>
 Turns overlapped content (such as background images and watermarks) on or off. 
 The <span class="code">pvParam</span> parameter is a <span class="noLink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_157" data-languageSpecificText="vb=True|nu=true"></span></span> to disable overlapped content, or <span class="keyword"><span id="LSTB88F61E_158" data-languageSpecificText="vb=False|nu=false"></span></span> to enable overlapped content.
 </td>
                </tr>
                <tr>
                  <td>GetClientAreaAnimation</td>
                  <td>4,162</td>
                  <td>
 Determines whether animations are enabled or disabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_159" data-languageSpecificText="vb=True|nu=true"></span></span> if animations are enabled, 
 or <span class="keyword"><span id="LSTB88F61E_160" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 </td>
                </tr>
                <tr>
                  <td>SetClientAreaAnimation</td>
                  <td>4,163</td>
                  <td>
 Turns client area animations on or off. 
 The <span class="code">pvParam</span> parameter is a <span class="noLink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_161" data-languageSpecificText="vb=True|nu=true"></span></span> to enable animations and other transient effects in the client area, 
 or <span class="keyword"><span id="LSTB88F61E_162" data-languageSpecificText="vb=False|nu=false"></span></span> to disable them..
 </td>
                </tr>
                <tr>
                  <td>GetCleartype</td>
                  <td>4,168</td>
                  <td>
 Determines whether ClearType is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_163" data-languageSpecificText="vb=True|nu=true"></span></span> if ClearType is enabled, or <span class="keyword"><span id="LSTB88F61E_164" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 </td>
                </tr>
                <tr>
                  <td>SetCleartype</td>
                  <td>4,169</td>
                  <td>
 Turns ClearType on or off. 
 The <span class="code">pvParam</span> parameter is a <span class="noLink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_165" data-languageSpecificText="vb=True|nu=true"></span></span> to enable ClearType, or <span class="keyword"><span id="LSTB88F61E_166" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it.
 </td>
                </tr>
                <tr>
                  <td>GetThreadLocalInputSettings</td>
                  <td>4,174</td>
                  <td>
 Starting with Windows 8: Determines whether the active input settings have Local (per-thread, <span class="keyword"><span id="LSTB88F61E_167" data-languageSpecificText="vb=True|nu=true"></span></span>) or Global (session, <span class="keyword"><span id="LSTB88F61E_168" data-languageSpecificText="vb=False|nu=false"></span></span>) scope. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable.
 </td>
                </tr>
                <tr>
                  <td>SetThreadLocalInputSettings</td>
                  <td>4,175</td>
                  <td>
 Starting with Windows 8: Determines whether the active input settings have Local (per-thread, <span class="keyword"><span id="LSTB88F61E_169" data-languageSpecificText="vb=True|nu=true"></span></span>) or Global (session, <span class="keyword"><span id="LSTB88F61E_170" data-languageSpecificText="vb=False|nu=false"></span></span>) scope. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable, casted by PVOID.
 </td>
                </tr>
                <tr>
                  <td>GetSystemlanguageBar</td>
                  <td>4,176</td>
                  <td>
 Starting with Windows 8: Determines whether the system language bar is enabled or disabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">Boolean</span> variable that receives <span class="keyword"><span id="LSTB88F61E_171" data-languageSpecificText="vb=True|nu=true"></span></span> if the language bar is enabled, or <span class="keyword"><span id="LSTB88F61E_172" data-languageSpecificText="vb=False|nu=false"></span></span> otherwise.
 </td>
                </tr>
                <tr>
                  <td>SetSystemlanguageBar</td>
                  <td>4,177</td>
                  <td>
 Starting with Windows 8: Turns the legacy language bar feature on or off. 
 The <span class="code">pvParam</span> parameter is a pointer to a <span class="noLink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTB88F61E_173" data-languageSpecificText="vb=True|nu=true"></span></span> to enable the legacy language bar, or <span class="keyword"><span id="LSTB88F61E_174" data-languageSpecificText="vb=False|nu=false"></span></span> to disable it. 
 The flag is supported on Windows 8 where the legacy language bar is replaced by Input Switcher and therefore turned off by default. 
 Turning the legacy language bar on is provided for compatibility reasons and has no effect on the Input Switcher.
 </td>
                </tr>
                <tr>
                  <td>GetForegroundLockTimeout</td>
                  <td>8,192</td>
                  <td>
 Retrieves the amount of time following user input, in milliseconds, during which the system will not allow applications
 to force themselves into the foreground. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt16</span> variable that receives the time.
 </td>
                </tr>
                <tr>
                  <td>SetForegroundLockTimeout</td>
                  <td>8,193</td>
                  <td>
 Sets the amount of time following user input, in milliseconds, during which the system does not allow applications
 to force themselves into the foreground. 
 Set <span class="code">pvParam</span> to the new timeout value.
 The calling thread must be able to change the foreground window, otherwise the call fails.
 </td>
                </tr>
                <tr>
                  <td>GetActiveWndTrkTimeout</td>
                  <td>8,194</td>
                  <td>
 Retrieves the active window tracking delay, in milliseconds. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt16</span> variable that receives the time.
 </td>
                </tr>
                <tr>
                  <td>SetActiveWndTrkTimeout</td>
                  <td>8,195</td>
                  <td>
 Sets the active window tracking delay. 
 Set <span class="code">pvParam</span> to the number of milliseconds to delay before activating the window under the mouse pointer.
 </td>
                </tr>
                <tr>
                  <td>GetForegroundFlashCount</td>
                  <td>8,196</td>
                  <td>
 Retrieves the number of times SetForegroundWindow will flash the taskbar button when rejecting a foreground switch request.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt16</span> variable that receives the value.
 </td>
                </tr>
                <tr>
                  <td>SetForegroundFlashCount</td>
                  <td>8,197</td>
                  <td>
 Sets the number of times SetForegroundWindow will flash the taskbar button when rejecting a foreground switch request.
 Set <span class="code">pvParam</span> to the number of times to flash.
 </td>
                </tr>
                <tr>
                  <td>GetCaretWidth</td>
                  <td>8,198</td>
                  <td>
 Retrieves the caret width in edit controls, in pixels. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt16</span> that receives this value.
 </td>
                </tr>
                <tr>
                  <td>SetCaretWidth</td>
                  <td>8,199</td>
                  <td>
 Sets the caret width in edit controls. 
 Set <span class="code">pvParam</span> to the desired width, in pixels. 
 The default and minimum value is 1.
 </td>
                </tr>
                <tr>
                  <td>GetMouseClickLockTime</td>
                  <td>8,200</td>
                  <td>
 Retrieves the time delay before the primary mouse button is locked. 
 The <span class="code">pvParam</span> parameter must point to <span class="noLink">Int32</span> that receives the time delay. 
 This is only enabled if SETMOUSECLICKLOCK is set to <span class="keyword"><span id="LSTB88F61E_175" data-languageSpecificText="vb=True|nu=true"></span></span>. 
 For more information, see About Mouse Input on MSDN.
 </td>
                </tr>
                <tr>
                  <td>SetMouseClickLockTime</td>
                  <td>8,201</td>
                  <td>
 Turns the Mouse ClickLock accessibility feature on or off. 
 This feature temporarily locks down the primary mouse button when that button is clicked and 
 held down for the time specified by SETMOUSECLICKLOCKTIME. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTB88F61E_176" data-languageSpecificText="vb=True|nu=true"></span></span> for on, or <span class="keyword"><span id="LSTB88F61E_177" data-languageSpecificText="vb=False|nu=false"></span></span> for off. 
 The default is off. 
 For more information, see Remarks and About Mouse Input on MSDN.
 </td>
                </tr>
                <tr>
                  <td>GetFontSmoothingType</td>
                  <td>8,202</td>
                  <td>
 Retrieves the type of font smoothing. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt32</span> that receives the information.
 </td>
                </tr>
                <tr>
                  <td>SetFontSmoothingType</td>
                  <td>8,203</td>
                  <td>
 Sets the font smoothing type. 
 The <span class="code">pvParam</span> parameter points to a UINT that contains either FE_FONTSMOOTHINGSTANDARD,
 if standard anti-aliasing is used, or FE_FONTSMOOTHINGCLEARTYPE, if ClearType is used. The default is FE_FONTSMOOTHINGSTANDARD.
 When using this option, the fWinIni parameter must be set to SPIF_SENDWININICHANGE | SPIF_UPDATEINIFILE; otherwise,
 SystemParametersInfo fails.
 </td>
                </tr>
                <tr>
                  <td>GetFontSmoothingContrast</td>
                  <td>8,204</td>
                  <td>
 Retrieves a contrast value that is used in ClearType™ smoothing. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt32</span> that receives the information.
 </td>
                </tr>
                <tr>
                  <td>SetFontSmoothingContrast</td>
                  <td>8,205</td>
                  <td>
 Sets the contrast value used in ClearType smoothing. 
 The <span class="code">pvParam</span> parameter points to a <span class="noLink">UInt32</span> that holds the contrast value.
 Valid contrast values are from 1000 to 2200. The default value is 1400.
 When using this option, the fWinIni parameter must be set to SPIF_SENDWININICHANGE | SPIF_UPDATEINIFILE; otherwise,
 SystemParametersInfo fails.
 SETFONTSMOOTHINGTYPE must also be set to FE_FONTSMOOTHINGCLEARTYPE.
 </td>
                </tr>
                <tr>
                  <td>GetFocusBorderWidth</td>
                  <td>8,206</td>
                  <td>
 Retrieves the width, in pixels, of the left and right edges of the focus rectangle drawn with DrawFocusRect.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt32</span>.
 </td>
                </tr>
                <tr>
                  <td>SetFocusBorderWidth</td>
                  <td>8,207</td>
                  <td>
 Sets the height of the left and right edges of the focus rectangle drawn with DrawFocusRect to the value of 
 the <span class="code">pvParam</span> parameter.
 </td>
                </tr>
                <tr>
                  <td>GetFocusBorderHeight</td>
                  <td>8,208</td>
                  <td>
 Retrieves the height, in pixels, of the top and bottom edges of the focus rectangle drawn with DrawFocusRect.
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt32</span>.
 </td>
                </tr>
                <tr>
                  <td>SetFocusBorderHeight</td>
                  <td>8,209</td>
                  <td>
 Sets the height of the top and bottom edges of the focus rectangle drawn with DrawFocusRect to the 
 value of the <span class="code">pvParam</span> parameter.
 </td>
                </tr>
                <tr>
                  <td>GetFontSmoothingOrientation</td>
                  <td>8,210</td>
                  <td>
 Not implemented.
 </td>
                </tr>
                <tr>
                  <td>SetFontSmoothingOrientation</td>
                  <td>8,211</td>
                  <td>
 Not implemented.
 </td>
                </tr>
                <tr>
                  <td>GetMessageDuration</td>
                  <td>8,214</td>
                  <td>
 Retrieves the time that notification pop-ups should be displayed, in seconds. 
 The <span class="code">pvParam</span> parameter must point to a <span class="noLink">UInt64</span> that receives the message duration.
 </td>
                </tr>
                <tr>
                  <td>SetMessageDuration</td>
                  <td>8,215</td>
                  <td>
 Sets the time that notification pop-ups should be displayed, in seconds. 
 The <span class="code">pvParam</span> parameter specifies the message duration.
 </td>
                </tr>
                <tr>
                  <td>GetContactVisualization</td>
                  <td>8,216</td>
                  <td>
 Retrieves the current contact visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that receives the setting. 
 For more information, see Contact Visualization.
 </td>
                </tr>
                <tr>
                  <td>SetContactVisualization</td>
                  <td>8,217</td>
                  <td>
 Sets the current contact visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that identifies the setting. 
 For more information, see Contact Visualization.
 </td>
                </tr>
                <tr>
                  <td>GetGestureVisualization</td>
                  <td>8,218</td>
                  <td>
 Retrieves the current gesture visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that receives the setting. 
 For more information, see Gesture Visualization.
 </td>
                </tr>
                <tr>
                  <td>SetGestureVisualization</td>
                  <td>8,219</td>
                  <td>
 Sets the current gesture visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that identifies the setting. 
 For more information, see Gesture Visualization.
 </td>
                </tr>
                <tr>
                  <td>GetMousewheelRouting</td>
                  <td>8,220</td>
                  <td>
 Retrieves the routing setting for wheel button input.
 The routing setting determines whether wheel button input is sent to the app with focus (foreground) or the app under the mouse cursor.
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that receives the routing option. 
 If the value is zero or MOUSEWHEEL_ROUTING_FOCUS, mouse wheel input is delivered to the app with focus. 
 If the value is 1 or MOUSEWHEEL_ROUTING_HYBRID (default), 
 mouse wheel input is delivered to the app with focus (desktop apps) or the app under the mouse cursor (Windows Store apps). 
 The <span class="code">uiParam</span> parameter is not used.
 </td>
                </tr>
                <tr>
                  <td>SetMousewheelRouting</td>
                  <td>8,221</td>
                  <td>
 Sets the routing setting for wheel button input. 
 The routing setting determines whether wheel button input is sent to the app with focus (foreground) or the app under the mouse cursor.
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that receives the routing option. 
 If the value is zero or MOUSEWHEEL_ROUTING_FOCUS, mouse wheel input is delivered to the app with focus. 
 If the value is 1 or MOUSEWHEEL_ROUTING_HYBRID (default), 
 mouse wheel input is delivered to the app with focus (desktop apps) or the app under the mouse cursor (Windows Store apps). 
 Set the <span class="code">uiParam</span> parameter to zero
 </td>
                </tr>
                <tr>
                  <td>GetPenVisualization</td>
                  <td>8,222</td>
                  <td>
 Retrieves the current pen gesture visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that receives the setting. 
 For more information, see Pen Visualization.
 </td>
                </tr>
                <tr>
                  <td>SetPenVisualization</td>
                  <td>8,223</td>
                  <td>
 Sets the current pen gesture visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that identifies the setting. 
 For more information, see Pen Visualization.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="bc387bbf-c905-2558-9de0-4a5ffd59a6a0.htm">DevCase.Win32.Enums Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                </li>
                <li>
                  <a class="quickLink">Remarks</a>
                </li>
                <li>
                  <a class="quickLink">Members</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
    <script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script>
  </body>
</html>