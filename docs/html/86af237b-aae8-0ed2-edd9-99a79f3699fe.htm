<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>VbPointer&lt;T&gt; Structure</title>
    <meta name="Title" content="VbPointer&lt;T&gt;" />
    <meta name="Help.Id" content="T:DevCase.Win32.Common.VbPointer`1" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Win32.Common" />
    <meta name="guid" content="86af237b-aae8-0ed2-edd9-99a79f3699fe" />
    <meta name="Description" content="Provides a wrapper class for compatibility between translation of C# pointers to VB.NET. A pointer is a variable that holds the memory address of another type. This structure is intended to be used only by VB.NET developers. You must not use this under C#." />
    <meta name="tocFile" content="../toc/IDBFA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>Vb<wbr />Pointer<span id="LST70BF7119_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST70BF7119_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span> Structure</h1>
            <div class="summary">
 Provides a wrapper class for compatibility between translation of C# pointers to VB.NET.
 <p />
 A pointer is a variable that holds the memory address of another type.
 <p />
 This structure is intended to be used only by VB.NET developers. You must not use this under C#.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="58d11375-7881-6c5b-e408-2fb0e3f945c2.htm">DevCase.Win32.Common</a><br /><strong>Assembly:</strong> DevCase.net48 (in DevCase.net48.dll) Version: 6.0.0.0 (6.0)<br /><strong>XMLNS for XAML:</strong> Not mapped to an xmlns.<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="identifier">VbPointer</span>&lt;T&gt;
<span class="keyword">where</span> T : <span class="noLink">IConvertible</span>
</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Structure</span> <span class="identifier">VbPointer</span>(<span class="keyword">Of</span> T <span class="keyword">As</span> <span class="noLink">IConvertible</span>)

<span class="keyword">Dim</span> <span class="parameter">instance</span> <span class="keyword">As</span> <span class="identifier">VbPointer</span>(<span class="keyword">Of</span> T)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">where</span> T : <span class="noLink">IConvertible</span>
<span class="keyword">public</span> <span class="keyword">value class</span> <span class="identifier">VbPointer</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="noLink">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">VbPointer</span>&lt;'T <span class="keyword">when</span> 'T : <span class="noLink">IConvertible</span>&gt; = 
    <span class="keyword">struct</span>
        <span class="keyword">inherit</span> <span class="noLink">ValueType</span>
    <span class="keyword">end</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">ValueType</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">VbPointer<span id="LST70BF7119_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST70BF7119_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span></dd></dl><h4>Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">T</span></dt><dd /></dl></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Remarks</h2>
            <div id="IDBCSection">
 Credits to: <a href="http://social.msdn.microsoft.com/Forums/en-US/b07e8ad5-3de2-419c-9e18-f24f4165989f/c-pointers-to-vb-net?forum=vbgeneral" target="_blank" rel="noopener noreferrer">http://social.msdn.microsoft.com/Forums/en-US/b07e8ad5-3de2-419c-9e18-f24f4165989f/c-pointers-to-vb-net?forum=vbgeneral</a></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Example</h2>
            <div id="IDCCSection"> This is a code example that demonstrates how to adapt a C# code that uses pointers to VB.NET language.
 <div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-VB.NET">' C# original source code that use pointers to invert the colors of a image:
'
' private static Image InvertImageColorsUnsafe(Image img) {
' 
'     Bitmap bmp = new Bitmap(img);
' 
'     //Format is BGRA, NOT ARGB.
'     BitmapData bmData = bmp.LockBits(new Rectangle(0, 0, bmp.Width, bmp.Height),
'                                      ImageLockMode.ReadWrite,
'                                      PixelFormat.Format32bppArgb);
' 
'     int stride = bmData.Stride;
'     IntPtr Scan0 = bmData.Scan0;
' 
'     unsafe {
'         byte* p = (byte*)(void*)Scan0;
' 
'         int nOffset = stride - bmp.Width * 4;
'         int nWidth = bmp.Width;
' 
'         for (int y = 0; y &lt; bmp.Height; y++) {
'             for (int x = 0; x &lt; nWidth; x++) {
'                 p[0] = (byte)(255 - p[0]); // Red
'                 p[1] = (byte)(255 - p[1]); // Green
'                 p[2] = (byte)(255 - p[2]); // Blue
'                 //p[3] is alpha, don't want to invert alpha
'                 p += 4;
'             }
'             p += nOffset;
'         }
'     }
' 
'     bmp.UnlockBits(bmData);
'     return (Image)bmp;
' }

' VB.NET equivalency using the VbPointer class:
Private Shared Function InvertImageColorsUnsafe(originalImg As Image) As Image

    Dim bmp As New Bitmap(originalImg)

    ' Format is BGRA, NOT ARGB.
    Dim bmData As BitmapData =
        bmp.LockBits(New Rectangle(0, 0, bmp.Width, bmp.Height),
                     ImageLockMode.ReadWrite, PixelFormat.Format32bppArgb)

    Dim stride As Integer = bmData.Stride
    Dim p As New VbPointer(Of Byte)(bmData.Scan0)

    Dim nOffset As Integer = stride - bmp.Width * 4
    Dim nWidth As Integer = bmp.Width

    For y As Integer = 0 To (bmp.Height - 1)
        For x As Integer = 0 To (nWidth - 1)
            p(0) = CByte(255 - p(0)) ' Red
            p(1) = CByte(255 - p(1)) ' Green
            p(2) = CByte(255 - p(2)) ' Blue
            'p(3) is alpha, don't want to invert alpha
            p += 4
        Next
        p += nOffset
    Next
    bmp.UnlockBits(bmData)

    Return DirectCast(bmp, Image)
End Function</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="xaml"><div class="codeHeader"><span class="codeHeaderTitle">XAML</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Constructors</h2>
            <div id="IDIFASection">
              <table id="ConstructorList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="e80abcf1-87af-61d5-1e62-dfce87f816a2.htm">VbPointer<span id="LST70BF7119_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST70BF7119_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>
                  </td>
                  <td>
 Initializes a new instance of the <span class="selflink">VbPointer<span id="LST70BF7119_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST70BF7119_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> struct.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Properties</h2>
            <div id="IDSFASection">
              <table id="PropertyList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="d37617f4-be54-2996-a5a9-a5ee1f05adce.htm">Value</a>
                  </td>
                  <td>
 Gets or sets the value in the pointer.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Methods</h2>
            <div id="IDJFASection">
              <table id="MethodList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="6bd31468-345f-4205-d1f5-1449ab36b742.htm">Equals</a>
                  </td>
                  <td>
 Determines whether the specified <span class="noLink">Object</span> is equal to this instance.
 <br />(Overrides <span class="noLink">ValueType<span id="LST70BF7119_8" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Equals(Object)</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="f2d46dd5-d9c4-8675-50ca-147722049913.htm">GetHashCode</a>
                  </td>
                  <td>
 Returns a hash code for this instance.
 <br />(Overrides <span class="noLink">ValueType<span id="LST70BF7119_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetHashCode<span id="LST70BF7119_10" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetType</span>
                  </td>
                  <td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="db2374ca-2a1f-d4de-cc07-1c8f5bfe09a9.htm">ReferenceEquals</a>
                  </td>
                  <td>
 Determines whether the specified <span class="noLink">Object</span> instances are the same instance.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8ff21274-3d1e-1a15-6a0a-3163f565862f.htm">ToString</a>
                  </td>
                  <td>
 Returns a String that represents the current object.
 <br />(Overrides <span class="noLink">ValueType<span id="LST70BF7119_11" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ToString<span id="LST70BF7119_12" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Operators</h2>
            <div id="IDLFASection">
              <table id="OperatorList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="58ce0bf5-01c2-cd7e-06f3-29aa0b298dda.htm">Addition(VbPointer<span id="LST70BF7119_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST70BF7119_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
                  </td>
                  <td>
 Implements the sum operator.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d1fc94e6-ed23-8155-9c1b-0a6f638c0718.htm">Equality(VbPointer<span id="LST70BF7119_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST70BF7119_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, VbPointer<span id="LST70BF7119_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST70BF7119_18" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>
                  </td>
                  <td>
 Compares two <span class="selflink">VbPointer<span id="LST70BF7119_19" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST70BF7119_20" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a19dd04f-dc98-d3af-7941-0efc03e54b47.htm">Inequality(VbPointer<span id="LST70BF7119_21" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST70BF7119_22" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, VbPointer<span id="LST70BF7119_23" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST70BF7119_24" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>
                  </td>
                  <td>
 Compares two <span class="selflink">VbPointer<span id="LST70BF7119_25" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST70BF7119_26" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5061ffce-1592-3460-ed31-79d4f33f9917.htm">Subtraction(VbPointer<span id="LST70BF7119_27" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST70BF7119_28" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
                  </td>
                  <td>
 Implements the minus operator.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Extension Methods</h2>
            <div id="IDAFASection">
              <table id="ExtensionList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="4fc2bde6-7e68-b4f7-8406-9f998fc4201d.htm">CanConvertTo</a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="d438a76e-0b10-2e5a-19bb-33849b67af0e.htm">CanConvertTo<span id="LST70BF7119_29" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST70BF7119_30" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="be81447a-a248-2281-1117-bfc740d6232c.htm">ConvertTo<span id="LST70BF7119_31" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST70BF7119_32" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, an exception is thrown.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="8021acba-836d-7ab5-0827-131cef22840b.htm">ConvertTo<span id="LST70BF7119_33" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST70BF7119_34" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, returns the specified default value.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="90e0095b-fa87-d162-71b4-0b19729ac296.htm">IsDisposable</a>
                  </td>
                  <td>
 Determines whether the specified object is a disposable type 
 (i.e., it implements <span class="noLink">IDisposable</span> interface).
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="b6518cbc-eac7-374e-f53c-70aa031bf15b.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="a447b4b7-8d2e-a234-f910-4749678e12f8.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="4ed5be38-075c-b944-23d9-9298e43d9f2a.htm">ThrowIfNull<span id="LST70BF7119_35" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TException<span id="LST70BF7119_36" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Throws the specified exception if the source object is null.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="58d11375-7881-6c5b-e408-2fb0e3f945c2.htm">DevCase.Win32.Common Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                </li>
                <li>
                  <a class="quickLink">Remarks</a>
                </li>
                <li>
                  <a class="quickLink">Example</a>
                </li>
                <li>
                  <a class="quickLink">Constructors</a>
                </li>
                <li>
                  <a class="quickLink">Properties</a>
                </li>
                <li>
                  <a class="quickLink">Methods</a>
                </li>
                <li>
                  <a class="quickLink">Operators</a>
                </li>
                <li>
                  <a class="quickLink">Extension Methods</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
    <script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script>
  </body>
</html>