<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>PermutationCollection&lt;T&gt; Class</title>
    <meta name="Title" content="PermutationCollection&lt;T&gt;" />
    <meta name="Help.Id" content="T:DevCase.Core.Math.Combinatorics.PermutationCollection`1" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Core.Math.Combinatorics" />
    <meta name="guid" content="75d74e73-a817-5ed2-ac9e-2d1b299d93c9" />
    <meta name="Description" content="Permutations defines a meta-collection, typically a list of lists, of all possible orderings of a set of values. This list is enumerable and allows the scanning of all possible permutations using a simple For Each loop." />
    <meta name="tocFile" content="../toc/IDAGAA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>Permutation<wbr />Collection<span id="LST1C45FD79_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST1C45FD79_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span> Class</h1>
            <div class="summary">
 Permutations defines a meta-collection, typically a list of lists, of all possible orderings of a set of values.
 <p />
 This list is enumerable and allows the scanning of all possible permutations using a simple <span class="code">For Each</span> loop.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="0d285c1b-bb1e-4700-acf1-a2fb9825fa81.htm">DevCase.Core.Math.Combinatorics</a><br /><strong>Assembly:</strong> DevCase.net48 (in DevCase.net48.dll) Version: 6.0.0.0 (6.0)<br /><strong>XMLNS for XAML:</strong> Not mapped to an xmlns.<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">PermutationCollection</span>&lt;T&gt; : <a href="a265a05e-8e6a-5cc3-f014-113901957bfa.htm">IMetaCollection</a>&lt;T&gt;
</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">PermutationCollection</span>(<span class="keyword">Of</span> T)
	<span class="keyword">Implements</span> <a href="a265a05e-8e6a-5cc3-f014-113901957bfa.htm">IMetaCollection</a>(<span class="keyword">Of</span> T)

<span class="keyword">Dim</span> <span class="parameter">instance</span> <span class="keyword">As</span> <span class="identifier">PermutationCollection</span>(<span class="keyword">Of</span> T)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">PermutationCollection</span> <span class="keyword">sealed</span> : <a href="a265a05e-8e6a-5cc3-f014-113901957bfa.htm">IMetaCollection</a>&lt;T&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="noLink">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">PermutationCollection</span>&lt;'T&gt; = 
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <a href="a265a05e-8e6a-5cc3-f014-113901957bfa.htm">IMetaCollection</a>&lt;'T&gt;
    <span class="keyword">end</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">PermutationCollection<span id="LST1C45FD79_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1C45FD79_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="a265a05e-8e6a-5cc3-f014-113901957bfa.htm">IMetaCollection</a><span id="LST1C45FD79_4" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST1C45FD79_5" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dd></dl><h4>Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">T</span></dt><dd>
 The type of the values within the list.
 </dd></dl></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Remarks</h2>
            <div id="IDCCSection">
 When given a input collect <span class="code">{A, A, B}</span> and lower index of <span class="code">2</span>, the following sets are generated:
 <p /><span class="code">MetaCollectionType.WithRepetition    =&gt; {A, A, B},  {A, B, A},  {A, A, B},  {A, B, A},  {B, A, A},  {B, A, A}</span><p /><span class="code">MetaCollectionType.WithoutRepetition =&gt; {A, A, B},  {A, B, A},  {B, A, A}</span><p /><p />
 When generating non-repetition sets, ordering is based on the lexicographic ordering of the lists based on 
 the provided <span class="noLink">Comparer</span>. 
 If no comparer is provided, then <span class="code">T</span> must be <span class="noLink">IComparable</span> on <span class="code">T</span>.
 <p />
 When generating repetition sets, no comparisions are performed and therefore no comparer is required 
 and <span class="code">T</span> does not need to be <span class="noLink">IComparable</span>.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Example</h2>
            <div id="IDBCSection"> This is a code example.
 <div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-VB.NET">Dim permutations As New PermutationCollection(Of String)({"a", "b", "c"}, MetaCollectionType.WithoutRepetition)

For Each permutation As List(Of String) In permutations
    Console.WriteLine(String.Join(", ", permutation))
Next permutation</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="xaml"><div class="codeHeader"><span class="codeHeaderTitle">XAML</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Constructors</h2>
            <div id="IDAIGASection">
              <table id="ConstructorList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="1e81a4e2-9da3-a52e-22bd-de31ccec3ba4.htm">PermutationCollection<span id="LST1C45FD79_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1C45FD79_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span>(IList<span id="LST1C45FD79_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1C45FD79_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>
                  </td>
                  <td>
 Initializes a new instance of the <span class="selflink">PermutationCollection<span id="LST1C45FD79_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1C45FD79_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> class.
 <p />
 Create a permutation set from the provided list of values.
 <p />
 The values <span class="code">T</span> must implement <span class="noLink">IComparable</span>.
 <p />
 If <span class="code">T</span> does not implement <span class="noLink">IComparable</span> use a constructor with an explict <span class="noLink">IComparer</span>.
 <p />
 The repetition type defaults to <a href="827c4f66-8b57-9dca-7795-6908fd99f410.htm">WithoutRepetition</a></td>
                </tr>
                <tr>
                  <td>
                    <a href="e679d8f8-0ee6-3811-3428-aa3c2f57db7d.htm">PermutationCollection<span id="LST1C45FD79_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1C45FD79_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span>(IList<span id="LST1C45FD79_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1C45FD79_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, MetaCollectionType)</a>
                  </td>
                  <td>
 Initializes a new instance of the <span class="selflink">PermutationCollection<span id="LST1C45FD79_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1C45FD79_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> class.
 <p />
 Create a permutation set from the provided list of values.
 <p />
 If type is <a href="827c4f66-8b57-9dca-7795-6908fd99f410.htm">WithoutRepetition</a>, 
 then values (<span class="code">T</span>) must implement <span class="noLink">IComparable</span>.
 <p />  
 If T does not implement <span class="noLink">IComparable</span> use a constructor with an explict <span class="noLink">IComparer</span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="596a53f1-a01d-553e-1fae-1600794c75cf.htm">PermutationCollection<span id="LST1C45FD79_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1C45FD79_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span>(IList<span id="LST1C45FD79_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1C45FD79_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1C45FD79_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1C45FD79_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>
                  </td>
                  <td>
 Initializes a new instance of the <span class="selflink">PermutationCollection<span id="LST1C45FD79_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1C45FD79_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> class.
 <p />
 Create a permutation set from the provided list of values.
 <p />  
 The values will be compared using the supplied <span class="noLink">IComparer</span>.
 <p />  
 The repetition type defaults to <a href="827c4f66-8b57-9dca-7795-6908fd99f410.htm">WithoutRepetition</a></td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Properties</h2>
            <div id="IDOGASection">
              <table id="PropertyList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="0ce29d01-3f42-b777-50e6-2c67e949ba51.htm">Count</a>
                  </td>
                  <td>
 The count of all permutations that will be returned.
 <p />
 If type is <a href="827c4f66-8b57-9dca-7795-6908fd99f410.htm">WithoutRepetition</a>, 
 then this does not double count permutations with multiple identical values.  
 <p />
 I.e. count of permutations of "<span class="code">AAB</span>" will be <span class="code">3</span> instead of <span class="code">6</span>.  
 If type is <a href="827c4f66-8b57-9dca-7795-6908fd99f410.htm">WithRepetition</a>, 
 then this is all combinations and is therefore <span class="code">N!</span>, where <span class="code">N</span> is the number of values.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="11eec871-68b4-fd97-9baa-abf7efd409b1.htm">LowerIndex</a>
                  </td>
                  <td>
 The lower index of the meta-collection, equal to the number of items returned each iteration.
 <p />
 For Permutation, this is always equal to the <a href="10b292d2-b8e8-091d-d7b3-e190b7a657ef.htm">UpperIndex</a>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9b640d54-f4c0-4588-5e5e-f2328b678a7e.htm">Type</a>
                  </td>
                  <td>
 The type of Permutations set that is generated.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="10b292d2-b8e8-091d-d7b3-e190b7a657ef.htm">UpperIndex</a>
                  </td>
                  <td>
 The upper index of the meta-collection, equal to the number of items in the initial set.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Methods</h2>
            <div id="IDJGASection">
              <table id="MethodList" class="table is-hoverable">
                <tr>
                  <td>
                    <span class="noLink">Equals</span>
                  </td>
                  <td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="c75dfcff-f76a-bc7d-2349-5e8d649beea7.htm">GetEnumerator</a>
                  </td>
                  <td>
 Gets an enumerator for collecting the list of permutations.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetHashCode</span>
                  </td>
                  <td>Serves as the default hash function.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetType</span>
                  </td>
                  <td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ToString</span>
                  </td>
                  <td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Extension Methods</h2>
            <div id="IDAGASection">
              <table id="ExtensionList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="4fc2bde6-7e68-b4f7-8406-9f998fc4201d.htm">CanConvertTo</a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="d438a76e-0b10-2e5a-19bb-33849b67af0e.htm">CanConvertTo<span id="LST1C45FD79_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1C45FD79_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="be81447a-a248-2281-1117-bfc740d6232c.htm">ConvertTo<span id="LST1C45FD79_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1C45FD79_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, an exception is thrown.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="8021acba-836d-7ab5-0827-131cef22840b.htm">ConvertTo<span id="LST1C45FD79_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1C45FD79_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, returns the specified default value.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="90e0095b-fa87-d162-71b4-0b19729ac296.htm">IsDisposable</a>
                  </td>
                  <td>
 Determines whether the specified object is a disposable type 
 (i.e., it implements <span class="noLink">IDisposable</span> interface).
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="b6518cbc-eac7-374e-f53c-70aa031bf15b.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="a447b4b7-8d2e-a234-f910-4749678e12f8.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="4ed5be38-075c-b944-23d9-9298e43d9f2a.htm">ThrowIfNull<span id="LST1C45FD79_32" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TException<span id="LST1C45FD79_33" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Throws the specified exception if the source object is null.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="0d285c1b-bb1e-4700-acf1-a2fb9825fa81.htm">DevCase.Core.Math.Combinatorics Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                </li>
                <li>
                  <a class="quickLink">Remarks</a>
                </li>
                <li>
                  <a class="quickLink">Example</a>
                </li>
                <li>
                  <a class="quickLink">Constructors</a>
                </li>
                <li>
                  <a class="quickLink">Properties</a>
                </li>
                <li>
                  <a class="quickLink">Methods</a>
                </li>
                <li>
                  <a class="quickLink">Extension Methods</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
    <script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script>
  </body>
</html>