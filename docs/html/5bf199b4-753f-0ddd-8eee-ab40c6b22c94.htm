<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>Kernel32.BackupRead Method</title>
    <meta name="Title" content="BackupRead" />
    <meta name="Help.Id" content="M:DevCase.Win32.NativeMethods.Kernel32.BackupRead(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IntPtr,System.UInt32,System.UInt32@,System.Boolean,System.Boolean,System.IntPtr@)" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Win32.NativeMethods" />
    <meta name="guid" content="5bf199b4-753f-0ddd-8eee-ab40c6b22c94" />
    <meta name="Description" content="This function can be used to back up a file or directory, including the security information. This function reads data associated with a specified file or directory into a buffer, which can then be written to the backup medium using the WriteFile function." />
    <meta name="tocFile" content="../toc/IDAJFFA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>Kernel<wbr />32<span id="LST4B5D1F48_0" data-languageSpecificText="cpp=::|nu=."></span>Backup<wbr />Read Method</h1>
            <div class="summary">
 This function can be used to back up a file or directory, including the security information. 
 <p />
 This function reads data associated with a specified file or directory into a buffer, 
 which can then be written to the backup medium using the WriteFile function.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="4b8ebc81-6ba2-6fac-af5b-8bb75ecef853.htm">DevCase.Win32.NativeMethods</a><br /><strong>Assembly:</strong> DevCase.net48 (in DevCase.net48.dll) Version: 6.0.0.0 (6.0)<br /><strong>XMLNS for XAML:</strong> Not mapped to an xmlns.<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="noLink">DllImportAttribute</span>("Kernel32.dll", SetLastError = true)]
<span class="keyword">public</span> <span class="keyword">static</span> <span class="noLink">bool</span> <span class="identifier">BackupRead</span>(
	<span class="noLink">SafeFileHandle</span> <span class="parameter">hFile</span>,
	<span class="noLink">IntPtr</span> <span class="parameter">buffer</span>,
	<span class="noLink">uint</span> <span class="parameter">numberOfBytesToRead</span>,
	<span class="keyword">ref</span> <span class="noLink">uint</span> <span class="parameter">refNumberOfBytesRead</span>,
	<span class="noLink">bool</span> <span class="parameter">abort</span>,
	<span class="noLink">bool</span> <span class="parameter">processSecurity</span>,
	<span class="keyword">ref</span> <span class="noLink">IntPtr</span> <span class="parameter">refContext</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="noLink">DllImportAttribute</span>("Kernel32.dll", SetLastError := true&gt;]
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">BackupRead</span> ( 
	<span class="parameter">hFile</span> <span class="keyword">As</span> <span class="noLink">SafeFileHandle</span>,
	<span class="parameter">buffer</span> <span class="keyword">As</span> <span class="noLink">IntPtr</span>,
	<span class="parameter">numberOfBytesToRead</span> <span class="keyword">As</span> <span class="noLink">UInteger</span>,
	<span class="keyword">ByRef</span> <span class="parameter">refNumberOfBytesRead</span> <span class="keyword">As</span> <span class="noLink">UInteger</span>,
	<span class="parameter">abort</span> <span class="keyword">As</span> <span class="noLink">Boolean</span>,
	<span class="parameter">processSecurity</span> <span class="keyword">As</span> <span class="noLink">Boolean</span>,
	<span class="keyword">ByRef</span> <span class="parameter">refContext</span> <span class="keyword">As</span> <span class="noLink">IntPtr</span>
) <span class="keyword">As</span> <span class="noLink">Boolean</span>

<span class="keyword">Dim</span> <span class="parameter">hFile</span> <span class="keyword">As</span> <span class="noLink">SafeFileHandle</span>
<span class="keyword">Dim</span> <span class="parameter">buffer</span> <span class="keyword">As</span> <span class="noLink">IntPtr</span>
<span class="keyword">Dim</span> <span class="parameter">numberOfBytesToRead</span> <span class="keyword">As</span> <span class="noLink">UInteger</span>
<span class="keyword">Dim</span> <span class="parameter">refNumberOfBytesRead</span> <span class="keyword">As</span> <span class="noLink">UInteger</span>
<span class="keyword">Dim</span> <span class="parameter">abort</span> <span class="keyword">As</span> <span class="noLink">Boolean</span>
<span class="keyword">Dim</span> <span class="parameter">processSecurity</span> <span class="keyword">As</span> <span class="noLink">Boolean</span>
<span class="keyword">Dim</span> <span class="parameter">refContext</span> <span class="keyword">As</span> <span class="noLink">IntPtr</span>

<span class="keyword">Dim</span> <span class="parameter">returnValue</span> <span class="keyword">As</span> <span class="noLink">Boolean</span>

<span class="parameter">returnValue</span> = <a href="094676a4-571b-ad1f-ef01-d8acf5ebed93.htm">Kernel32</a>.<span class="identifier">BackupRead</span>(<span class="parameter">hFile</span>, 
	<span class="parameter">buffer</span>, <span class="parameter">numberOfBytesToRead</span>, <span class="parameter">refNumberOfBytesRead</span>, 
	<span class="parameter">abort</span>, <span class="parameter">processSecurity</span>, <span class="parameter">refContext</span>)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
[<span class="noLink">DllImportAttribute</span>(L"Kernel32.dll", SetLastError = true)]
<span class="keyword">static</span> <span class="noLink">bool</span> <span class="identifier">BackupRead</span>(
	<span class="noLink">SafeFileHandle</span>^ <span class="parameter">hFile</span>, 
	<span class="noLink">IntPtr</span> <span class="parameter">buffer</span>, 
	<span class="noLink">unsigned int</span> <span class="parameter">numberOfBytesToRead</span>, 
	<span class="noLink">unsigned int</span>% <span class="parameter">refNumberOfBytesRead</span>, 
	<span class="noLink">bool</span> <span class="parameter">abort</span>, 
	<span class="noLink">bool</span> <span class="parameter">processSecurity</span>, 
	<span class="noLink">IntPtr</span>% <span class="parameter">refContext</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="noLink">DllImportAttribute</span>("Kernel32.dll", SetLastError = true)&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">BackupRead</span> : 
        <span class="parameter">hFile</span> : <span class="noLink">SafeFileHandle</span> * 
        <span class="parameter">buffer</span> : <span class="noLink">IntPtr</span> * 
        <span class="parameter">numberOfBytesToRead</span> : <span class="noLink">uint32</span> * 
        <span class="parameter">refNumberOfBytesRead</span> : <span class="noLink">uint32</span> <span class="keyword">byref</span> * 
        <span class="parameter">abort</span> : <span class="noLink">bool</span> * 
        <span class="parameter">processSecurity</span> : <span class="noLink">bool</span> * 
        <span class="parameter">refContext</span> : <span class="noLink">IntPtr</span> <span class="keyword">byref</span> <span class="keyword">-&gt;</span> <span class="noLink">bool</span> </code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">hFile</span>  <span class="noLink">SafeFileHandle</span></dt><dd>
 Handle to the file or directory to be backed up. 
 To obtain the handle, call the <a href="4c279059-6d21-48f1-fabd-e5a9fd291e4f.htm">CreateFile(String, FileAccessRights, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a> function. 
 <p />
 The SACLs are not read unless the file handle was created with the 'ACCESS_SYSTEM_SECURITY' access right. 
 For more information, see File security and access rights.
 <p />
 The handle must be synchronous (nonoverlapped). 
 This means that the <a href="0cdc7944-c002-6c71-e2c5-21dc23270caf.htm">Overlapped</a> flag 
 must not be set when <a href="4c279059-6d21-48f1-fabd-e5a9fd291e4f.htm">CreateFile(String, FileAccessRights, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a> is called. 
 <p />
 This function does not validate that the handle it receives is synchronous, 
 so it does not return an error code for a synchronous handle, 
 but calling it with an asynchronous (overlapped) handle can result in 
 subtle errors that are very difficult to debug.
 <p />
 The BackupRead function may fail if <a href="4c279059-6d21-48f1-fabd-e5a9fd291e4f.htm">CreateFile(String, FileAccessRights, FileShare, IntPtr, FileMode, CreateFileFlags, IntPtr)</a> was called with the 
 flag <a href="0cdc7944-c002-6c71-e2c5-21dc23270caf.htm">NoBuffering</a>. 
 In this case, <span class="noLink">GetLastWin32Error<span id="LST4B5D1F48_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span> returns <a href="3c01115c-f2e9-a5d5-cbf3-0510ace8d7de.htm">ERROR_INVALID_PARAMETER</a>.
 </dd><dt class="has-text-weight-normal"><span class="parameter">buffer</span>  <span class="noLink">IntPtr</span></dt><dd>
 Pointer to a buffer that receives the data.
 </dd><dt class="has-text-weight-normal"><span class="parameter">numberOfBytesToRead</span>  <span class="noLink">UInt32</span></dt><dd>
 Length of the buffer, in bytes.
 <p />
 The buffer size must be greater than the size of a <a href="0adc6192-b1e4-5c77-24c4-367ab4d49280.htm">FindStreamInfo</a> structure.
 </dd><dt class="has-text-weight-normal"><span class="parameter">refNumberOfBytesRead</span>  <span class="noLink">UInt32</span><span id="LST4B5D1F48_2" data-languageSpecificText="cpp=%"></span></dt><dd>
 Receives the number of bytes read.
 <p />
 If the function returns <span class="keyword"><span id="LST4B5D1F48_3" data-languageSpecificText="vb=True|nu=true"></span></span>, 
 and the variable pointed to by <span class="parameter">refNumberOfBytesRead</span> is zero, 
 then all the data associated with the file handle has been read.
 </dd><dt class="has-text-weight-normal"><span class="parameter">abort</span>  <span class="noLink">Boolean</span></dt><dd>
 Indicates whether you have finished using <span class="selflink">BackupRead(SafeFileHandle, IntPtr, UInt32, UInt32<span id="LST4B5D1F48_4" data-languageSpecificText="cpp=%"></span>, Boolean, Boolean, IntPtr<span id="LST4B5D1F48_5" data-languageSpecificText="cpp=%"></span>)</span> on the handle. 
 <p />
 While you are backing up the file, specify this parameter as <span class="keyword"><span id="LST4B5D1F48_6" data-languageSpecificText="vb=False|nu=false"></span></span>. 
 <p />
 Once you are done using <span class="selflink">BackupRead(SafeFileHandle, IntPtr, UInt32, UInt32<span id="LST4B5D1F48_7" data-languageSpecificText="cpp=%"></span>, Boolean, Boolean, IntPtr<span id="LST4B5D1F48_8" data-languageSpecificText="cpp=%"></span>)</span>, 
 you must call <span class="selflink">BackupRead(SafeFileHandle, IntPtr, UInt32, UInt32<span id="LST4B5D1F48_9" data-languageSpecificText="cpp=%"></span>, Boolean, Boolean, IntPtr<span id="LST4B5D1F48_10" data-languageSpecificText="cpp=%"></span>)</span> one more time 
 specifying <span class="keyword"><span id="LST4B5D1F48_11" data-languageSpecificText="vb=True|nu=true"></span></span> for this parameter and passing the appropriate <span class="parameter">refContext</span>.
 <p /><span class="parameter">refContext</span> must be passed when <span class="parameter">abort</span> parameter is <span class="keyword"><span id="LST4B5D1F48_12" data-languageSpecificText="vb=True|nu=true"></span></span>; 
 all other parameters are ignored.
 </dd><dt class="has-text-weight-normal"><span class="parameter">processSecurity</span>  <span class="noLink">Boolean</span></dt><dd>
 Indicates whether the function will restore the access-control list (ACL) data for the file or directory.
 <p />
 If <span class="parameter">processSecurity</span> is <span class="keyword"><span id="LST4B5D1F48_13" data-languageSpecificText="vb=True|nu=true"></span></span>, the ACL data will be backed up.
 </dd><dt class="has-text-weight-normal"><span class="parameter">refContext</span>  <span class="noLink">IntPtr</span><span id="LST4B5D1F48_14" data-languageSpecificText="cpp=%"></span></dt><dd>
 Pointer to a variable that receives a pointer to an internal data structure used by
 <span class="selflink">BackupRead(SafeFileHandle, IntPtr, UInt32, UInt32<span id="LST4B5D1F48_15" data-languageSpecificText="cpp=%"></span>, Boolean, Boolean, IntPtr<span id="LST4B5D1F48_16" data-languageSpecificText="cpp=%"></span>)</span> to maintain context information during a backup operation.
 <p />
 You must set the variable pointed to by <span class="parameter">refContext</span> to NULL before the 
 first call to <span class="selflink">BackupRead(SafeFileHandle, IntPtr, UInt32, UInt32<span id="LST4B5D1F48_17" data-languageSpecificText="cpp=%"></span>, Boolean, Boolean, IntPtr<span id="LST4B5D1F48_18" data-languageSpecificText="cpp=%"></span>)</span> for the specified file or directory. 
 <p />
 The function allocates memory for the data structure, and then sets the variable to point to that structure. 
 You must not change <span class="parameter">refContext</span> or the variable that it points to between calls to <span class="selflink">BackupRead(SafeFileHandle, IntPtr, UInt32, UInt32<span id="LST4B5D1F48_19" data-languageSpecificText="cpp=%"></span>, Boolean, Boolean, IntPtr<span id="LST4B5D1F48_20" data-languageSpecificText="cpp=%"></span>)</span>.
 <p />
 To release the memory used by the data structure, 
 call <span class="selflink">BackupRead(SafeFileHandle, IntPtr, UInt32, UInt32<span id="LST4B5D1F48_21" data-languageSpecificText="cpp=%"></span>, Boolean, Boolean, IntPtr<span id="LST4B5D1F48_22" data-languageSpecificText="cpp=%"></span>)</span> with the 
 <span class="parameter">abort</span> parameter set to <span class="keyword"><span id="LST4B5D1F48_23" data-languageSpecificText="vb=True|nu=true"></span></span> when the backup operation is complete.
 </dd></dl><h4 class="quickLinkHeader">Return Value</h4><span class="noLink">Boolean</span><br />
 If the function succeeds, the return value is <span class="keyword"><span id="LST4B5D1F48_24" data-languageSpecificText="vb=True|nu=true"></span></span>.
 <p />
 If the function fails, the return value is <span class="keyword"><span id="LST4B5D1F48_25" data-languageSpecificText="vb=False|nu=false"></span></span>, indicating that an I/O error occurred.
 <p />
 To get extended error information, call <span class="noLink">GetLastWin32Error<span id="LST4B5D1F48_26" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Remarks</h2>
            <div id="IDBCSection">
              <a href="https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-backupread" target="_blank" rel="noopener noreferrer">https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-backupread</a>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="094676a4-571b-ad1f-ef01-d8acf5ebed93.htm">Kernel32 Class</a>
              </div>
              <div>
                <a href="4b8ebc81-6ba2-6fac-af5b-8bb75ecef853.htm">DevCase.Win32.NativeMethods Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                  <ul class="menu">
                    <li>
                      <a class="quickLink">Parameters</a>
                    </li>
                    <li>
                      <a class="quickLink">Return Value</a>
                    </li>
                  </ul>
                </li>
                <li>
                  <a class="quickLink">Remarks</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
    <script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script>
  </body>
</html>