<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>TexfileLines Class</title>
    <meta name="Title" content="TexfileLines" />
    <meta name="Help.Id" content="T:DevCase.Core.DataProcessing.TextFiles.TexfileLines" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Core.DataProcessing.TextFiles" />
    <meta name="guid" content="99480abc-3f7c-7227-cf5c-9ff975ed7df9" />
    <meta name="Description" content="Defines a that contains the text-lines of a textfile." />
    <meta name="tocFile" content="../toc/IDHBAA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>Texfile<wbr />Lines Class</h1>
            <div class="summary">
 Defines a <span class="noLink">List<span id="LST1534497D_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> that contains the text-lines of a textfile.
 </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="308a8138-319d-e76e-2e57-a60cd5d69821.htm">DevCase.Core.DataProcessing.TextFiles</a><br /><strong>Assembly:</strong> DevCase.net48 (in DevCase.net48.dll) Version: 6.0.0.0 (6.0)<br /><strong>XMLNS for XAML:</strong> Not mapped to an xmlns.<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="noLink">SerializableAttribute</span>]
[<span class="noLink">XmlRootAttribute</span>("TexfileLines")]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">TexfileLines</span> : <span class="noLink">List</span>&lt;<span class="noLink">string</span>&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="noLink">SerializableAttribute</span>&gt;
&lt;<span class="noLink">XmlRootAttribute</span>("TexfileLines")&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">TexfileLines</span>
	<span class="keyword">Inherits</span> <span class="noLink">List</span>(<span class="keyword">Of</span> <span class="noLink">String</span>)

<span class="keyword">Dim</span> <span class="parameter">instance</span> <span class="keyword">As</span> <span class="identifier">TexfileLines</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp">[<span class="noLink">SerializableAttribute</span>]
[<span class="noLink">XmlRootAttribute</span>(L"TexfileLines")]
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">TexfileLines</span> : <span class="keyword">public</span> <span class="noLink">List</span>&lt;<span class="noLink">String</span>^&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="noLink">SerializableAttribute</span>&gt;]
[&lt;<span class="noLink">XmlRootAttribute</span>("TexfileLines")&gt;]
<span class="keyword">type</span> <span class="identifier">TexfileLines</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="noLink">List</span>&lt;<span class="noLink">string</span>&gt;
    <span class="keyword">end</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="mailto:CSG1986@Hotmail.com" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">List</span><span id="LST1534497D_2" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_3" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">TexfileLines</span></dd></dl></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Example</h2>
            <div id="IDBCSection"> This is a code example.
 <div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-VB.NET">Using txtFile As New TextfileStream("C:\file.txt", Encoding.Default)

    Dim txtLines As TexfileLines = txtFile.Lines

    txtLines.Add("  Hello World!  ")
    txtLines.Trim(" "c)
    txtLines.Randomize()

    Dim lineIndex As Integer
    Dim lineCount As Integer = txtFile.Lines.Count
    Dim textFormat As String =
        String.Join(ControlChars.NewLine,
                    From line As String In txtFile.Lines
                    Select String.Format("{0}: {1}",
                           Interlocked.Increment(lineIndex).ToString(New String("0"c, lineCount.ToString().Length)), line))

    Console.WriteLine(String.Format("Filepath.......: {0}", txtFile.Filepath))
    Console.WriteLine(String.Format("Blank lines....: {0}", txtLines.CountBlank))
    Console.WriteLine(String.Format("Non-blank lines: {0}", txtLines.CountNonBlank))
    Console.WriteLine(String.Format("Lines..........: {0}", Environment.NewLine + textFormat))

End Using</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="xaml"><div class="codeHeader"><span class="codeHeaderTitle">XAML</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="asp"><div class="codeHeader"><span class="codeHeaderTitle">ASP.NET</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">No code example is currently available or this language may not be supported.</code></pre></div></div></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Constructors</h2>
            <div id="IDAIEASection">
              <table id="ConstructorList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="859002d0-bf04-fe9a-5efb-3e246d0e4e12.htm">TexfileLines(IEnumerable<span id="LST1534497D_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LST1534497D_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>
                  </td>
                  <td>
 Initializes a new instance of the <span class="selflink">TexfileLines</span> class.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="49b6de9a-0c78-416b-e105-5469fd8573d1.htm">TexfileLines(String)</a>
                  </td>
                  <td>
 Prevents a default instance of the <span class="selflink">TexfileLines</span> class from being created.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Properties</h2>
            <div id="ID0PB0EASection">
              <table id="PropertyList" class="table is-hoverable">
                <tr>
                  <td>
                    <span class="noLink">Capacity</span>
                  </td>
                  <td>Gets or sets the total number of elements the internal data structure can hold without resizing.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_6" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_7" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Count</span>
                  </td>
                  <td>Gets the number of elements contained in the <span class="noLink">List<span id="LST1534497D_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_10" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_11" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="038aee77-2c2d-eb6e-0f0c-6656b3aa2fbb.htm">CountBlank</a>
                  </td>
                  <td>
 Gets the number of blank elements actually contained in the <span class="noLink">List<span id="LST1534497D_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="50b3235b-9d04-208b-806f-dfebf7c6e338.htm">CountNonBlank</a>
                  </td>
                  <td>
 Gets the number of non-blank elements actually contained in the <span class="noLink">List<span id="LST1534497D_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Item</span>
                  </td>
                  <td>Gets or sets the element at the specified index.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_16" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_17" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Methods</h2>
            <div id="IDJEASection">
              <table id="MethodList" class="table is-hoverable">
                <tr>
                  <td>
                    <span class="noLink">Add</span>
                  </td>
                  <td>Adds an object to the end of the <span class="noLink">List<span id="LST1534497D_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_20" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_21" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">AddRange</span>
                  </td>
                  <td>Adds the elements of the specified collection to the end of the <span class="noLink">List<span id="LST1534497D_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_24" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_25" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">AsReadOnly</span>
                  </td>
                  <td>Returns a read-only <span class="noLink">ReadOnlyCollection<span id="LST1534497D_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> wrapper for the current collection.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_28" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_29" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BinarySearch(T)</span>
                  </td>
                  <td>Searches the entire sorted <span class="noLink">List<span id="LST1534497D_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> for an element using the default comparer and returns the zero-based index of the element.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_32" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_33" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BinarySearch(T, IComparer<span id="LST1534497D_34" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_35" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Searches the entire sorted <span class="noLink">List<span id="LST1534497D_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> for an element using the specified comparer and returns the zero-based index of the element.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_38" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_39" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">BinarySearch(Int32, Int32, T, IComparer<span id="LST1534497D_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_41" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Searches a range of elements in the sorted <span class="noLink">List<span id="LST1534497D_42" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_43" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> for an element using the specified comparer and returns the zero-based index of the element.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_44" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_45" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Clear</span>
                  </td>
                  <td>Removes all elements from the <span class="noLink">List<span id="LST1534497D_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_48" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_49" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Contains</span>
                  </td>
                  <td>Determines whether an element is in the <span class="noLink">List<span id="LST1534497D_50" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_51" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_52" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_53" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ConvertAll<span id="LST1534497D_54" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TOutput<span id="LST1534497D_55" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></span>
                  </td>
                  <td>Converts the elements in the current <span class="noLink">List<span id="LST1534497D_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> to another type, and returns a list containing the converted elements.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_58" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_59" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CopyTo(<span id="LST1534497D_60" data-languageSpecificText="cpp=array&lt;"></span>T<span id="LST1534497D_61" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</span>
                  </td>
                  <td>Copies the entire <span class="noLink">List<span id="LST1534497D_62" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_63" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> to a compatible one-dimensional array, starting at the beginning of the target array.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_64" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_65" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CopyTo(<span id="LST1534497D_66" data-languageSpecificText="cpp=array&lt;"></span>T<span id="LST1534497D_67" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</span>
                  </td>
                  <td>Copies the entire <span class="noLink">List<span id="LST1534497D_68" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_69" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> to a compatible one-dimensional array, starting at the specified index of the target array.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_70" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_71" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">CopyTo(Int32, <span id="LST1534497D_72" data-languageSpecificText="cpp=array&lt;"></span>T<span id="LST1534497D_73" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span>
                  </td>
                  <td>Copies a range of elements from the <span class="noLink">List<span id="LST1534497D_74" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_75" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> to a compatible one-dimensional array, starting at the specified index of the target array.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_76" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_77" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Equals</span>
                  </td>
                  <td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Exists</span>
                  </td>
                  <td>Determines whether the <span class="noLink">List<span id="LST1534497D_78" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_79" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> contains elements that match the conditions defined by the specified predicate.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_80" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_81" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Find</span>
                  </td>
                  <td>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <span class="noLink">List<span id="LST1534497D_82" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_83" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_84" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_85" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">FindAll</span>
                  </td>
                  <td>Retrieves all the elements that match the conditions defined by the specified predicate.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_86" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_87" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">FindIndex(Predicate<span id="LST1534497D_88" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_89" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <span class="noLink">List<span id="LST1534497D_90" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_91" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_92" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_93" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">FindIndex(Int32, Predicate<span id="LST1534497D_94" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_95" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <span class="noLink">List<span id="LST1534497D_96" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_97" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> that extends from the specified index to the last element.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_98" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_99" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">FindIndex(Int32, Int32, Predicate<span id="LST1534497D_100" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_101" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <span class="noLink">List<span id="LST1534497D_102" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_103" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> that starts at the specified index and contains the specified number of elements.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_104" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_105" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">FindLast</span>
                  </td>
                  <td>Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <span class="noLink">List<span id="LST1534497D_106" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_107" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_108" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_109" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">FindLastIndex(Predicate<span id="LST1534497D_110" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_111" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <span class="noLink">List<span id="LST1534497D_112" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_113" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_114" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_115" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">FindLastIndex(Int32, Predicate<span id="LST1534497D_116" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_117" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <span class="noLink">List<span id="LST1534497D_118" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_119" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> that extends from the first element to the specified index.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_120" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_121" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">FindLastIndex(Int32, Int32, Predicate<span id="LST1534497D_122" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_123" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <span class="noLink">List<span id="LST1534497D_124" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_125" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> that contains the specified number of elements and ends at the specified index.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_126" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_127" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ForEach</span>
                  </td>
                  <td>Performs the specified action on each element of the <span class="noLink">List<span id="LST1534497D_128" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_129" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_130" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_131" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetEnumerator</span>
                  </td>
                  <td>Returns an enumerator that iterates through the <span class="noLink">List<span id="LST1534497D_132" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_133" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_134" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_135" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetHashCode</span>
                  </td>
                  <td>Serves as the default hash function.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetRange</span>
                  </td>
                  <td>Creates a shallow copy of a range of elements in the source <span class="noLink">List<span id="LST1534497D_136" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_137" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_138" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_139" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetType</span>
                  </td>
                  <td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">IndexOf(T)</span>
                  </td>
                  <td>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <span class="noLink">List<span id="LST1534497D_140" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_141" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_142" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_143" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">IndexOf(T, Int32)</span>
                  </td>
                  <td>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <span class="noLink">List<span id="LST1534497D_144" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_145" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> that extends from the specified index to the last element.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_146" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_147" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">IndexOf(T, Int32, Int32)</span>
                  </td>
                  <td>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <span class="noLink">List<span id="LST1534497D_148" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_149" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> that starts at the specified index and contains the specified number of elements.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_150" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_151" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Insert</span>
                  </td>
                  <td>Inserts an element into the <span class="noLink">List<span id="LST1534497D_152" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_153" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> at the specified index.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_154" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_155" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">InsertRange</span>
                  </td>
                  <td>Inserts the elements of a collection into the <span class="noLink">List<span id="LST1534497D_156" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_157" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> at the specified index.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_158" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_159" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LastIndexOf(T)</span>
                  </td>
                  <td>Searches for the specified object and returns the zero-based index of the last occurrence within the entire <span class="noLink">List<span id="LST1534497D_160" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_161" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_162" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_163" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LastIndexOf(T, Int32)</span>
                  </td>
                  <td>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <span class="noLink">List<span id="LST1534497D_164" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_165" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> that extends from the first element to the specified index.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_166" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_167" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">LastIndexOf(T, Int32, Int32)</span>
                  </td>
                  <td>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <span class="noLink">List<span id="LST1534497D_168" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_169" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> that contains the specified number of elements and ends at the specified index.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_170" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_171" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="f8622db9-1c2f-9d56-e8bd-378e34546ebb.htm">Randomize</a>
                  </td>
                  <td>
 Randomizes the elements of this <span class="selflink">TexfileLines</span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Remove</span>
                  </td>
                  <td>Removes the first occurrence of a specific object from the <span class="noLink">List<span id="LST1534497D_172" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_173" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_174" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_175" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">RemoveAll</span>
                  </td>
                  <td>Removes all the elements that match the conditions defined by the specified predicate.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_176" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_177" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="908f3ab0-b8c8-6981-bab9-dbb89ddc1c8d.htm">RemoveAt(IEnumerable<span id="LST1534497D_178" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32<span id="LST1534497D_179" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>
                  </td>
                  <td>
 Removes the elements at the specified indices of this <span class="selflink">TexfileLines</span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">RemoveAt(Int32)</span>
                  </td>
                  <td>Removes the element at the specified index of the <span class="noLink">List<span id="LST1534497D_180" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_181" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_182" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_183" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">RemoveRange</span>
                  </td>
                  <td>Removes a range of elements from the <span class="noLink">List<span id="LST1534497D_184" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_185" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_186" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_187" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Reverse<span id="LST1534497D_188" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>
                  </td>
                  <td>Reverses the order of the elements in the entire <span class="noLink">List<span id="LST1534497D_189" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_190" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_191" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_192" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Reverse(Int32, Int32)</span>
                  </td>
                  <td>Reverses the order of the elements in the specified range.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_193" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_194" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Sort<span id="LST1534497D_195" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>
                  </td>
                  <td>Sorts the elements in the entire <span class="noLink">List<span id="LST1534497D_196" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_197" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> using the default comparer.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_198" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_199" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Sort(Comparison<span id="LST1534497D_200" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_201" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Sorts the elements in the entire <span class="noLink">List<span id="LST1534497D_202" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_203" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> using the specified <span class="noLink">Comparison<span id="LST1534497D_204" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_205" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_206" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_207" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Sort(IComparer<span id="LST1534497D_208" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_209" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Sorts the elements in the entire <span class="noLink">List<span id="LST1534497D_210" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_211" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> using the specified comparer.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_212" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_213" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Sort(Int32, Int32, IComparer<span id="LST1534497D_214" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_215" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span>
                  </td>
                  <td>Sorts the elements in a range of elements in <span class="noLink">List<span id="LST1534497D_216" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_217" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> using the specified comparer.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_218" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_219" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ToArray</span>
                  </td>
                  <td>Copies the elements of the <span class="noLink">List<span id="LST1534497D_220" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_221" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> to a new array.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_222" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_223" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ToString</span>
                  </td>
                  <td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="459cff41-3421-b112-03bb-3367deb5c3c4.htm">Trim</a>
                  </td>
                  <td>
 Removes all leading and trailing occurrences of a set of characters from all the elements of this <span class="selflink">TexfileLines</span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e4f0dfa7-04b9-7145-5409-7064acbd941e.htm">TrimEnd</a>
                  </td>
                  <td>
 Removes all trailing occurrences of a set of characters from all the elements of this <span class="selflink">TexfileLines</span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">TrimExcess</span>
                  </td>
                  <td>Sets the capacity to the actual number of elements in the <span class="noLink">List<span id="LST1534497D_224" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_225" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>, if that number is less than a threshold value.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_226" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_227" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="3c771255-2655-ab9e-f932-87353ad7a7b5.htm">TrimStart</a>
                  </td>
                  <td>
 Removes all leading occurrences of a set of characters from all the elements of this <span class="selflink">TexfileLines</span>.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">TrueForAll</span>
                  </td>
                  <td>Determines whether every element in the <span class="noLink">List<span id="LST1534497D_228" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1534497D_229" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> matches the conditions defined by the specified predicate.<br />(Inherited from <span class="noLink">List</span><span id="LST1534497D_230" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">String</span><span id="LST1534497D_231" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Extension Methods</h2>
            <div id="IDAEASection">
              <table id="ExtensionList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="4fc2bde6-7e68-b4f7-8406-9f998fc4201d.htm">CanConvertTo</a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="d438a76e-0b10-2e5a-19bb-33849b67af0e.htm">CanConvertTo<span id="LST1534497D_232" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_233" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="be81447a-a248-2281-1117-bfc740d6232c.htm">ConvertTo<span id="LST1534497D_234" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_235" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, an exception is thrown.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="8021acba-836d-7ab5-0827-131cef22840b.htm">ConvertTo<span id="LST1534497D_236" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1534497D_237" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, returns the specified default value.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="90e0095b-fa87-d162-71b4-0b19729ac296.htm">IsDisposable</a>
                  </td>
                  <td>
 Determines whether the specified object is a disposable type 
 (i.e., it implements <span class="noLink">IDisposable</span> interface).
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="b6518cbc-eac7-374e-f53c-70aa031bf15b.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="a447b4b7-8d2e-a234-f910-4749678e12f8.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="4ed5be38-075c-b944-23d9-9298e43d9f2a.htm">ThrowIfNull<span id="LST1534497D_238" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TException<span id="LST1534497D_239" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Throws the specified exception if the source object is null.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="308a8138-319d-e76e-2e57-a60cd5d69821.htm">DevCase.Core.DataProcessing.TextFiles Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                </li>
                <li>
                  <a class="quickLink">Example</a>
                </li>
                <li>
                  <a class="quickLink">Constructors</a>
                </li>
                <li>
                  <a class="quickLink">Properties</a>
                </li>
                <li>
                  <a class="quickLink">Methods</a>
                </li>
                <li>
                  <a class="quickLink">Extension Methods</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
    <script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script>
  </body>
</html>