<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>Gdi32 Methods</title>
    <meta name="Title" content="Methods" />
    <meta name="Help.Id" content="Methods.T:DevCase.Win32.NativeMethods.Gdi32" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="DevCase.Win32.NativeMethods" />
    <meta name="guid" content="f53f00b8-7a1d-e647-da12-124ddf5a0a00" />
    <meta name="tocFile" content="../toc/IDGFFA.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">DevCase 6.0 API Reference for NET Framework</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="xaml">XAML</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="asp">ASP.NET</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <div id="HeaderPrelimContainer" class="level my-1 px-2">
          <div id="HeaderTextContainer" class="level-left">
            <div class="level-item">
              <span class="has-text-grey-light">
                <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
              </span>
            </div>
          </div>
        </div>
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="Resizer" class="is-hidden"></div>
          <div id="TopicContent" class="column content is-7">
            <h1>Gdi<wbr />32 Methods</h1>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Methods</h2>
            <div id="IDJDASection">
              <table id="MethodList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="ebb8497e-41b5-feeb-909b-1748cc523503.htm">BitBlt(IntPtr, Int32, Int32, Int32, Int32, IntPtr, Int32, Int32, TernaryRasterOperations)</a>
                  </td>
                  <td>
 Performs a bit-block transfer of the color data corresponding to a rectangle of pixels from 
 the specified source device context into a destination device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6bb249b9-dc13-4804-391b-6ad5721925b9.htm">BitBlt(SafeHandle, Int32, Int32, Int32, Int32, SafeHandle, Int32, Int32, TernaryRasterOperations)</a>
                  </td>
                  <td>
 Performs a bit-block transfer of the color data corresponding to a rectangle of pixels from 
 the specified source device context into a destination device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5cb4bb69-1a15-1b6e-dc53-97fa533236df.htm">CombineRgn</a>
                  </td>
                  <td>
 Combines two regions and stores the result in a third region. 
 <p />
 The two regions are combined according to the specified mode.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c8ae2088-8520-ca18-de44-f144543538f4.htm">CreateCompatibleBitmap(IntPtr, Int32, Int32)</a>
                  </td>
                  <td>
 Creates a bitmap compatible with the device that is associated with the specified device context. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="adfd08d2-1b6d-285e-52f8-94600dbfc25b.htm">CreateCompatibleBitmap(SafeHandle, Int32, Int32)</a>
                  </td>
                  <td>
 Creates a bitmap compatible with the device that is associated with the specified device context. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ed1b5ae8-5206-5544-aa91-7b6a4545156d.htm">CreateCompatibleDC(IntPtr)</a>
                  </td>
                  <td>
 Creates a memory device context (DC) compatible with the specified device.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="be92961c-3276-6ae4-5073-da1442be44a6.htm">CreateCompatibleDC(SafeHandle)</a>
                  </td>
                  <td>
 Creates a memory device context (DC) compatible with the specified device.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="beb5a637-3de5-b480-137b-c8162d34fc8e.htm">CreateDC</a>
                  </td>
                  <td>
 Creates a device context (DC) for a device using the specified name.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d8b02f04-f27a-3782-8482-5fce073ed1c0.htm">CreateEllipticRgn</a>
                  </td>
                  <td>
 Creates an elliptical region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4c9004bb-1af9-7deb-6156-2f83a99528bd.htm">CreateEllipticRgnIndirect(NativeRectangle<span id="LST4AE3A86B_0" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates an elliptical region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9457556c-6818-d00c-fc43-7d1c56490bbb.htm">CreateEllipticRgnIndirect(Rectangle<span id="LST4AE3A86B_1" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates an elliptical region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a13f5f5a-cb2f-fda8-fb09-febb5c1b35e8.htm">CreateEnhMetaFile(IntPtr, String, NativeRectangle<span id="LST4AE3A86B_2" data-languageSpecificText="cpp=%"></span>, String)</a>
                  </td>
                  <td>
 Creates a device context (DC) for an enhanced-format metafile. 
 <p />
 This device context can be used to store a device-independent picture.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4c9518cc-d98b-3ec4-5972-857ac50815d3.htm">CreateEnhMetaFile(IntPtr, String, Rectangle<span id="LST4AE3A86B_3" data-languageSpecificText="cpp=%"></span>, String)</a>
                  </td>
                  <td>
 Creates a device context (DC) for an enhanced-format metafile. 
 <p />
 This device context can be used to store a device-independent picture.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e606cc10-f488-a493-7e72-8804c58eeff3.htm">CreatePolygonRgn(NativePoint, Int32, FillMode)</a>
                  </td>
                  <td>
 Creates a polygonal region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5888570c-9ce8-314b-9e65-5a0deddb9f22.htm">CreatePolygonRgn(Point, Int32, FillMode)</a>
                  </td>
                  <td>
 Creates a polygonal region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5359ec7b-696c-d078-0c25-b5e3afa5967c.htm">CreatePolyPolygonRgn(<span id="LST4AE3A86B_4" data-languageSpecificText="cpp=array&lt;"></span>NativePoint<span id="LST4AE3A86B_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST4AE3A86B_6" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LST4AE3A86B_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, FillMode)</a>
                  </td>
                  <td>
 Creates a region consisting of a series of polygons. The polygons can overlap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9a1f0a3f-79eb-1c14-ab36-170ff411b5a4.htm">CreatePolyPolygonRgn(<span id="LST4AE3A86B_8" data-languageSpecificText="cpp=array&lt;"></span>Point<span id="LST4AE3A86B_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST4AE3A86B_10" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LST4AE3A86B_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, FillMode)</a>
                  </td>
                  <td>
 Creates a region consisting of a series of polygons. The polygons can overlap.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6bd1b7ed-6a37-3ef7-fb8b-8a85f4adb6bb.htm">CreateRectRgn</a>
                  </td>
                  <td>
 Creates a rectangular region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e291bb91-6cd2-6c57-b228-66d84f25b76d.htm">CreateRectRgnIndirect(NativeRectangle<span id="LST4AE3A86B_12" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a rectangular region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e27dab5e-15c1-0ed5-d3b7-82f400264ebb.htm">CreateRectRgnIndirect(Rectangle<span id="LST4AE3A86B_13" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Creates a rectangular region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="da115741-34ad-9ab1-a89e-1bdbf05d7b45.htm">CreateRoundRectRgn</a>
                  </td>
                  <td>
 Creates a rectangular region with rounded corners.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ec0f3eb7-e0f8-2bbc-db19-ec6c35627a80.htm">CreateSolidBrush</a>
                  </td>
                  <td>
 Creates a logical brush that has the specified solid color.
 <p />
 A solid brush is a bitmap that the system uses to paint the interiors of filled shapes.
 <p />
 After an application creates a brush by calling <a href="ec0f3eb7-e0f8-2bbc-db19-ec6c35627a80.htm">CreateSolidBrush(UInt32)</a>,
 it can select that brush into any device context by calling the <a href="96e638ae-2139-0eb1-0fd1-5b0f6b51972d.htm">SelectObject(IntPtr, IntPtr)</a> function.
 <p />
 When you no longer need the brush, call the <a href="229fdcf3-a29d-a2bb-ec76-2cf7594feadf.htm">DeleteObject(IntPtr)</a> function to delete it.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="e8712aea-28e4-cffc-5360-2e2ba30e8ca8.htm">DeleteDC(IntPtr)</a>
                  </td>
                  <td>
 Deletes the specified device context (DC).
 <p />
 An application must not delete a DC whose handle was obtained by calling the <a href="b03b4b3d-e35a-f6d3-a703-ed461202bbfe.htm">GetDC(IntPtr)</a> function. 
 instead, it must call the <a href="fdd402c4-267e-a500-c165-b939555f71ba.htm">ReleaseDC(IntPtr, IntPtr)</a> function to free the DC.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f1d6c236-5bcb-306c-7a07-4ec9bf8d2523.htm">DeleteDC(SafeHandle)</a>
                  </td>
                  <td>
 Deletes the specified device context (DC).
 <p />
 An application must not delete a DC whose handle was obtained by calling the <a href="b03b4b3d-e35a-f6d3-a703-ed461202bbfe.htm">GetDC(IntPtr)</a> function. 
 instead, it must call the <a href="fdd402c4-267e-a500-c165-b939555f71ba.htm">ReleaseDC(IntPtr, IntPtr)</a> function to free the DC.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ac8d3500-5df0-44dd-61a2-9e4780a9c47d.htm">DeleteEnhMetaFile</a>
                  </td>
                  <td>
 Deletes an enhanced-format metafile or an enhanced-format metafile handle.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1b4e0a1e-d53e-efea-c9cd-e27e1ee343b7.htm">DeleteObject(HandleRef)</a>
                  </td>
                  <td>
 Deletes a logical pen, brush, font, bitmap, region, or palette,
 freeing all system resources associated with the object.
 <p />
 After the object is deleted, the specified handle is no longer valid.
 <p />
 Do not delete a drawing object (pen or brush) while it is still selected into a DC.
 <p />
 When a pattern brush is deleted, the bitmap associated with the brush is not deleted. 
 The bitmap must be deleted independently.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="229fdcf3-a29d-a2bb-ec76-2cf7594feadf.htm">DeleteObject(IntPtr)</a>
                  </td>
                  <td>
 Deletes a logical pen, brush, font, bitmap, region, or palette,
 freeing all system resources associated with the object.
 <p />
 After the object is deleted, the specified handle is no longer valid.
 <p />
 Do not delete a drawing object (pen or brush) while it is still selected into a DC.
 <p />
 When a pattern brush is deleted, the bitmap associated with the brush is not deleted. 
 The bitmap must be deleted independently.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6d5df457-3d5c-163a-b3cf-cbae46f2bd76.htm">DeleteObject(SafeHandle)</a>
                  </td>
                  <td>
 Deletes a logical pen, brush, font, bitmap, region, or palette,
 freeing all system resources associated with the object.
 <p />
 After the object is deleted, the specified handle is no longer valid.
 <p />
 Do not delete a drawing object (pen or brush) while it is still selected into a DC.
 <p />
 When a pattern brush is deleted, the bitmap associated with the brush is not deleted. 
 The bitmap must be deleted independently.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="93b02976-6b69-eb00-994e-c4c6c60e0cfd.htm">EqualRgn</a>
                  </td>
                  <td>
 Checks the two specified regions to determine whether they are identical. 
 <p />
 The function considers two regions identical if they are equal in size and shape.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Equals</span>
                  </td>
                  <td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="4dfc3c15-873b-efd2-9205-cf68d6904b56.htm">ExtTextOut(IntPtr, Int32, Int32, ExtTextOutOptions, NativeRectangle<span id="LST4AE3A86B_14" data-languageSpecificText="cpp=%"></span>, String, UInt32, <span id="LST4AE3A86B_15" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LST4AE3A86B_16" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a>
                  </td>
                  <td>
 Draws text using the currently selected font, background color, and text color. 
 <p />
 You can optionally provide dimensions to be used for clipping, opaquing, or both.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f5796e75-c58a-c45d-b699-3b9d24b171bc.htm">ExtTextOut(IntPtr, Int32, Int32, ExtTextOutOptions, Rectangle<span id="LST4AE3A86B_17" data-languageSpecificText="cpp=%"></span>, String, UInt32, <span id="LST4AE3A86B_18" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LST4AE3A86B_19" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a>
                  </td>
                  <td>
 Draws text using the currently selected font, background color, and text color. 
 <p />
 You can optionally provide dimensions to be used for clipping, opaquing, or both.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fc2e4d06-6e82-3e36-9d21-2830534a0da9.htm">ExtTextOut(SafeHandle, Int32, Int32, ExtTextOutOptions, NativeRectangle<span id="LST4AE3A86B_20" data-languageSpecificText="cpp=%"></span>, String, UInt32, <span id="LST4AE3A86B_21" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LST4AE3A86B_22" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a>
                  </td>
                  <td>
 Draws text using the currently selected font, background color, and text color. 
 <p />
 You can optionally provide dimensions to be used for clipping, opaquing, or both.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f06033d2-6471-606b-951a-a36e7ea94206.htm">ExtTextOut(SafeHandle, Int32, Int32, ExtTextOutOptions, Rectangle<span id="LST4AE3A86B_23" data-languageSpecificText="cpp=%"></span>, String, UInt32, <span id="LST4AE3A86B_24" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LST4AE3A86B_25" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a>
                  </td>
                  <td>
 Draws text using the currently selected font, background color, and text color. 
 <p />
 You can optionally provide dimensions to be used for clipping, opaquing, or both.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="861f3b47-ef81-dce3-0a2a-afba79ce7c46.htm">FillRgn</a>
                  </td>
                  <td>
 Fills a region by using the specified brush.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d165bf07-9b77-8cee-638a-78667adb0f9d.htm">FrameRgn</a>
                  </td>
                  <td>
 Draws a border around the specified region by using the specified brush.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="fe64a20c-0ec3-b168-c37a-048e48226cd7.htm">GdiFlush</a>
                  </td>
                  <td>
 Flushes the calling thread's current batch.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1e754a94-56a7-9c4d-e9d7-7dfbdacdfb44.htm">GetClipBox(IntPtr, NativeRectangle<span id="LST4AE3A86B_26" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the tightest bounding rectangle that can be drawn around the current visible area on the device.
 <p />
 The visible area is defined by the current clipping region or clip path, as well as any overlapping windows.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8d23863e-bc82-dfe0-37f4-a32d7c0a8c5d.htm">GetClipBox(IntPtr, Rectangle<span id="LST4AE3A86B_27" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the tightest bounding rectangle that can be drawn around the current visible area on the device.
 <p />
 The visible area is defined by the current clipping region or clip path, as well as any overlapping windows.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="6ab7d4a4-75c4-75f5-fa03-f230e4d3bb52.htm">GetClipBox(SafeHandle, NativeRectangle<span id="LST4AE3A86B_28" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the tightest bounding rectangle that can be drawn around the current visible area on the device.
 <p />
 The visible area is defined by the current clipping region or clip path, as well as any overlapping windows.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="212bf5e9-d340-3eb2-27d3-652ccd08088d.htm">GetClipBox(SafeHandle, Rectangle<span id="LST4AE3A86B_29" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the dimensions of the tightest bounding rectangle that can be drawn around the current visible area on the device.
 <p />
 The visible area is defined by the current clipping region or clip path, as well as any overlapping windows.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="be9d4a25-4617-acbf-dfea-d6b6370fb191.htm">GetClipRgn(IntPtr, IntPtr<span id="LST4AE3A86B_30" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves a handle identifying the current application-defined clipping region for the specified device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f097ca50-45ec-4e6e-2112-121d5d103fd9.htm">GetClipRgn(SafeHandle, IntPtr<span id="LST4AE3A86B_31" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves a handle identifying the current application-defined clipping region for the specified device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dd793ad0-d1af-22a6-9d2a-fd2ddb38fc57.htm">GetDeviceCaps(IntPtr, Int32)</a>
                  </td>
                  <td>
 Retrieves device-specific information for the specified device.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="29be850f-ce09-57f5-ada4-8937d511f474.htm">GetDeviceCaps(SafeHandle, Int32)</a>
                  </td>
                  <td>
 Retrieves device-specific information for the specified device.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1f418cd8-6a33-cfe9-ab53-0712d5be49bc.htm">GetEnhMetaFile</a>
                  </td>
                  <td>
 Creates a handle that identifies the enhanced-format metafile stored in the specified file.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetHashCode</span>
                  </td>
                  <td>Serves as the default hash function.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="6c7abfa7-7dce-8fbf-506e-c1f441993d2c.htm">GetObject</a>
                  </td>
                  <td>
 Retrieves information for the specified graphics object.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="8857b4b3-647c-a6da-7515-bc917c2db21d.htm">GetPixel(IntPtr, Int32, Int32)</a>
                  </td>
                  <td>
 Retrieves the Red, Green, Blue (RGB) color value of the pixel at the specified coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5aaf5774-9f76-acb0-6043-0d6207dd5eab.htm">GetPixel(SafeHandle, Int32, Int32)</a>
                  </td>
                  <td>
 Retrieves the Red, Green, Blue (RGB) color value of the pixel at the specified coordinates.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="0bbe1840-8911-be28-11a1-fff09f571e2c.htm">GetPolyFillMode</a>
                  </td>
                  <td>
 Retrieves the current polygon fill mode.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="77c99094-f52a-83fd-f19e-49a2d51f280d.htm">GetRgnBox(IntPtr, NativeRectangle<span id="LST4AE3A86B_32" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the bounding rectangle of the specified region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4c27391c-4e08-caf5-e143-c9efa4c1057f.htm">GetRgnBox(IntPtr, Rectangle<span id="LST4AE3A86B_33" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Retrieves the bounding rectangle of the specified region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="d1e9be48-05a1-8478-f41b-b358c35b93e9.htm">GetStockObject</a>
                  </td>
                  <td>
 Retrieves a handle to one of the stock pens, brushes, fonts, or palettes.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="12333136-b352-a737-0c05-79f3e8d922db.htm">GetTextMetricsA(HandleRef, TextMetricA<span id="LST4AE3A86B_34" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Fills the specified buffer with the metrics for the currently selected font.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4bcd0829-7324-f56a-80ae-9b460575234f.htm">GetTextMetricsA(IntPtr, TextMetricA<span id="LST4AE3A86B_35" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Fills the specified buffer with the metrics for the currently selected font.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="513e4e96-35c9-86ce-e7bf-e8a6fdb131b4.htm">GetTextMetricsA(SafeHandle, TextMetricA<span id="LST4AE3A86B_36" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Fills the specified buffer with the metrics for the currently selected font.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dae2e370-d037-52c9-e376-b57d7d4a6052.htm">GetTextMetricsW(HandleRef, TextMetricW<span id="LST4AE3A86B_37" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Fills the specified buffer with the metrics for the currently selected font.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="24a55cf8-98ad-f320-7c16-5e19fb17b01b.htm">GetTextMetricsW(IntPtr, TextMetricW<span id="LST4AE3A86B_38" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Fills the specified buffer with the metrics for the currently selected font.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="ee97a66e-6be8-c328-b1e9-851e0fd92a3e.htm">GetTextMetricsW(SafeHandle, TextMetricW<span id="LST4AE3A86B_39" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Fills the specified buffer with the metrics for the currently selected font.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetType</span>
                  </td>
                  <td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="922fec66-7913-3868-9492-a3eb83e25604.htm">InvertRgn</a>
                  </td>
                  <td>
 Inverts the colors in the specified region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="a3545112-1b1b-553c-9789-a79b952bb460.htm">OffsetRgn</a>
                  </td>
                  <td>
 Moves a region by the specified offsets.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4e0ac607-8f1e-46f6-4c6b-e70a280e416d.htm">PaintRgn</a>
                  </td>
                  <td>
 Paints the specified region by using the brush currently selected into the device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="f51131eb-8cd0-2f4d-a0aa-5ff46f0d8cee.htm">PtInRegion(IntPtr, Int32, Int32)</a>
                  </td>
                  <td>
 Determines whether the specified point is inside the specified region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="35c21b87-f53b-40aa-8efb-2a690a5127e8.htm">PtInRegion(SafeHandle, Int32, Int32)</a>
                  </td>
                  <td>
 Determines whether the specified point is inside the specified region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c8b50f7e-4b55-f16e-d1d6-b9ea7b57c627.htm">PtVisible(IntPtr, Int32, Int32)</a>
                  </td>
                  <td>
 Determines whether the specified point is within the clipping region of a device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="c901d595-9787-83df-041f-432de29f9f3a.htm">PtVisible(SafeHandle, Int32, Int32)</a>
                  </td>
                  <td>
 Determines whether the specified point is within the clipping region of a device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="4eb87991-ee83-2ee6-65df-d40b5591972e.htm">RectInRegion(IntPtr, NativeRectangle<span id="LST4AE3A86B_40" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether any part of the specified rectangle is within the boundaries of a region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="9b025fca-d372-4fac-5316-3b0fff0826ae.htm">RectInRegion(IntPtr, Rectangle<span id="LST4AE3A86B_41" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether any part of the specified rectangle is within the boundaries of a region.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="779c6651-96c9-5839-0e3d-49ec43a4d302.htm">RectVisible(IntPtr, NativeRectangle<span id="LST4AE3A86B_42" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether any part of the specified rectangle lies within the clipping region of a device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1c990e6b-a14b-57c9-c31a-076ba6a6a373.htm">RectVisible(IntPtr, Rectangle<span id="LST4AE3A86B_43" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether any part of the specified rectangle lies within the clipping region of a device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1317ac9f-e18b-b4aa-a1c5-7366a667a8c4.htm">RectVisible(SafeHandle, NativeRectangle<span id="LST4AE3A86B_44" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether any part of the specified rectangle lies within the clipping region of a device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="12e38470-ac5f-a67f-2d4a-eb4051bace04.htm">RectVisible(SafeHandle, Rectangle<span id="LST4AE3A86B_45" data-languageSpecificText="cpp=%"></span>)</a>
                  </td>
                  <td>
 Determines whether any part of the specified rectangle lies within the clipping region of a device context.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="5842c6db-6c62-d20e-70f9-47d565d863b3.htm">SelectObject(HandleRef, HandleRef)</a>
                  </td>
                  <td>
 Selects an object into a specified device context.
 <p />
 The new object replaces the previous object of the same type. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="96e638ae-2139-0eb1-0fd1-5b0f6b51972d.htm">SelectObject(IntPtr, IntPtr)</a>
                  </td>
                  <td>
 Selects an object into a specified device context.
 <p />
 The new object replaces the previous object of the same type. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="acf40f42-5d39-18aa-a9c5-d6e1ec5e40e5.htm">SelectObject(SafeHandle, SafeHandle)</a>
                  </td>
                  <td>
 Selects an object into a specified device context.
 <p />
 The new object replaces the previous object of the same type. 
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="02a6a0a4-f94b-0f2f-55c0-5a923e4daa17.htm">SetBkColor</a>
                  </td>
                  <td>
 Sets the current background color to the specified color value, 
 or to the nearest physical color if the device cannot represent the specified color value.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="1eb5bc7e-22c9-07ae-d3b3-518855c36b42.htm">SetBkMode</a>
                  </td>
                  <td>
 Sts the background mix mode of the specified device context (DC). 
 <p />
 The background mix mode is used with text, hatched brushes, and pen styles that are not solid lines.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="dcea1168-0c60-98c9-ee9c-035a801ae660.htm">SetPolyFillMode</a>
                  </td>
                  <td>
 Sets the polygon fill mode for functions that fill polygons.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="194e5ff8-3431-f6ea-d250-b43ebc4da4c5.htm">SetTextColor</a>
                  </td>
                  <td>
 Sets the text color for the specified device context to the specified color.
 </td>
                </tr>
                <tr>
                  <td>
                    <a href="eaff6f7f-22a6-3f8b-9851-ecc34d6b4a04.htm">SwapBuffers</a>
                  </td>
                  <td>
 Exchanges the front and back buffers if the current pixel format for the window referenced by the
 specified device context includes a back buffer.
 </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ToString</span>
                  </td>
                  <td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="316bccb6-bc7f-5db2-6c6b-f99656a8186b.htm">UpdateColors</a>
                  </td>
                  <td>
 Updates the client area of the specified device context by remapping the 
 current colors in the client area to the currently realized logical palette.
 </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Extension Methods</h2>
            <div id="IDADASection">
              <table id="ExtensionList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="4fc2bde6-7e68-b4f7-8406-9f998fc4201d.htm">CanConvertTo</a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="d438a76e-0b10-2e5a-19bb-33849b67af0e.htm">CanConvertTo<span id="LST4AE3A86B_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST4AE3A86B_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Determines whether the source object can be converted to the specified target type.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="be81447a-a248-2281-1117-bfc740d6232c.htm">ConvertTo<span id="LST4AE3A86B_48" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST4AE3A86B_49" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, an exception is thrown.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="8021acba-836d-7ab5-0827-131cef22840b.htm">ConvertTo<span id="LST4AE3A86B_50" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST4AE3A86B_51" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Converts an object to the specified target type.
 <p />
 If the conversion fails, returns the specified default value.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="90e0095b-fa87-d162-71b4-0b19729ac296.htm">IsDisposable</a>
                  </td>
                  <td>
 Determines whether the specified object is a disposable type 
 (i.e., it implements <span class="noLink">IDisposable</span> interface).
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="b6518cbc-eac7-374e-f53c-70aa031bf15b.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="a447b4b7-8d2e-a234-f910-4749678e12f8.htm">Speak</a>
                  </td>
                  <td>
 Speaks the string representation of the source object by using the 
 operating system integrated text-to-speech synthesizer.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="4ed5be38-075c-b944-23d9-9298e43d9f2a.htm">ThrowIfNull<span id="LST4AE3A86B_52" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TException<span id="LST4AE3A86B_53" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
                  </td>
                  <td>
 Throws the specified exception if the source object is null.
 <br />(Defined by <a href="99b1c09c-36f9-64c9-4e72-adb2f0a4fc1e.htm">ObjectExtensions</a>)</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="017f6188-18f7-2334-4b54-6233463b9b7e.htm">Gdi32 Class</a>
              </div>
              <div>
                <a href="4b8ebc81-6ba2-6fac-af5b-8bb75ecef853.htm">DevCase.Win32.NativeMethods Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Methods</a>
                </li>
                <li>
                  <a class="quickLink">Extension Methods</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <div style="text-align: left;">
  <a href="..\index.html">🏠 Home</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.back()">⬅️ Back</a>
  <span style="margin: 0 5px;">|</span>
  <a href="javascript:history.forward()">➡️ Forward</a>
</div>
            <p>ElektroStudios 2024</p>
            <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:CSG1986%40Hotmail.com?Subject=DevCase%206.0%20API%20Reference%20for%20NET%20Framework">CSG1986@Hotmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("vb");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script>
  </body>
</html>