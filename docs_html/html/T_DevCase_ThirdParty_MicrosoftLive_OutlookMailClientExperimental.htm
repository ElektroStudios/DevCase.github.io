<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>OutlookMailClientExperimental Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="OutlookMailClientExperimental class" />
    <meta name="System.Keywords" content="DevCase.ThirdParty.MicrosoftLive.OutlookMailClientExperimental class" />
    <meta name="Microsoft.Help.F1" content="DevCase.ThirdParty.MicrosoftLive.OutlookMailClientExperimental" />
    <meta name="Microsoft.Help.Id" content="T:DevCase.ThirdParty.MicrosoftLive.OutlookMailClientExperimental" />
    <meta name="Description" content="A client for Outlook.com mail service. This class uses the experimental Microsoft's ADAL build." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="DevCase.ThirdParty.MicrosoftLive" />
    <meta name="file" content="T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental" />
    <meta name="guid" content="T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">DevCase Class Library v3.3<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_DevCase_Class_Library_v3_3.htm" title="DevCase Class Library v3.3" tocid="roottoc">DevCase Class Library v3.3</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_DevCase_Class_Library_v3_3.htm" title="Namespaces" tocid="R_Project_DevCase_Class_Library_v3_3">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_DevCase_ThirdParty.htm" title="DevCase.ThirdParty Namespaces" tocid="G_DevCase_ThirdParty">DevCase.ThirdParty Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_DevCase_ThirdParty_MicrosoftLive.htm" title="DevCase.ThirdParty.MicrosoftLive" tocid="N_DevCase_ThirdParty_MicrosoftLive">DevCase.ThirdParty.MicrosoftLive</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental.htm" title="OutlookMailClientExperimental Class" tocid="T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental">OutlookMailClientExperimental Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental__ctor.htm" title="OutlookMailClientExperimental Constructor " tocid="Overload_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental__ctor">OutlookMailClientExperimental Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental.htm" title="OutlookMailClientExperimental Properties" tocid="Properties_T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental">OutlookMailClientExperimental Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental.htm" title="OutlookMailClientExperimental Methods" tocid="Methods_T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental">OutlookMailClientExperimental Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>OutlookMailClientExperimental Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
 A client for Outlook.com mail service.
 <p />
 This class uses the experimental Microsoft's ADAL build.
 </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LST1B01B015_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_DevCase_Core_Design_AestheticObject.htm">DevCase.Core.Design<span id="LST1B01B015_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>AestheticObject</a><br />    <span class="selflink">DevCase.ThirdParty.MicrosoftLive<span id="LST1B01B015_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>OutlookMailClientExperimental</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_DevCase_ThirdParty_MicrosoftLive.htm">DevCase.ThirdParty.MicrosoftLive</a><br />
    <strong>Assembly:</strong>
   DevCase.ThirdParty (in DevCase.ThirdParty.dll) Version: 3.3.0.0 (3.3)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EECA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EECA','cs','1','4');return false;">C#</a></div><div id="ID1EECA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EECA','vb','2','4');return false;">VB</a></div><div id="ID1EECA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EECA','cpp','3','4');return false;">C++</a></div><div id="ID1EECA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EECA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EECA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EECA');return false;" title="Copy">Copy</a></div></div><div id="ID1EECA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">OutlookMailClientExperimental</span> : <span class="identifier">AestheticObject</span></pre></div><div id="ID1EECA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">OutlookMailClientExperimental</span>
	<span class="keyword">Inherits</span> <span class="identifier">AestheticObject</span>

<span class="keyword">Dim</span> <span class="parameter">instance</span> <span class="keyword">As</span> <span class="identifier">OutlookMailClientExperimental</span></pre></div><div id="ID1EECA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">OutlookMailClientExperimental</span> <span class="keyword">sealed</span> : <span class="keyword">public</span> <span class="identifier">AestheticObject</span></pre></div><div id="ID1EECA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">OutlookMailClientExperimental</span> =  
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">AestheticObject</span>
    <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EECA");</script></div><p>The <span class="selflink">OutlookMailClientExperimental</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental__ctor.htm">OutlookMailClientExperimental(IntPtr, String, OutlookMailScopes)</a></td><td><div class="summary">
 Initializes a new instance of the <a href="T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClient.htm">OutlookMailClient</a> class.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental__ctor_1.htm">OutlookMailClientExperimental(IntPtr, String, Uri, OutlookMailScopes)</a></td><td><div class="summary">
 Initializes a new instance of the <a href="T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClient.htm">OutlookMailClient</a> class.
 </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_Client.htm">Client</a></td><td><div class="summary">
 Gets the wrapped Outlook services client.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_ClientId.htm">ClientId</a></td><td><div class="summary">
 Gets the unique identifier of the registered application to use Outlook.com Mail API.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_IsAuthorized.htm">IsAuthorized</a></td><td><div class="summary">
 Gets a value that determines whether Outlook.com API authorization was done.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_RedirectUri.htm">RedirectUri</a></td><td><div class="summary">
 Gets the current Outlook.com mail OAuthv2 redirection Uri.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_Scopes.htm">Scopes</a></td><td><div class="summary">
 Gets the current Outlook.com mail OAuthv2 scopes.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_WindowHandle.htm">WindowHandle</a></td><td><div class="summary">
 Gets the window handle of the window that owns this <a href="T_DevCase_ThirdParty_MicrosoftLive_OutlookMailClient.htm">OutlookMailClient</a> instance.
 </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_AuthorizeAsync.htm">AuthorizeAsync</a></td><td><div class="summary">
 Authorizes this instance to use Microsoft Outlook Mail services.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_DeleteMessageAsync.htm">DeleteMessageAsync</a></td><td><div class="summary">
 Asynchronously permanentlly deletes the specified message.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_GetFolderAsyncByDisplayName.htm">GetFolderAsyncByDisplayName</a></td><td><div class="summary">
 Asynchronously gets a mailbox folder that satisfies the specified display name.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_GetFolderAsyncById.htm">GetFolderAsyncById</a></td><td><div class="summary">
 Asynchronously gets a mailbox folder that satisfies the specified Id.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_GetFolderAsyncByKnownId.htm">GetFolderAsyncByKnownId</a></td><td><div class="summary">
 Asynchronously gets a mailbox folder that satisfies the specified known Id.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_GetMessagesAsync.htm">GetMessagesAsync</a></td><td><div class="summary">
 Asynchronously gets the messages contained in the specified mailbox folder.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_MoveMessageAsync.htm">MoveMessageAsync</a></td><td><div class="summary">
 Asynchronously moves the specified message to the target folder.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_ThirdParty_MicrosoftLive_OutlookMailClientExperimental_RecycleMessageAsync.htm">RecycleMessageAsync</a></td><td><div class="summary">
 Asynchronously sends the specified message to the <span class="code">DeletedItems</span> folder.
 </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_Core_Extensions_Object_ObjectExtensions_CanConvertTo.htm">CanConvertTo(Type)</a></td><td>Overloaded.  <div class="summary">
 Determines whether the source object can be converted to the specified target type.
 </div> (Defined by <a href="T_DevCase_Core_Extensions_Object_ObjectExtensions.htm">ObjectExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_Core_Extensions_Object_ObjectExtensions_CanConvertTo__1.htm">CanConvertTo<span id="LST1B01B015_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1B01B015_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST1B01B015_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_5?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td>Overloaded.  <div class="summary">
 Determines whether the source object can be converted to the specified target type.
 </div> (Defined by <a href="T_DevCase_Core_Extensions_Object_ObjectExtensions.htm">ObjectExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_Core_Extensions_Object_ObjectExtensions_ConvertTo__1.htm">ConvertTo<span id="LST1B01B015_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1B01B015_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST1B01B015_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_8?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td>Overloaded.  <div class="summary">
 Converts an object to the specified target type.
 <p />
 If the conversion fails, an exception is thrown.
 </div> (Defined by <a href="T_DevCase_Core_Extensions_Object_ObjectExtensions.htm">ObjectExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_Core_Extensions_Object_ObjectExtensions_ConvertTo__1_1.htm">ConvertTo<span id="LST1B01B015_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1B01B015_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B01B015_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(T)</a></td><td>Overloaded.  <div class="summary">
 Converts an object to the specified target type.
 <p />
 If the conversion fails, returns the specified default value.
 </div> (Defined by <a href="T_DevCase_Core_Extensions_Object_ObjectExtensions.htm">ObjectExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_DevCase_Core_Extensions_Object_ObjectExtensions_IsDisposable.htm">IsDisposable</a></td><td><div class="summary">
 Determines whether the specified object is disposable.
 </div> (Defined by <a href="T_DevCase_Core_Extensions_Object_ObjectExtensions.htm">ObjectExtensions</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection"> 
 This example demonstrates how to iterate the messages contained in a custom mailbox folder named "Youtube", 
 then parse those messages received from Youtube, extract the video urls, write the urls to a local text file, 
 and finally recycle the parsed message.
 <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAABA_tab1" class="codeSnippetContainerTabSingle">VB</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">Imports</span> System.Threading.Tasks
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">Imports</span> DevCase.ThirdParty.Office365
<span class="highlight-spacerShort"></span><span class="highlight-keyword">Imports</span> DevCase.ThirdParty.Office365
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">Imports</span> Microsoft.Experimental.IdentityModel.Clients.ActiveDirectory
<span class="highlight-spacerShort"></span><span class="highlight-keyword">Imports</span> Microsoft.OData.ProxyExtensions
<span class="highlight-spacerShort"></span><span class="highlight-keyword">Imports</span> Microsoft.Office365.OutlookServices
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">Public</span> <span class="highlight-keyword">NotInheritable</span> <span class="highlight-keyword">Class</span> Form1 : <span class="highlight-keyword">Inherits</span> Form
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">Private</span> outlookClient <span class="highlight-keyword">As</span> OutlookMailClient
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">' You can get an API key at Microsoft's Application Registration Portal:</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">' https://apps.dev.microsoft.com/#/appList</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">ReadOnly</span> clientId <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"YOUR CLIENT ID"</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">ReadOnly</span> folderName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"Youtube"</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">ReadOnly</span> dstFilepath <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"C:\Youtube Urls.txt"</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> Button1_Click(sender <span class="highlight-keyword">As</span> <span class="highlight-keyword">Object</span>, e <span class="highlight-keyword">As</span> EventArgs) <span class="highlight-keyword">Handles</span> Button1.Click
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Me</span>.BeginInvoke(<span class="highlight-keyword">Sub</span>() <span class="highlight-keyword">Me</span>.ItrateMessages())
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Async</span> <span class="highlight-keyword">Sub</span> ItrateMessages()
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Me</span>.outlookClient = <span class="highlight-keyword">New</span> OutlookMailClient(Process.GetCurrentProcess.MainWindowHandle, <span class="highlight-keyword">Me</span>.clientId, OutlookMailScopes.ReadWrite <span class="highlight-keyword">Or</span> OutlookMailScopes.Send)
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Await</span> <span class="highlight-keyword">Me</span>.outlookClient.AuthorizeAsync()
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Dim</span> folder <span class="highlight-keyword">As</span> IMailFolder = <span class="highlight-keyword">Await</span> <span class="highlight-keyword">Me</span>.outlookClient.GetFolderAsyncByDisplayName(<span class="highlight-keyword">Me</span>.folderName)
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Dim</span> messages <span class="highlight-keyword">As</span> IPagedCollection(<span class="highlight-keyword">Of</span> IMessage) = <span class="highlight-keyword">Await</span> <span class="highlight-keyword">Me</span>.outlookClient.GetMessagesAsync(folder)
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Dim</span> pageCount <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Do</span> <span class="highlight-keyword">While</span> <span class="highlight-keyword">True</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>            Debug.WriteLine(<span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"Reading page {0:00}"</span>, Threading.Interlocked.Increment(pageCount)))
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> msg <span class="highlight-keyword">As</span> IMessage <span class="highlight-keyword">In</span> messages.CurrentPage
<span class="highlight-spacerShort"></span>                <span class="highlight-keyword">Dim</span> success <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = <span class="highlight-keyword">Await</span> <span class="highlight-keyword">Me</span>.ParseAndDeleteYoutubeMessage(msg, <span class="highlight-keyword">Me</span>.dstFilepath)
<span class="highlight-spacerShort"></span>            <span class="highlight-keyword">Next</span> msg
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>            <span class="highlight-comment">' Read next page of messages.</span>
<span class="highlight-spacerShort"></span>            <span class="highlight-keyword">If</span> messages.MorePagesAvailable <span class="highlight-keyword">Then</span>
<span class="highlight-spacerShort"></span>                messages = <span class="highlight-keyword">Await</span> messages.GetNextPageAsync()
<span class="highlight-spacerShort"></span>            <span class="highlight-keyword">Else</span>
<span class="highlight-spacerShort"></span>                <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Do</span>
<span class="highlight-spacerShort"></span>            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Loop</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>        Debug.WriteLine(<span class="highlight-literal">"Finished!"</span>)
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Async</span> <span class="highlight-keyword">Function</span> ParseAndDeleteYoutubeMessage(<span class="highlight-keyword">ByVal</span> msg <span class="highlight-keyword">As</span> IMessage, <span class="highlight-keyword">ByVal</span> dstFile <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>) <span class="highlight-keyword">As</span> Task(<span class="highlight-keyword">Of</span> <span class="highlight-keyword">Boolean</span>)
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Dim</span> urlRegex <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Regex(<span class="highlight-literal">"content="</span><span class="highlight-literal">"http://www.youtube.com.+watch.+uploademail"</span>, RegexOptions.IgnoreCase)
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Dim</span> attrRegex <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Regex(<span class="highlight-literal">"attribution_link\?a=(.){10,11}&amp;u=\/watch%3Fv%3D"</span>, RegexOptions.IgnoreCase)
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Try</span>
<span class="highlight-spacerShort"></span>            <span class="highlight-keyword">If</span> (msg.From.EmailAddress.Name.Equals(<span class="highlight-literal">"YouTube"</span>, StringComparison.OrdinalIgnoreCase)) <span class="highlight-keyword">Then</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>                <span class="highlight-keyword">Dim</span> body <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = msg.Body.Content
<span class="highlight-spacerShort"></span>                <span class="highlight-keyword">Dim</span> isMatch <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = urlRegex.IsMatch(body)
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>                <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> (isMatch) <span class="highlight-keyword">Then</span>
<span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> InvalidOperationException(<span class="highlight-literal">"Youtube regex doesn't match."</span>)
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>                <span class="highlight-keyword">Else</span>
<span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">Dim</span> urlMatches <span class="highlight-keyword">As</span> MatchCollection = urlRegex.Matches(body)
<span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">Dim</span> urls <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>() =
<span class="highlight-spacerShort"></span>                            (From m <span class="highlight-keyword">As</span> Match <span class="highlight-keyword">In</span> urlMatches.Cast(<span class="highlight-keyword">Of</span> Match)
<span class="highlight-spacerShort"></span>                             <span class="highlight-keyword">Select</span> (Environment.NewLine &amp; m.Value)
<span class="highlight-spacerShort"></span>                            ).Distinct().ToArray()
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">For</span> x <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> (urls.Length - <span class="highlight-number">1</span>)
<span class="highlight-spacerShort"></span>                        <span class="highlight-keyword">Dim</span> isAttrMatch <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = attrRegex.IsMatch(urls(x))
<span class="highlight-spacerShort"></span>                        <span class="highlight-keyword">If</span> (isAttrMatch) <span class="highlight-keyword">Then</span>
<span class="highlight-spacerShort"></span>                            urls(x) = attrRegex.Replace(urls(x), <span class="highlight-literal">"watch?v="</span>)
<span class="highlight-spacerShort"></span>                        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-spacerShort"></span>                        urls(x) = urls(x).Replace(<span class="highlight-literal">"content="</span><span class="highlight-literal">""</span>, <span class="highlight-literal">""</span>)
<span class="highlight-spacerShort"></span>                        urls(x) = urls(x).Replace(<span class="highlight-literal">"%26feature%3Dem-uploademail"</span>, <span class="highlight-literal">""</span>)
<span class="highlight-spacerShort"></span>                        urls(x) = urls(x).Replace(<span class="highlight-literal">"&amp;feature=em-uploademail"</span>, <span class="highlight-literal">""</span>)
<span class="highlight-spacerShort"></span>                        urls(x) = urls(x).Replace(<span class="highlight-literal">"%26no_autoplay%3D1"</span>, <span class="highlight-literal">""</span>)
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">Next</span> x
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>                    File.AppendAllText(dstFile, <span class="highlight-keyword">String</span>.Join(<span class="highlight-literal">""</span>, urls))
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>                    msg.IsRead = <span class="highlight-keyword">True</span>
<span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">Await</span> msg.MoveAsync(<span class="highlight-literal">"DeletedItems"</span>)
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>            <span class="highlight-keyword">Return</span> <span class="highlight-keyword">True</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">Catch</span> ex <span class="highlight-keyword">As</span> Exception
<span class="highlight-spacerShort"></span>            <span class="highlight-keyword">Throw</span>
<span class="highlight-spacerShort"></span>            <span class="highlight-keyword">Return</span> <span class="highlight-keyword">False</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Try</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID8RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_DevCase_ThirdParty_MicrosoftLive.htm">DevCase.ThirdParty.MicrosoftLive Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>ElektroStudios 2020</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:ElektroStudios%40ElHacker.net?Subject=DevCase%20Class%20Library%20v3.3">ElektroStudios@ElHacker.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>