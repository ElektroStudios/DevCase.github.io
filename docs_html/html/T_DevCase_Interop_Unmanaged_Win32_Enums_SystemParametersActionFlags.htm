<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>SystemParametersActionFlags Enumeration</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="SystemParametersActionFlags enumeration" />
    <meta name="System.Keywords" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags enumeration" />
    <meta name="System.Keywords" content="GetBeep enumeration member" />
    <meta name="System.Keywords" content="SetBeep enumeration member" />
    <meta name="System.Keywords" content="Getborder enumeration member" />
    <meta name="System.Keywords" content="SetBorder enumeration member" />
    <meta name="System.Keywords" content="GetKeyboardSpeed enumeration member" />
    <meta name="System.Keywords" content="SetKeyboardSpeed enumeration member" />
    <meta name="System.Keywords" content="IconHorizontalSpacing enumeration member" />
    <meta name="System.Keywords" content="IconVerticalSpacing enumeration member" />
    <meta name="System.Keywords" content="GetScreensaveTimeout enumeration member" />
    <meta name="System.Keywords" content="SetScreensaveTimeout enumeration member" />
    <meta name="System.Keywords" content="SetScreensaveActive enumeration member" />
    <meta name="System.Keywords" content="SetDesktopWallpaper enumeration member" />
    <meta name="System.Keywords" content="GetDesktopWallpaper enumeration member" />
    <meta name="System.Keywords" content="GetKeyboardDelay enumeration member" />
    <meta name="System.Keywords" content="SetKeyboardDelay enumeration member" />
    <meta name="System.Keywords" content="GetIconTitleWrap enumeration member" />
    <meta name="System.Keywords" content="SetIconTitleWrap enumeration member" />
    <meta name="System.Keywords" content="GetMenuDropAlignment enumeration member" />
    <meta name="System.Keywords" content="SetMenuDropAlignment enumeration member" />
    <meta name="System.Keywords" content="SetDoubleClickWidth enumeration member" />
    <meta name="System.Keywords" content="SetDoubleClickHeight enumeration member" />
    <meta name="System.Keywords" content="SetDoubleclickTime enumeration member" />
    <meta name="System.Keywords" content="SetMousebuttonSwap enumeration member" />
    <meta name="System.Keywords" content="GetDragFullWindows enumeration member" />
    <meta name="System.Keywords" content="SetDragFullWindows enumeration member" />
    <meta name="System.Keywords" content="GetFontSmoothing enumeration member" />
    <meta name="System.Keywords" content="SetFontSmoothing enumeration member" />
    <meta name="System.Keywords" content="SetDragWidth enumeration member" />
    <meta name="System.Keywords" content="SetDragHeight enumeration member" />
    <meta name="System.Keywords" content="Setcursors enumeration member" />
    <meta name="System.Keywords" content="Seticons enumeration member" />
    <meta name="System.Keywords" content="GetDefaultInputLang enumeration member" />
    <meta name="System.Keywords" content="SetDefaultInputLang enumeration member" />
    <meta name="System.Keywords" content="SetLangToggle enumeration member" />
    <meta name="System.Keywords" content="GetMouseTrails enumeration member" />
    <meta name="System.Keywords" content="SetMouseTrails enumeration member" />
    <meta name="System.Keywords" content="GetSnapToDefButton enumeration member" />
    <meta name="System.Keywords" content="SetSnapToDefButton enumeration member" />
    <meta name="System.Keywords" content="GetMouseHoverWidth enumeration member" />
    <meta name="System.Keywords" content="SetMouseHoverWidth enumeration member" />
    <meta name="System.Keywords" content="GetMouseHoverHeight enumeration member" />
    <meta name="System.Keywords" content="SetMouseHoverHeight enumeration member" />
    <meta name="System.Keywords" content="GetMouseHoverTime enumeration member" />
    <meta name="System.Keywords" content="SetMouseHoverTime enumeration member" />
    <meta name="System.Keywords" content="GetWheelScrollLines enumeration member" />
    <meta name="System.Keywords" content="SetWheelScrollLines enumeration member" />
    <meta name="System.Keywords" content="GetMenuShowDelay enumeration member" />
    <meta name="System.Keywords" content="SetMenuShowDelay enumeration member" />
    <meta name="System.Keywords" content="GetMouseSpeed enumeration member" />
    <meta name="System.Keywords" content="SetMouseSpeed enumeration member" />
    <meta name="System.Keywords" content="GetActiveWindowTracking enumeration member" />
    <meta name="System.Keywords" content="SetActiveWindowTracking enumeration member" />
    <meta name="System.Keywords" content="GetMenuAnimation enumeration member" />
    <meta name="System.Keywords" content="SetMenuAnimation enumeration member" />
    <meta name="System.Keywords" content="GetComboboxAnimation enumeration member" />
    <meta name="System.Keywords" content="SetComboboxAnimation enumeration member" />
    <meta name="System.Keywords" content="GetListboxSmoothScrolling enumeration member" />
    <meta name="System.Keywords" content="SetListboxSmoothScrolling enumeration member" />
    <meta name="System.Keywords" content="GetGradientCaptions enumeration member" />
    <meta name="System.Keywords" content="SetGradientCaptions enumeration member" />
    <meta name="System.Keywords" content="GetKeyboardCues enumeration member" />
    <meta name="System.Keywords" content="SetKeyboardCues enumeration member" />
    <meta name="System.Keywords" content="GetHotTracking enumeration member" />
    <meta name="System.Keywords" content="SetHotTracking enumeration member" />
    <meta name="System.Keywords" content="GetMenuFade enumeration member" />
    <meta name="System.Keywords" content="SetMenuFade enumeration member" />
    <meta name="System.Keywords" content="GetSelectionFade enumeration member" />
    <meta name="System.Keywords" content="SetSelectionFade enumeration member" />
    <meta name="System.Keywords" content="GetTooltipAnimation enumeration member" />
    <meta name="System.Keywords" content="SetTooltipAnimation enumeration member" />
    <meta name="System.Keywords" content="GetCursorShadow enumeration member" />
    <meta name="System.Keywords" content="SetCursorShadow enumeration member" />
    <meta name="System.Keywords" content="GetMouseSonar enumeration member" />
    <meta name="System.Keywords" content="SetMouseSonar enumeration member" />
    <meta name="System.Keywords" content="GetMouseClickLock enumeration member" />
    <meta name="System.Keywords" content="SetMouseClickLock enumeration member" />
    <meta name="System.Keywords" content="GetMouseVanish enumeration member" />
    <meta name="System.Keywords" content="SetMouseVanish enumeration member" />
    <meta name="System.Keywords" content="GetFlatMenu enumeration member" />
    <meta name="System.Keywords" content="SetFlatMenu enumeration member" />
    <meta name="System.Keywords" content="GetDropShadow enumeration member" />
    <meta name="System.Keywords" content="SetDropShadow enumeration member" />
    <meta name="System.Keywords" content="GetBlockSendInputResets enumeration member" />
    <meta name="System.Keywords" content="SetBlockSendInputResets enumeration member" />
    <meta name="System.Keywords" content="GetUiEffects enumeration member" />
    <meta name="System.Keywords" content="SetUiEffects enumeration member" />
    <meta name="System.Keywords" content="GetForegroundLockTimeout enumeration member" />
    <meta name="System.Keywords" content="SetForegroundLockTimeout enumeration member" />
    <meta name="System.Keywords" content="GetActiveWndTrkTimeout enumeration member" />
    <meta name="System.Keywords" content="SetActiveWndTrkTimeout enumeration member" />
    <meta name="System.Keywords" content="GetForegroundFlashCount enumeration member" />
    <meta name="System.Keywords" content="SetForegroundFlashCount enumeration member" />
    <meta name="System.Keywords" content="GetCaretWidth enumeration member" />
    <meta name="System.Keywords" content="SetCaretWidth enumeration member" />
    <meta name="System.Keywords" content="GetMouseClickLockTime enumeration member" />
    <meta name="System.Keywords" content="SetMouseClickLockTime enumeration member" />
    <meta name="System.Keywords" content="GetFontSmoothingContrast enumeration member" />
    <meta name="System.Keywords" content="SetFontSmoothingContrast enumeration member" />
    <meta name="System.Keywords" content="GetFocusBorderWidth enumeration member" />
    <meta name="System.Keywords" content="SetFocusBorderWidth enumeration member" />
    <meta name="System.Keywords" content="GetFocusBorderHeight enumeration member" />
    <meta name="System.Keywords" content="SetFocusBorderHeight enumeration member" />
    <meta name="System.Keywords" content="GetClientAreaAnimation enumeration member" />
    <meta name="System.Keywords" content="SetClientAreaAnimation enumeration member" />
    <meta name="System.Keywords" content="GetDisableOverlappedContent enumeration member" />
    <meta name="System.Keywords" content="SetDisableOverlappedContent enumeration member" />
    <meta name="System.Keywords" content="GetMessageDuration enumeration member" />
    <meta name="System.Keywords" content="SetMessageDuration enumeration member" />
    <meta name="System.Keywords" content="GetCleartype enumeration member" />
    <meta name="System.Keywords" content="SetCleartype enumeration member" />
    <meta name="System.Keywords" content="GetSystemlanguageBar enumeration member" />
    <meta name="System.Keywords" content="SetSystemlanguageBar enumeration member" />
    <meta name="System.Keywords" content="GetWheelscrollChars enumeration member" />
    <meta name="System.Keywords" content="SetWheelscrollChars enumeration member" />
    <meta name="System.Keywords" content="GetScreensaveSecure enumeration member" />
    <meta name="System.Keywords" content="SetScreensaveSecure enumeration member" />
    <meta name="System.Keywords" content="GetHungAppTimeout enumeration member" />
    <meta name="System.Keywords" content="SetHungAppTimeout enumeration member" />
    <meta name="System.Keywords" content="GetWaitToKillTimeout enumeration member" />
    <meta name="System.Keywords" content="SetWaitToKillTimeout enumeration member" />
    <meta name="System.Keywords" content="GetWaitToKillServiceTimeout enumeration member" />
    <meta name="System.Keywords" content="SetWaitToKillServiceTimeout enumeration member" />
    <meta name="System.Keywords" content="SetPenWindows enumeration member" />
    <meta name="System.Keywords" content="GetScreensaverRunning enumeration member" />
    <meta name="System.Keywords" content="SetScreensaverRunning enumeration member" />
    <meta name="System.Keywords" content="GetFilterKeys enumeration member" />
    <meta name="System.Keywords" content="SetFilterKeys enumeration member" />
    <meta name="System.Keywords" content="GetToggleKeys enumeration member" />
    <meta name="System.Keywords" content="SetToggleKeys enumeration member" />
    <meta name="System.Keywords" content="GetMouseKeys enumeration member" />
    <meta name="System.Keywords" content="SetMouseKeys enumeration member" />
    <meta name="System.Keywords" content="GetShowSounds enumeration member" />
    <meta name="System.Keywords" content="SetShowSounds enumeration member" />
    <meta name="System.Keywords" content="GetStickyKeys enumeration member" />
    <meta name="System.Keywords" content="SetStickyKeys enumeration member" />
    <meta name="System.Keywords" content="GetAccessTimeout enumeration member" />
    <meta name="System.Keywords" content="SetAccessTimeout enumeration member" />
    <meta name="System.Keywords" content="GetSerialKeys enumeration member" />
    <meta name="System.Keywords" content="SetSerialKeys enumeration member" />
    <meta name="System.Keywords" content="GetSoundsEntry enumeration member" />
    <meta name="System.Keywords" content="SetSoundsEntry enumeration member" />
    <meta name="System.Keywords" content="GetAudioDescription enumeration member" />
    <meta name="System.Keywords" content="SetAudioDescription enumeration member" />
    <meta name="System.Keywords" content="GetFontSmoothingOrientation enumeration member" />
    <meta name="System.Keywords" content="SetFontSmoothingOrientation enumeration member" />
    <meta name="System.Keywords" content="GetFontSmoothingType enumeration member" />
    <meta name="System.Keywords" content="SetFontSmoothingType enumeration member" />
    <meta name="System.Keywords" content="GetTooltipFade enumeration member" />
    <meta name="System.Keywords" content="SetTooltipFade enumeration member" />
    <meta name="System.Keywords" content="GetActiveWndTrkZorder enumeration member" />
    <meta name="System.Keywords" content="SetActiveWndTrkZorder enumeration member" />
    <meta name="System.Keywords" content="GetShowIMEui enumeration member" />
    <meta name="System.Keywords" content="SetShowIMEui enumeration member" />
    <meta name="System.Keywords" content="GetWindowsExtension enumeration member" />
    <meta name="System.Keywords" content="SetHandheld enumeration member" />
    <meta name="System.Keywords" content="GetLowPowerTimeout enumeration member" />
    <meta name="System.Keywords" content="SetLowPowerTimeout enumeration member" />
    <meta name="System.Keywords" content="GetPowerOffTimeout enumeration member" />
    <meta name="System.Keywords" content="SetPowerOffTimeout enumeration member" />
    <meta name="System.Keywords" content="GetLowPowerActive enumeration member" />
    <meta name="System.Keywords" content="SetLowPowerActive enumeration member" />
    <meta name="System.Keywords" content="GetPowerOffActive enumeration member" />
    <meta name="System.Keywords" content="SetPowerOffActive enumeration member" />
    <meta name="System.Keywords" content="GetHighContrast enumeration member" />
    <meta name="System.Keywords" content="SetHighContrast enumeration member" />
    <meta name="System.Keywords" content="GetKeyboardPref enumeration member" />
    <meta name="System.Keywords" content="SetKeyboardPref enumeration member" />
    <meta name="System.Keywords" content="GetScreenReader enumeration member" />
    <meta name="System.Keywords" content="SetScreenReader enumeration member" />
    <meta name="System.Keywords" content="GetAnimation enumeration member" />
    <meta name="System.Keywords" content="SetAnimation enumeration member" />
    <meta name="System.Keywords" content="GetNonClientMetrics enumeration member" />
    <meta name="System.Keywords" content="SetNonClientMetrics enumeration member" />
    <meta name="System.Keywords" content="GetMinimizedMetrics enumeration member" />
    <meta name="System.Keywords" content="SetMinimizedMetrics enumeration member" />
    <meta name="System.Keywords" content="GetIconMetrics enumeration member" />
    <meta name="System.Keywords" content="SetIconMetrics enumeration member" />
    <meta name="System.Keywords" content="GetWorkArea enumeration member" />
    <meta name="System.Keywords" content="SetWorkArea enumeration member" />
    <meta name="System.Keywords" content="GetFastTaskSwitch enumeration member" />
    <meta name="System.Keywords" content="SetFastTaskSwitch enumeration member" />
    <meta name="System.Keywords" content="GetIconTitleLogFont enumeration member" />
    <meta name="System.Keywords" content="SetIconTitleLogFont enumeration member" />
    <meta name="System.Keywords" content="GetGridGranularity enumeration member" />
    <meta name="System.Keywords" content="SetGridGranularity enumeration member" />
    <meta name="System.Keywords" content="SetDeskPattern enumeration member" />
    <meta name="System.Keywords" content="GetMouse enumeration member" />
    <meta name="System.Keywords" content="SetMouse enumeration member" />
    <meta name="System.Keywords" content="LangDriver enumeration member" />
    <meta name="System.Keywords" content="GetScreensaveActive enumeration member" />
    <meta name="System.Keywords" content="GetLogicalDPIoverride enumeration member" />
    <meta name="System.Keywords" content="SetLogicalDPIoverride enumeration member" />
    <meta name="System.Keywords" content="GetContactVisualization enumeration member" />
    <meta name="System.Keywords" content="SetContactVisualization enumeration member" />
    <meta name="System.Keywords" content="GetGestureVisualization enumeration member" />
    <meta name="System.Keywords" content="SetGestureVisualization enumeration member" />
    <meta name="System.Keywords" content="GetMousewheelRouting enumeration member" />
    <meta name="System.Keywords" content="SetMousewheelRouting enumeration member" />
    <meta name="System.Keywords" content="GetPenVisualization enumeration member" />
    <meta name="System.Keywords" content="SetPenVisualization enumeration member" />
    <meta name="System.Keywords" content="GetThreadLocalInputSettings enumeration member" />
    <meta name="System.Keywords" content="SetThreadLocalInputSettings enumeration member" />
    <meta name="System.Keywords" content="GetDockMoving enumeration member" />
    <meta name="System.Keywords" content="SetDockMoving enumeration member" />
    <meta name="System.Keywords" content="GetDragFromMaximize enumeration member" />
    <meta name="System.Keywords" content="SetDragFromMaximize enumeration member" />
    <meta name="System.Keywords" content="GetMouseDockThreshold enumeration member" />
    <meta name="System.Keywords" content="SetMouseDockThreshold enumeration member" />
    <meta name="System.Keywords" content="GetMouseDragoutThreshold enumeration member" />
    <meta name="System.Keywords" content="SetMouseDragoutThreshold enumeration member" />
    <meta name="System.Keywords" content="GetMouseSideMoveThreshold enumeration member" />
    <meta name="System.Keywords" content="SetMouseSideMoveThreshold enumeration member" />
    <meta name="System.Keywords" content="GetSnapSizing enumeration member" />
    <meta name="System.Keywords" content="SetSnapSizing enumeration member" />
    <meta name="System.Keywords" content="GetWinArranging enumeration member" />
    <meta name="System.Keywords" content="SetWinArranging enumeration member" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetBeep" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetBeep" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.Getborder" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetBorder" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetKeyboardSpeed" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetKeyboardSpeed" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.IconHorizontalSpacing" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.IconVerticalSpacing" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetScreensaveTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetScreensaveTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetScreensaveActive" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDesktopWallpaper" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDesktopWallpaper" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetKeyboardDelay" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetKeyboardDelay" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetIconTitleWrap" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetIconTitleWrap" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMenuDropAlignment" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMenuDropAlignment" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDoubleClickWidth" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDoubleClickHeight" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDoubleclickTime" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMousebuttonSwap" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDragFullWindows" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDragFullWindows" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFontSmoothing" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFontSmoothing" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDragWidth" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDragHeight" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.Setcursors" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.Seticons" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDefaultInputLang" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDefaultInputLang" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetLangToggle" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseTrails" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseTrails" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSnapToDefButton" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSnapToDefButton" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseHoverWidth" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseHoverWidth" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseHoverHeight" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseHoverHeight" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseHoverTime" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseHoverTime" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWheelScrollLines" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWheelScrollLines" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMenuShowDelay" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMenuShowDelay" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseSpeed" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseSpeed" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetActiveWindowTracking" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetActiveWindowTracking" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMenuAnimation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMenuAnimation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetComboboxAnimation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetComboboxAnimation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetListboxSmoothScrolling" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetListboxSmoothScrolling" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetGradientCaptions" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetGradientCaptions" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetKeyboardCues" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetKeyboardCues" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetHotTracking" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetHotTracking" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMenuFade" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMenuFade" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSelectionFade" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSelectionFade" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetTooltipAnimation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetTooltipAnimation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetCursorShadow" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetCursorShadow" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseSonar" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseSonar" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseClickLock" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseClickLock" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseVanish" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseVanish" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFlatMenu" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFlatMenu" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDropShadow" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDropShadow" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetBlockSendInputResets" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetBlockSendInputResets" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetUiEffects" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetUiEffects" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetForegroundLockTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetForegroundLockTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetActiveWndTrkTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetActiveWndTrkTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetForegroundFlashCount" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetForegroundFlashCount" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetCaretWidth" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetCaretWidth" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseClickLockTime" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseClickLockTime" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFontSmoothingContrast" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFontSmoothingContrast" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFocusBorderWidth" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFocusBorderWidth" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFocusBorderHeight" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFocusBorderHeight" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetClientAreaAnimation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetClientAreaAnimation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDisableOverlappedContent" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDisableOverlappedContent" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMessageDuration" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMessageDuration" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetCleartype" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetCleartype" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSystemlanguageBar" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSystemlanguageBar" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWheelscrollChars" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWheelscrollChars" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetScreensaveSecure" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetScreensaveSecure" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetHungAppTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetHungAppTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWaitToKillTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWaitToKillTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWaitToKillServiceTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWaitToKillServiceTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetPenWindows" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetScreensaverRunning" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetScreensaverRunning" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFilterKeys" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFilterKeys" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetToggleKeys" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetToggleKeys" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseKeys" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseKeys" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetShowSounds" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetShowSounds" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetStickyKeys" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetStickyKeys" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetAccessTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetAccessTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSerialKeys" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSerialKeys" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSoundsEntry" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSoundsEntry" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetAudioDescription" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetAudioDescription" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFontSmoothingOrientation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFontSmoothingOrientation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFontSmoothingType" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFontSmoothingType" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetTooltipFade" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetTooltipFade" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetActiveWndTrkZorder" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetActiveWndTrkZorder" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetShowIMEui" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetShowIMEui" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWindowsExtension" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetHandheld" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetLowPowerTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetLowPowerTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetPowerOffTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetPowerOffTimeout" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetLowPowerActive" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetLowPowerActive" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetPowerOffActive" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetPowerOffActive" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetHighContrast" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetHighContrast" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetKeyboardPref" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetKeyboardPref" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetScreenReader" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetScreenReader" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetAnimation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetAnimation" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetNonClientMetrics" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetNonClientMetrics" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMinimizedMetrics" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMinimizedMetrics" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetIconMetrics" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetIconMetrics" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWorkArea" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWorkArea" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFastTaskSwitch" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFastTaskSwitch" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetIconTitleLogFont" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetIconTitleLogFont" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetGridGranularity" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetGridGranularity" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDeskPattern" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouse" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouse" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.LangDriver" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetScreensaveActive" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetLogicalDPIoverride" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetLogicalDPIoverride" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetContactVisualization" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetContactVisualization" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetGestureVisualization" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetGestureVisualization" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMousewheelRouting" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMousewheelRouting" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetPenVisualization" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetPenVisualization" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetThreadLocalInputSettings" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetThreadLocalInputSettings" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDockMoving" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDockMoving" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDragFromMaximize" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDragFromMaximize" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseDockThreshold" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseDockThreshold" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseDragoutThreshold" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseDragoutThreshold" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseSideMoveThreshold" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseSideMoveThreshold" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSnapSizing" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSnapSizing" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWinArranging" />
    <meta name="Microsoft.Help.F1" content="DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWinArranging" />
    <meta name="Microsoft.Help.Id" content="T:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags" />
    <meta name="Description" content="Flags for uiAction parameter of function." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="DevCase.Interop.Unmanaged.Win32.Enums" />
    <meta name="file" content="T_DevCase_Interop_Unmanaged_Win32_Enums_SystemParametersActionFlags" />
    <meta name="guid" content="T_DevCase_Interop_Unmanaged_Win32_Enums_SystemParametersActionFlags" />
    
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">DevCase Class Library v3.3<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_DevCase_Class_Library_v3_3.htm" title="DevCase Class Library v3.3" tocid="roottoc">DevCase Class Library v3.3</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_DevCase_Class_Library_v3_3.htm" title="Namespaces" tocid="R_Project_DevCase_Class_Library_v3_3">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_DevCase_Interop.htm" title="DevCase.Interop Namespaces" tocid="G_DevCase_Interop">DevCase.Interop Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_DevCase_Interop_Unmanaged.htm" title="DevCase.Interop.Unmanaged Namespaces" tocid="G_DevCase_Interop_Unmanaged">DevCase.Interop.Unmanaged Namespaces</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_DevCase_Interop_Unmanaged_Win32_Enums.htm" title="DevCase.Interop.Unmanaged.Win32.Enums" tocid="N_DevCase_Interop_Unmanaged_Win32_Enums">DevCase.Interop.Unmanaged.Win32.Enums</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ActiveDesktopApplyMode.htm" title="ActiveDesktopApplyMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ActiveDesktopApplyMode">ActiveDesktopApplyMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AppbarMessages.htm" title="AppbarMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AppbarMessages">AppbarMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ApplicationRestartFlags.htm" title="ApplicationRestartFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ApplicationRestartFlags">ApplicationRestartFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyCreateFileAccess.htm" title="AppPolicyCreateFileAccess Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyCreateFileAccess">AppPolicyCreateFileAccess Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyProcessTerminationMethod.htm" title="AppPolicyProcessTerminationMethod Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyProcessTerminationMethod">AppPolicyProcessTerminationMethod Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyShowDeveloperDiagnostic.htm" title="AppPolicyShowDeveloperDiagnostic Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyShowDeveloperDiagnostic">AppPolicyShowDeveloperDiagnostic Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyThreadInitializationType.htm" title="AppPolicyThreadInitializationType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AppPolicyThreadInitializationType">AppPolicyThreadInitializationType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AssemblyInfoFlags.htm" title="AssemblyInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AssemblyInfoFlags">AssemblyInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AssocF.htm" title="AssocF Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AssocF">AssocF Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AssocStr.htm" title="AssocStr Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AssocStr">AssocStr Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_AutoCompleteFlags.htm" title="AutoCompleteFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_AutoCompleteFlags">AutoCompleteFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_BackgroundMode.htm" title="BackgroundMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_BackgroundMode">BackgroundMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_BinaryType.htm" title="BinaryType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_BinaryType">BinaryType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_BroadcastSystemMessageFlags.htm" title="BroadcastSystemMessageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_BroadcastSystemMessageFlags">BroadcastSystemMessageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_BroadcastSystemMessageInfo.htm" title="BroadcastSystemMessageInfo Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_BroadcastSystemMessageInfo">BroadcastSystemMessageInfo Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ChangeDisplaySettingsFlags.htm" title="ChangeDisplaySettingsFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ChangeDisplaySettingsFlags">ChangeDisplaySettingsFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ChangeWindowMessageFilterExAction.htm" title="ChangeWindowMessageFilterExAction Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ChangeWindowMessageFilterExAction">ChangeWindowMessageFilterExAction Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CharInfoAttributes.htm" title="CharInfoAttributes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CharInfoAttributes">CharInfoAttributes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ClipBoxComplexity.htm" title="ClipBoxComplexity Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ClipBoxComplexity">ClipBoxComplexity Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CodePage.htm" title="CodePage Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CodePage">CodePage Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ComputerNameFormat.htm" title="ComputerNameFormat Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ComputerNameFormat">ComputerNameFormat Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ConsoleDisplayMode.htm" title="ConsoleDisplayMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ConsoleDisplayMode">ConsoleDisplayMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ContinueDebugEventFlags.htm" title="ContinueDebugEventFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ContinueDebugEventFlags">ContinueDebugEventFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ControlPanelView.htm" title="ControlPanelView Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ControlPanelView">ControlPanelView Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileFlags.htm" title="CopyFileFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileFlags">CopyFileFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileProgressAction.htm" title="CopyFileProgressAction Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileProgressAction">CopyFileProgressAction Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileProgressCallbackReason.htm" title="CopyFileProgressCallbackReason Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CopyFileProgressCallbackReason">CopyFileProgressCallbackReason Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CoWaitForMultipleHandlesFlags.htm" title="CoWaitForMultipleHandlesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CoWaitForMultipleHandlesFlags">CoWaitForMultipleHandlesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CreateFileFlags.htm" title="CreateFileFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CreateFileFlags">CreateFileFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CreateIconFromResourceFlags.htm" title="CreateIconFromResourceFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CreateIconFromResourceFlags">CreateIconFromResourceFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CreateMutexFlags.htm" title="CreateMutexFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CreateMutexFlags">CreateMutexFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CreateProcessFlags.htm" title="CreateProcessFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CreateProcessFlags">CreateProcessFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CreateThreadFlags.htm" title="CreateThreadFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CreateThreadFlags">CreateThreadFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CredentialsDialogOptions.htm" title="CredentialsDialogOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CredentialsDialogOptions">CredentialsDialogOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CredentialsPackFlags.htm" title="CredentialsPackFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CredentialsPackFlags">CredentialsPackFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_CursorInfoFlags.htm" title="CursorInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_CursorInfoFlags">CursorInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DefineDosDeviceFlags.htm" title="DefineDosDeviceFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DefineDosDeviceFlags">DefineDosDeviceFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceEvents.htm" title="DeviceEvents Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceEvents">DeviceEvents Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceModeDisplayOrientation.htm" title="DeviceModeDisplayOrientation Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceModeDisplayOrientation">DeviceModeDisplayOrientation Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceModeFields.htm" title="DeviceModeFields Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceModeFields">DeviceModeFields Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceType.htm" title="DeviceType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DeviceType">DeviceType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DirectoryManagementControlCodes.htm" title="DirectoryManagementControlCodes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DirectoryManagementControlCodes">DirectoryManagementControlCodes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DisplayDeviceStateFlags.htm" title="DisplayDeviceStateFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DisplayDeviceStateFlags">DisplayDeviceStateFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DisplaySettingsChange.htm" title="DisplaySettingsChange Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DisplaySettingsChange">DisplaySettingsChange Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DpiAwareness.htm" title="DpiAwareness Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DpiAwareness">DpiAwareness Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DuplicateHandleOptions.htm" title="DuplicateHandleOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DuplicateHandleOptions">DuplicateHandleOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DwmBlurBehindFlags.htm" title="DwmBlurBehindFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmBlurBehindFlags">DwmBlurBehindFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DwmIconicLivePreviewFlags.htm" title="DwmIconicLivePreviewFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmIconicLivePreviewFlags">DwmIconicLivePreviewFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DwmIconicThumbnailFlags.htm" title="DwmIconicThumbnailFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmIconicThumbnailFlags">DwmIconicThumbnailFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DwmThumbnailPropertiesFlags.htm" title="DwmThumbnailPropertiesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmThumbnailPropertiesFlags">DwmThumbnailPropertiesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_DwmWindowAttribute.htm" title="DwmWindowAttribute Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_DwmWindowAttribute">DwmWindowAttribute Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EAudioSessionDisconnectReason.htm" title="EAudioSessionDisconnectReason Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EAudioSessionDisconnectReason">EAudioSessionDisconnectReason Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EAudioSessionState.htm" title="EAudioSessionState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EAudioSessionState">EAudioSessionState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EDataFlow.htm" title="EDataFlow Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EDataFlow">EDataFlow Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EDeviceState.htm" title="EDeviceState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EDeviceState">EDeviceState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EditControlMessages.htm" title="EditControlMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EditControlMessages">EditControlMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EnumDisplaySettingsMode.htm" title="EnumDisplaySettingsMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EnumDisplaySettingsMode">EnumDisplaySettingsMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EnumProcessModulesFilter.htm" title="EnumProcessModulesFilter Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EnumProcessModulesFilter">EnumProcessModulesFilter Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EnumSystemCodePagesFlags.htm" title="EnumSystemCodePagesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EnumSystemCodePagesFlags">EnumSystemCodePagesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EnumSystemLocalesFlags.htm" title="EnumSystemLocalesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EnumSystemLocalesFlags">EnumSystemLocalesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ERole.htm" title="ERole Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ERole">ERole Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EStgmAccess.htm" title="EStgmAccess Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EStgmAccess">EStgmAccess Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_EventAccessRights.htm" title="EventAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_EventAccessRights">EventAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ExceptionFlags.htm" title="ExceptionFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ExceptionFlags">ExceptionFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ExecutionState.htm" title="ExecutionState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ExecutionState">ExecutionState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ExitwindowsExFlags.htm" title="ExitwindowsExFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ExitwindowsExFlags">ExitwindowsExFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ExtTextOutOptions.htm" title="ExtTextOutOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ExtTextOutOptions">ExtTextOutOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_FiberFlags.htm" title="FiberFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_FiberFlags">FiberFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_FileAccessRights.htm" title="FileAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_FileAccessRights">FileAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_FlashWindowFlags.htm" title="FlashWindowFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_FlashWindowFlags">FlashWindowFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_FormatMessageFlags.htm" title="FormatMessageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_FormatMessageFlags">FormatMessageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GenericAccessRights.htm" title="GenericAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GenericAccessRights">GenericAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetAncestorFlags.htm" title="GetAncestorFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetAncestorFlags">GetAncestorFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetDeviceCapsItem.htm" title="GetDeviceCapsItem Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetDeviceCapsItem">GetDeviceCapsItem Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetDeviceLparam.htm" title="GetDeviceLparam Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetDeviceLparam">GetDeviceLparam Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetModuleHandleExFlags.htm" title="GetModuleHandleExFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetModuleHandleExFlags">GetModuleHandleExFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetMouseMovePointsResolution.htm" title="GetMouseMovePointsResolution Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetMouseMovePointsResolution">GetMouseMovePointsResolution Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetNextWindowCmd.htm" title="GetNextWindowCmd Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetNextWindowCmd">GetNextWindowCmd Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetPathFromIdListOption.htm" title="GetPathFromIdListOption Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetPathFromIdListOption">GetPathFromIdListOption Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetRawInputDataCommand.htm" title="GetRawInputDataCommand Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetRawInputDataCommand">GetRawInputDataCommand Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetRawInputDeviceInfoCommand.htm" title="GetRawInputDeviceInfoCommand Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetRawInputDeviceInfoCommand">GetRawInputDeviceInfoCommand Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_GetWindowCmd.htm" title="GetWindowCmd Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_GetWindowCmd">GetWindowCmd Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HandleFlags.htm" title="HandleFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HandleFlags">HandleFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HardErrorResponse.htm" title="HardErrorResponse Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HardErrorResponse">HardErrorResponse Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HardErrorResponseOption.htm" title="HardErrorResponseOption Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HardErrorResponseOption">HardErrorResponseOption Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HeapFlags.htm" title="HeapFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HeapFlags">HeapFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HeapInformationClass.htm" title="HeapInformationClass Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HeapInformationClass">HeapInformationClass Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HookType.htm" title="HookType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HookType">HookType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_HResult.htm" title="HResult Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_HResult">HResult Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_InitiateShutdownFlags.htm" title="InitiateShutdownFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_InitiateShutdownFlags">InitiateShutdownFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_InputType.htm" title="InputType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_InputType">InputType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_IpStatsForwarding.htm" title="IpStatsForwarding Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_IpStatsForwarding">IpStatsForwarding Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_IShellItemImageFactoryGetImageFlags.htm" title="IShellItemImageFactoryGetImageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_IShellItemImageFactoryGetImageFlags">IShellItemImageFactoryGetImageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_IShellLinkGetPathFlags.htm" title="IShellLinkGetPathFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_IShellLinkGetPathFlags">IShellLinkGetPathFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_IShellLinkResolveFlags.htm" title="IShellLinkResolveFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_IShellLinkResolveFlags">IShellLinkResolveFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_KeybdEventFlags.htm" title="KeybdEventFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_KeybdEventFlags">KeybdEventFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardInputFlags.htm" title="KeyboardInputFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardInputFlags">KeyboardInputFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardLayoutFlags.htm" title="KeyboardLayoutFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardLayoutFlags">KeyboardLayoutFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardLowLevelHookStructFlags.htm" title="KeyboardLowLevelHookStructFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_KeyboardLowLevelHookStructFlags">KeyboardLowLevelHookStructFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_LayeredWindowAttributesFlags.htm" title="LayeredWindowAttributesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_LayeredWindowAttributesFlags">LayeredWindowAttributesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ListBoxMessages.htm" title="ListBoxMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ListBoxMessages">ListBoxMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ListViewMessages.htm" title="ListViewMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ListViewMessages">ListViewMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_LoadImageFlags.htm" title="LoadImageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_LoadImageFlags">LoadImageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_LoadImageType.htm" title="LoadImageType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_LoadImageType">LoadImageType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_LoadLibraryFlags.htm" title="LoadLibraryFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_LoadLibraryFlags">LoadLibraryFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_LParams.htm" title="LParams Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_LParams">LParams Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MCICommands.htm" title="MCICommands Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MCICommands">MCICommands Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryAllocationType.htm" title="MemoryAllocationType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryAllocationType">MemoryAllocationType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryFreeType.htm" title="MemoryFreeType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryFreeType">MemoryFreeType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryProtectionOptions.htm" title="MemoryProtectionOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryProtectionOptions">MemoryProtectionOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryResourceNotificationType.htm" title="MemoryResourceNotificationType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryResourceNotificationType">MemoryResourceNotificationType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryState.htm" title="MemoryState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryState">MemoryState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryType.htm" title="MemoryType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MemoryType">MemoryType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItem.htm" title="MenuItem Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItem">MenuItem Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemMask.htm" title="MenuItemMask Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemMask">MenuItemMask Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemState.htm" title="MenuItemState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemState">MenuItemState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemType.htm" title="MenuItemType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuItemType">MenuItemType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuMask.htm" title="MenuMask Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuMask">MenuMask Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuPosition.htm" title="MenuPosition Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuPosition">MenuPosition Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MenuStyle.htm" title="MenuStyle Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MenuStyle">MenuStyle Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MessageFilterInfo.htm" title="MessageFilterInfo Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MessageFilterInfo">MessageFilterInfo Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MiniDumpType.htm" title="MiniDumpType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MiniDumpType">MiniDumpType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MonitorFromFlags.htm" title="MonitorFromFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MonitorFromFlags">MonitorFromFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MonitorInfoFlags.htm" title="MonitorInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MonitorInfoFlags">MonitorInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MouseEventFlags.htm" title="MouseEventFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MouseEventFlags">MouseEventFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MouseInputFlags.htm" title="MouseInputFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MouseInputFlags">MouseInputFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MouseLowLevelHookStructFlags.htm" title="MouseLowLevelHookStructFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MouseLowLevelHookStructFlags">MouseLowLevelHookStructFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MuiLanguageMode.htm" title="MuiLanguageMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MuiLanguageMode">MuiLanguageMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MultiByteCharConversionType.htm" title="MultiByteCharConversionType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MultiByteCharConversionType">MultiByteCharConversionType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_MutexInformationClass.htm" title="MutexInformationClass Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_MutexInformationClass">MutexInformationClass Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_NativeHotkeyModifiers.htm" title="NativeHotkeyModifiers Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_NativeHotkeyModifiers">NativeHotkeyModifiers Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_NativeWindowState.htm" title="NativeWindowState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_NativeWindowState">NativeWindowState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_NcRenderingPolicyFlags.htm" title="NcRenderingPolicyFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_NcRenderingPolicyFlags">NcRenderingPolicyFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_NetworkErrorCode.htm" title="NetworkErrorCode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_NetworkErrorCode">NetworkErrorCode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_NTStatus.htm" title="NTStatus Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_NTStatus">NTStatus Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ObjectHandleAttributes.htm" title="ObjectHandleAttributes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ObjectHandleAttributes">ObjectHandleAttributes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_OfferVirtualMemoryPriority.htm" title="OfferVirtualMemoryPriority Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_OfferVirtualMemoryPriority">OfferVirtualMemoryPriority Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_OpenAsInfoFlags.htm" title="OpenAsInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_OpenAsInfoFlags">OpenAsInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_OpenFolderFlags.htm" title="OpenFolderFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_OpenFolderFlags">OpenFolderFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PathOptions.htm" title="PathOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PathOptions">PathOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PathResolveFlags.htm" title="PathResolveFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PathResolveFlags">PathResolveFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PeekMessageFlags.htm" title="PeekMessageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PeekMessageFlags">PeekMessageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PopupWindowPositionFlags.htm" title="PopupWindowPositionFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PopupWindowPositionFlags">PopupWindowPositionFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PowerPlanAccess.htm" title="PowerPlanAccess Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PowerPlanAccess">PowerPlanAccess Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PrivilegeStates.htm" title="PrivilegeStates Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PrivilegeStates">PrivilegeStates Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessAccessRights.htm" title="ProcessAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessAccessRights">ProcessAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessErrorMode.htm" title="ProcessErrorMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessErrorMode">ProcessErrorMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessInformationClass.htm" title="ProcessInformationClass Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessInformationClass">ProcessInformationClass Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessLogonFlags.htm" title="ProcessLogonFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessLogonFlags">ProcessLogonFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessNameFlags.htm" title="ProcessNameFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessNameFlags">ProcessNameFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessPrivileges.htm" title="ProcessPrivileges Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessPrivileges">ProcessPrivileges Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessStartupInfoFlags.htm" title="ProcessStartupInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProcessStartupInfoFlags">ProcessStartupInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressBarMessages.htm" title="ProgressBarMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressBarMessages">ProgressBarMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressDialogFlags.htm" title="ProgressDialogFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressDialogFlags">ProgressDialogFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressDialogTimerFlags.htm" title="ProgressDialogTimerFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ProgressDialogTimerFlags">ProgressDialogTimerFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PssCaptureFlags.htm" title="PssCaptureFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PssCaptureFlags">PssCaptureFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PssDuplicateFlags.htm" title="PssDuplicateFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PssDuplicateFlags">PssDuplicateFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PssProcessFlags.htm" title="PssProcessFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PssProcessFlags">PssProcessFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_PssQueryInformationClass.htm" title="PssQueryInformationClass Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_PssQueryInformationClass">PssQueryInformationClass Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_QueryAssemblyInfoFlags.htm" title="QueryAssemblyInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_QueryAssemblyInfoFlags">QueryAssemblyInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_QueryUserNotificationState.htm" title="QueryUserNotificationState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_QueryUserNotificationState">QueryUserNotificationState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_QueueStatusFlags.htm" title="QueueStatusFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_QueueStatusFlags">QueueStatusFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RawInputDeviceFlags.htm" title="RawInputDeviceFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RawInputDeviceFlags">RawInputDeviceFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RawKeyboardFlags.htm" title="RawKeyboardFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RawKeyboardFlags">RawKeyboardFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RawMouseButtons.htm" title="RawMouseButtons Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RawMouseButtons">RawMouseButtons Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RawMouseFlags.htm" title="RawMouseFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RawMouseFlags">RawMouseFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RedrawWindowFlags.htm" title="RedrawWindowFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RedrawWindowFlags">RedrawWindowFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RegionCombineMode.htm" title="RegionCombineMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RegionCombineMode">RegionCombineMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RegionComplexity.htm" title="RegionComplexity Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RegionComplexity">RegionComplexity Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_RegNotifyChangeFilter.htm" title="RegNotifyChangeFilter Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_RegNotifyChangeFilter">RegNotifyChangeFilter Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ReparseDataBufferFlags.htm" title="ReparseDataBufferFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ReparseDataBufferFlags">ReparseDataBufferFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ReparsePointTags.htm" title="ReparsePointTags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ReparsePointTags">ReparsePointTags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ResourceType.htm" title="ResourceType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ResourceType">ResourceType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ScrollBarOrientation.htm" title="ScrollBarOrientation Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ScrollBarOrientation">ScrollBarOrientation Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ScrollInfoMask.htm" title="ScrollInfoMask Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ScrollInfoMask">ScrollInfoMask Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SectionAccessRights.htm" title="SectionAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SectionAccessRights">SectionAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SectionAttributes.htm" title="SectionAttributes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SectionAttributes">SectionAttributes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SectionInherit.htm" title="SectionInherit Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SectionInherit">SectionInherit Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SecurityImpersonationLevel.htm" title="SecurityImpersonationLevel Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SecurityImpersonationLevel">SecurityImpersonationLevel Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SecurityInformation.htm" title="SecurityInformation Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SecurityInformation">SecurityInformation Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SendMessageTimeoutFlags.htm" title="SendMessageTimeoutFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SendMessageTimeoutFlags">SendMessageTimeoutFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SetForegroundWindowLockModes.htm" title="SetForegroundWindowLockModes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SetForegroundWindowLockModes">SetForegroundWindowLockModes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SetProcessWorkingSetSizeFlags.htm" title="SetProcessWorkingSetSizeFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SetProcessWorkingSetSizeFlags">SetProcessWorkingSetSizeFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SetWindowPosFlags.htm" title="SetWindowPosFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SetWindowPosFlags">SetWindowPosFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHChangeNotifyEventID.htm" title="SHChangeNotifyEventID Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHChangeNotifyEventID">SHChangeNotifyEventID Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHChangeNotifyFlags.htm" title="SHChangeNotifyFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHChangeNotifyFlags">SHChangeNotifyFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellAddToRecentDocsFlags.htm" title="ShellAddToRecentDocsFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellAddToRecentDocsFlags">ShellAddToRecentDocsFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellFolderEnumObjectsFlags.htm" title="ShellFolderEnumObjectsFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellFolderEnumObjectsFlags">ShellFolderEnumObjectsFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellFoldermGetDisplayName.htm" title="ShellFoldermGetDisplayName Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellFoldermGetDisplayName">ShellFoldermGetDisplayName Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemAttributesMask.htm" title="ShellItemAttributesMask Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemAttributesMask">ShellItemAttributesMask Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemCompareHint.htm" title="ShellItemCompareHint Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemCompareHint">ShellItemCompareHint Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemGetDisplayName.htm" title="ShellItemGetDisplayName Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellItemGetDisplayName">ShellItemGetDisplayName Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShellStateFlags.htm" title="ShellStateFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShellStateFlags">ShellStateFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHEmptyRecycleBinFlags.htm" title="SHEmptyRecycleBinFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHEmptyRecycleBinFlags">SHEmptyRecycleBinFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHGetFileInfoFlags.htm" title="SHGetFileInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHGetFileInfoFlags">SHGetFileInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHGetNewLinkInfoFlags.htm" title="SHGetNewLinkInfoFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHGetNewLinkInfoFlags">SHGetNewLinkInfoFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHObjectPropertiesFlags.htm" title="SHObjectPropertiesFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHObjectPropertiesFlags">SHObjectPropertiesFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SHUpdateImageFlags.htm" title="SHUpdateImageFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SHUpdateImageFlags">SHUpdateImageFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShutdownPlanning.htm" title="ShutdownPlanning Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShutdownPlanning">ShutdownPlanning Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ShutdownReason.htm" title="ShutdownReason Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ShutdownReason">ShutdownReason Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SpecialWindowHandles.htm" title="SpecialWindowHandles Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SpecialWindowHandles">SpecialWindowHandles Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_StandardAccessRights.htm" title="StandardAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_StandardAccessRights">StandardAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_StandardDevice.htm" title="StandardDevice Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_StandardDevice">StandardDevice Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_StrFormatByteSizeFlags.htm" title="StrFormatByteSizeFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_StrFormatByteSizeFlags">StrFormatByteSizeFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SymbolicLinkFlags.htm" title="SymbolicLinkFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SymbolicLinkFlags">SymbolicLinkFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SymFlags.htm" title="SymFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SymFlags">SymFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SymLoadModuleFlags.htm" title="SymLoadModuleFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SymLoadModuleFlags">SymLoadModuleFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SymOptionFlags.htm" title="SymOptionFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SymOptionFlags">SymOptionFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SymTagEnum.htm" title="SymTagEnum Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SymTagEnum">SymTagEnum Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SystemCursorId.htm" title="SystemCursorId Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SystemCursorId">SystemCursorId Enumeration</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SystemParametersActionFlags.htm" title="SystemParametersActionFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SystemParametersActionFlags">SystemParametersActionFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_SystemParametersWinIniFlags.htm" title="SystemParametersWinIniFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_SystemParametersWinIniFlags">SystemParametersWinIniFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_TaskbarProgressBarState.htm" title="TaskbarProgressBarState Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_TaskbarProgressBarState">TaskbarProgressBarState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_TernaryRasterOperations.htm" title="TernaryRasterOperations Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_TernaryRasterOperations">TernaryRasterOperations Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ThreadAccessRights.htm" title="ThreadAccessRights Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ThreadAccessRights">ThreadAccessRights Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ThreadErrorMode.htm" title="ThreadErrorMode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ThreadErrorMode">ThreadErrorMode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailAlphaType.htm" title="ThumbnailAlphaType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailAlphaType">ThumbnailAlphaType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailCacheFlags.htm" title="ThumbnailCacheFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailCacheFlags">ThumbnailCacheFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailFlags.htm" title="ThumbnailFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ThumbnailFlags">ThumbnailFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_TokenAccess.htm" title="TokenAccess Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_TokenAccess">TokenAccess Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_TokenInformationClass.htm" title="TokenInformationClass Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_TokenInformationClass">TokenInformationClass Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_TokenType.htm" title="TokenType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_TokenType">TokenType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ToolBarButtonInfoMask.htm" title="ToolBarButtonInfoMask Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ToolBarButtonInfoMask">ToolBarButtonInfoMask Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ToolbarButtonStates.htm" title="ToolbarButtonStates Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ToolbarButtonStates">ToolbarButtonStates Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_ToolbarMessages.htm" title="ToolbarMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_ToolbarMessages">ToolbarMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_UpdateLayeredWindowflags.htm" title="UpdateLayeredWindowflags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_UpdateLayeredWindowflags">UpdateLayeredWindowflags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_VirtualKeyMappingTypes.htm" title="VirtualKeyMappingTypes Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_VirtualKeyMappingTypes">VirtualKeyMappingTypes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_VirtualKeys.htm" title="VirtualKeys Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_VirtualKeys">VirtualKeys Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_VolumeInformationFlags.htm" title="VolumeInformationFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_VolumeInformationFlags">VolumeInformationFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WaitObjectResult.htm" title="WaitObjectResult Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WaitObjectResult">WaitObjectResult Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WerFaultReporting.htm" title="WerFaultReporting Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WerFaultReporting">WerFaultReporting Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WerRegisterFileType.htm" title="WerRegisterFileType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WerRegisterFileType">WerRegisterFileType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WerRegisterFileTypeFlags.htm" title="WerRegisterFileTypeFlags Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WerRegisterFileTypeFlags">WerRegisterFileTypeFlags Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WideCharConversionType.htm" title="WideCharConversionType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WideCharConversionType">WideCharConversionType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_Win32ErrorCode.htm" title="Win32ErrorCode Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_Win32ErrorCode">Win32ErrorCode Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowAnimation.htm" title="WindowAnimation Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowAnimation">WindowAnimation Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowHitTestRegions.htm" title="WindowHitTestRegions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowHitTestRegions">WindowHitTestRegions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowLongValues.htm" title="WindowLongValues Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowLongValues">WindowLongValues Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowMessages.htm" title="WindowMessages Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowMessages">WindowMessages Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowsBeepType.htm" title="WindowsBeepType Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowsBeepType">WindowsBeepType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowsCredentialsDialogOptions.htm" title="WindowsCredentialsDialogOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowsCredentialsDialogOptions">WindowsCredentialsDialogOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowSkipOptions.htm" title="WindowSkipOptions Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowSkipOptions">WindowSkipOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowStyles.htm" title="WindowStyles Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowStyles">WindowStyles Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WindowStylesEx.htm" title="WindowStylesEx Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WindowStylesEx">WindowStylesEx Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WinMmResult.htm" title="WinMmResult Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WinMmResult">WinMmResult Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_DevCase_Interop_Unmanaged_Win32_Enums_WParams.htm" title="WParams Enumeration" tocid="T_DevCase_Interop_Unmanaged_Win32_Enums_WParams">WParams Enumeration</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>SystemParametersActionFlags Enumeration</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
 Flags for <span class="code">uiAction</span> parameter of <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_SystemParametersInfo.htm">SystemParametersInfo(SystemParametersActionFlags, Boolean, Boolean<span id="LSTEA6790CD_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_0?cpp=%");</script>, SystemParametersWinIniFlags)</a> function.
 </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_DevCase_Interop_Unmanaged_Win32_Enums.htm">DevCase.Interop.Unmanaged.Win32.Enums</a><br />
    <strong>Assembly:</strong>
   DevCase.Interop (in DevCase.Interop.dll) Version: 3.3.0.0 (3.3)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EECA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','cs','1','4');return false;">C#</a></div><div id="ID0EECA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','vb','2','4');return false;">VB</a></div><div id="ID0EECA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','cpp','3','4');return false;">C++</a></div><div id="ID0EECA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EECA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EECA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EECA');return false;" title="Copy">Copy</a></div></div><div id="ID0EECA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="identifier">SystemParametersActionFlags</span></pre></div><div id="ID0EECA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Enumeration</span> <span class="identifier">SystemParametersActionFlags</span>

<span class="keyword">Dim</span> <span class="parameter">instance</span> <span class="keyword">As</span> <span class="identifier">SystemParametersActionFlags</span></pre></div><div id="ID0EECA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">enum class</span> <span class="identifier">SystemParametersActionFlags</span></pre></div><div id="ID0EECA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">SystemParametersActionFlags</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EECA");</script></div><div id="enumerationSection"><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Members</span></div><div id="ID2RBSection" class="collapsibleSection"><table id="enumMemberList" class="members"><tr><th class="iconColumn">
									 
								</th><th>Member name</th><th>Value</th><th>Description</th></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetBeep"><span class="selflink">GetBeep</span></td><td>1</td><td>
 Determines whether the warning beeper is on.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_1?vb=True|nu=true");</script></span> if the beeper is on,
 or <span class="keyword"><span id="LSTEA6790CD_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_2?vb=False|nu=false");</script></span> if it is off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetBeep"><span class="selflink">SetBeep</span></td><td>2</td><td>
 Turns the warning beeper on or off. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_3?vb=True|nu=true");</script></span> for on, or <span class="keyword"><span id="LSTEA6790CD_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_4?vb=False|nu=false");</script></span> for off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.Getborder"><span class="selflink">Getborder</span></td><td>5</td><td>
 Retrieves the border multiplier factor that determines the width of a window's sizing border.
 The <span class="code">pvParam</span> parameter must point to an <span class="nolink">Int32</span> variable that receives this value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetBorder"><span class="selflink">SetBorder</span></td><td>6</td><td>
 Sets the border multiplier factor that determines the width of a window's sizing border.
 The <span class="code">uiParam</span> parameter specifies the new value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetKeyboardSpeed"><span class="selflink">GetKeyboardSpeed</span></td><td>10</td><td>
 Retrieves the keyboard repeat-speed setting, which is a value in the range 
 from 0 (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second). 
 The actual repeat rates are hardware-dependent and may vary from a linear scale by as much as 20%. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Int32</span> variable that receives the setting
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetKeyboardSpeed"><span class="selflink">SetKeyboardSpeed</span></td><td>11</td><td>
 Sets the keyboard repeat-speed setting. 
 The <span class="code">uiParam</span> parameter must specify a value in the range 
 from 0 (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second).
 The actual repeat rates are hardware-dependent and may vary from a linear scale by as much as 20%.
 If <span class="code">uiParam</span> is greater than 31, the parameter is set to 31.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.IconHorizontalSpacing"><span class="selflink">IconHorizontalSpacing</span></td><td>13</td><td>
 Sets or retrieves the width, in pixels, of an icon cell. 
 The system uses this rectangle to arrange icons in large icon view.
 To set this value, set <span class="code">uiParam</span> to the new value and set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_5?vb=Nothing|cpp=nullptr|nu=null");</script></span>. 
 You cannot set this value to less than SM_CXICON.
 To retrieve this value, <span class="code">pvParam</span> must point to an <span class="nolink">Int32</span> that receives the current value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.IconVerticalSpacing"><span class="selflink">IconVerticalSpacing</span></td><td>24</td><td>
 Sets or retrieves the height, in pixels, of an icon cell.
 To set this value, set <span class="code">uiParam</span> to the new value and set <span class="code">pvParam</span> to null.
 You cannot set this value to less than SM_CYICON.
 To retrieve this value, <span class="code">pvParam</span> must point to an <span class="nolink">Int32</span> that receives the current value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetScreensaveTimeout"><span class="selflink">GetScreensaveTimeout</span></td><td>14</td><td>
 Retrieves the screen saver time-out value, in seconds. 
 The <span class="code">pvParam</span> parameter must point to an <span class="nolink">Int32</span> variable that receives the value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetScreensaveTimeout"><span class="selflink">SetScreensaveTimeout</span></td><td>15</td><td>
 Sets the screen saver time-out value to the value of the <span class="code">uiParam</span> parameter. 
 This value is the amount of time, in seconds, that the system must be idle before the screen saver activates.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetScreensaveActive"><span class="selflink">SetScreensaveActive</span></td><td>17</td><td>
 Sets the state of the screen saver. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_6?vb=True|nu=true");</script></span> to activate screen saving, or <span class="keyword"><span id="LSTEA6790CD_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_7?vb=False|nu=false");</script></span> to deactivate it.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDesktopWallpaper"><span class="selflink">SetDesktopWallpaper</span></td><td>20</td><td>
 Sets the desktop wallpaper. 
 The value of the <span class="code">pvParam</span> parameter determines the new wallpaper. 
 To specify a wallpaper bitmap, set <span class="code">pvParam</span> to point to a null-terminated string containing the name of a bitmap file. 
 Setting <span class="code">pvParam</span> to "" removes the wallpaper.
 Setting <span class="code">pvParam</span> to null reverts to the default wallpaper.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDesktopWallpaper"><span class="selflink">GetDesktopWallpaper</span></td><td>115</td><td>
 Retrieves the full path of the bitmap file for the desktop wallpaper.
 The <span class="code">pvParam</span> parameter must point to a <span class="code">StringBuilder</span> that receives a null-terminated path string.
 Set the <span class="code">uiParam</span> parameter to the size, in characters, of the <span class="code">pvParam</span> buffer. 
 The returned string will not exceed <span class="code">StringBuilder.MaxCapacity</span> characters. 
 If there is no desktop wallpaper, the returned string is empty.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetKeyboardDelay"><span class="selflink">GetKeyboardDelay</span></td><td>22</td><td>
 Retrieves the keyboard repeat-delay setting, 
 which is a value in the range from 0 (approximately 250 ms delay) through 3 (approximately 1 second delay). 
 The actual delay associated with each value may vary depending on the hardware. 
 The <span class="code">pvParam</span> parameter must point to an <span class="nolink">Int32</span> variable that receives the setting.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetKeyboardDelay"><span class="selflink">SetKeyboardDelay</span></td><td>23</td><td>
 Sets the keyboard repeat-delay setting. 
 The <span class="code">uiParam</span> parameter must specify 0, 1, 2, or 3, where zero sets the shortest delay
 (approximately 250 ms) and 3 sets the longest delay (approximately 1 second).
 The actual delay associated with each value may vary depending on the hardware.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetIconTitleWrap"><span class="selflink">GetIconTitleWrap</span></td><td>25</td><td>
 Determines whether icon-title wrapping is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_8?vb=True|nu=true");</script></span> if enabled, 
 or <span class="keyword"><span id="LSTEA6790CD_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_9?vb=False|nu=false");</script></span> otherwise.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetIconTitleWrap"><span class="selflink">SetIconTitleWrap</span></td><td>26</td><td>
 Turns icon-title wrapping on or off. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_10?vb=True|nu=true");</script></span> for on, or <span class="keyword"><span id="LSTEA6790CD_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_11?vb=False|nu=false");</script></span> for off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMenuDropAlignment"><span class="selflink">GetMenuDropAlignment</span></td><td>27</td><td>
 Determines whether pop-up menus are left-aligned or right-aligned, relative to the corresponding menu-bar item.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_12?vb=True|nu=true");</script></span> if left-aligned, 
 or <span class="keyword"><span id="LSTEA6790CD_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_13?vb=False|nu=false");</script></span> otherwise.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMenuDropAlignment"><span class="selflink">SetMenuDropAlignment</span></td><td>28</td><td>
 Sets the alignment value of pop-up menus. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_14?vb=True|nu=true");</script></span> for right alignment, or <span class="keyword"><span id="LSTEA6790CD_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_15?vb=False|nu=false");</script></span> for left alignment.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDoubleClickWidth"><span class="selflink">SetDoubleClickWidth</span></td><td>29</td><td>
 Sets the width of the double-click rectangle to the value of the <span class="code">uiParam</span> parameter.
 The double-click rectangle is the rectangle within which the second click of a double-click must 
 fall for it to be registered as a double-click.
 To retrieve the width of the double-click rectangle, call GetSystemMetrics with the SM_CXDOUBLECLK flag.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDoubleClickHeight"><span class="selflink">SetDoubleClickHeight</span></td><td>30</td><td>
 Sets the height of the double-click rectangle to the value of the <span class="code">uiParam</span> parameter.
 The double-click rectangle is the rectangle within which the second click of a double-click must 
 fall for it to be registered as a double-click.
 To retrieve the height of the double-click rectangle, call <span class="code">GetSystemMetrics</span> with the <span class="code">SM_CYDOUBLECLK</span> flag.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDoubleclickTime"><span class="selflink">SetDoubleclickTime</span></td><td>32</td><td>
 Sets the double-click time for the mouse to the value of the <span class="code">uiParam</span> parameter. 
 The double-click time is the maximum number of milliseconds that can occur between the 
 first and second clicks of a double-click. 
 You can also call the <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_SetDoubleClickTime.htm">SetDoubleClickTime(Int32)</a> function to set the double-click time. 
 To get the current double-click time, call the <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_GetDoubleClickTime.htm">GetDoubleClickTime<span id="LSTEA6790CD_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_16?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> function.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMousebuttonSwap"><span class="selflink">SetMousebuttonSwap</span></td><td>33</td><td>
 Swaps or restores the meaning of the left and right mouse buttons. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_17?vb=True|nu=true");</script></span> to swap the meanings of the buttons, 
 or <span class="keyword"><span id="LSTEA6790CD_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_18?vb=False|nu=false");</script></span> to restore their original meanings.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDragFullWindows"><span class="selflink">GetDragFullWindows</span></td><td>38</td><td>
 Determines whether dragging of full windows is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives 
 <span class="keyword"><span id="LSTEA6790CD_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_19?vb=True|nu=true");</script></span> if enabled, or <span class="keyword"><span id="LSTEA6790CD_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_20?vb=False|nu=false");</script></span> otherwise.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDragFullWindows"><span class="selflink">SetDragFullWindows</span></td><td>37</td><td>
 Sets dragging of full windows either on or off. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_21?vb=True|nu=true");</script></span> for on, or <span class="keyword"><span id="LSTEA6790CD_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_22?vb=False|nu=false");</script></span> for off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFontSmoothing"><span class="selflink">GetFontSmoothing</span></td><td>74</td><td>
 Determines whether the font smoothing feature is enabled. 
 This feature uses font antialiasing to make font curves appear smoother by painting pixels at different gray levels.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives 
 <span class="keyword"><span id="LSTEA6790CD_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_23?vb=True|nu=true");</script></span> if the feature is enabled, or <span class="keyword"><span id="LSTEA6790CD_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_24?vb=False|nu=false");</script></span> if it is not.
 <p />
 Windows 95:  This flag is supported only if Windows Plus! is installed. See GETWINDOWSEXTENSION.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFontSmoothing"><span class="selflink">SetFontSmoothing</span></td><td>75</td><td>
 Enables or disables the font smoothing feature, which uses font antialiasing to make font curves appear smoother
 by painting pixels at different gray levels.
 To enable the feature, set the <span class="code">uiParam</span> parameter to TRUE. 
 To disable the feature, set <span class="code">uiParam</span> to FALSE.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDragWidth"><span class="selflink">SetDragWidth</span></td><td>76</td><td>
 Sets the width, in pixels, of the rectangle used to detect the start of a drag operation. 
 Set <span class="code">uiParam</span> to the new value.
 To retrieve the drag width, call GetSystemMetrics with the SM_CXDRAG flag.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDragHeight"><span class="selflink">SetDragHeight</span></td><td>77</td><td>
 Sets the height, in pixels, of the rectangle used to detect the start of a drag operation. 
 Set <span class="code">uiParam</span> to the new value.
 To retrieve the drag height, call GetSystemMetrics with the SM_CYDRAG flag.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.Setcursors"><span class="selflink">Setcursors</span></td><td>87</td><td>
 Reloads the system cursors. 
 Set the <span class="code">uiParam</span> parameter to zero and the <span class="code">pvParam</span> parameter to null.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.Seticons"><span class="selflink">Seticons</span></td><td>88</td><td>
 Reloads the system icons. 
 Set the <span class="code">uiParam</span> parameter to zero and the <span class="code">pvParam</span> parameter to null.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDefaultInputLang"><span class="selflink">GetDefaultInputLang</span></td><td>89</td><td>
 Retrieves the input locale identifier for the system default input language. 
 The <span class="code">pvParam</span> parameter must point to an HKL variable that receives this value. 
 For more information, see Languages, Locales, and Keyboard Layouts on MSDN.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDefaultInputLang"><span class="selflink">SetDefaultInputLang</span></td><td>90</td><td>
 Sets the default input language for the system shell and applications. 
 The specified language must be displayable using the current system character set. 
 The <span class="code">pvParam</span> parameter must point to an HKL variable that contains the input locale identifier for the default language. 
 For more information, see Languages, Locales, and Keyboard Layouts on MSDN.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetLangToggle"><span class="selflink">SetLangToggle</span></td><td>91</td><td>
 Sets the hot key set for switching between input languages. 
 The <span class="code">uiParam</span> and <span class="code">pvParam</span> parameters are not used.
 The value sets the shortcut keys in the keyboard property sheets by reading the registry again. 
 The registry must be set before this flag is used. 
 the path in the registry is \HKEY_CURRENT_USER\keyboard layout\toggle. 
 Valid values are "1" = ALT+SHIFT, "2" = CTRL+SHIFT, and "3" = none.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseTrails"><span class="selflink">GetMouseTrails</span></td><td>94</td><td>
 Determines whether the Mouse Trails feature is enabled. 
 This feature improves the visibility of mouse cursor movements by briefly showing a trail of cursors and quickly erasing them.
 The <span class="code">pvParam</span> parameter must point to an <span class="nolink">Int32</span> variable that receives a value. 
 If the value is zero or 1, the feature is disabled.
 If the value is greater than 1, the feature is enabled and the value indicates the number of cursors drawn in the trail.
 The <span class="code">uiParam</span> parameter is not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseTrails"><span class="selflink">SetMouseTrails</span></td><td>93</td><td>
 Enables or disables the Mouse Trails feature, which improves the visibility of mouse cursor movements by briefly showing
 a trail of cursors and quickly erasing them.
 To disable the feature, set the <span class="code">uiParam</span> parameter to zero or 1. 
 To enable the feature, set <span class="code">uiParam</span> to a value greater than 1 to indicate the number of cursors drawn in the trail.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSnapToDefButton"><span class="selflink">GetSnapToDefButton</span></td><td>95</td><td>
 Determines whether the snap-to-default-button feature is enabled. 
 If enabled, the mouse cursor automatically moves to the default button, such as "OK" or "Apply", of a dialog box. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_25?vb=True|nu=true");</script></span> if the feature is on, 
 or <span class="keyword"><span id="LSTEA6790CD_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_26?vb=False|nu=false");</script></span> if it is off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSnapToDefButton"><span class="selflink">SetSnapToDefButton</span></td><td>96</td><td>
 Enables or disables the snap-to-default-button feature. 
 If enabled, the mouse cursor automatically moves to the default button, such as "OK" or "Apply", of a dialog box. 
 Set the <span class="code">uiParam</span> parameter to <span class="keyword"><span id="LSTEA6790CD_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_27?vb=True|nu=true");</script></span> to enable the feature, or <span class="keyword"><span id="LSTEA6790CD_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_28?vb=False|nu=false");</script></span> to disable it.
 Applications should use the ShowWindow function when displaying a dialog box so the dialog manager can position the mouse cursor.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseHoverWidth"><span class="selflink">GetMouseHoverWidth</span></td><td>98</td><td>
 Retrieves the width, in pixels, of the rectangle within which the mouse pointer has to stay for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 The <span class="code">pvParam</span> parameter must point to a UINT variable that receives the width.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseHoverWidth"><span class="selflink">SetMouseHoverWidth</span></td><td>99</td><td>
 Retrieves the width, in pixels, of the rectangle within which the mouse pointer has to stay for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 The <span class="code">pvParam</span> parameter must point to a UINT variable that receives the width.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseHoverHeight"><span class="selflink">GetMouseHoverHeight</span></td><td>100</td><td>
 Retrieves the height, in pixels, of the rectangle within which the mouse pointer has to stay for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 The <span class="code">pvParam</span> parameter must point to a UINT variable that receives the height.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseHoverHeight"><span class="selflink">SetMouseHoverHeight</span></td><td>101</td><td>
 Sets the height, in pixels, of the rectangle within which the mouse pointer has to stay for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 Set the <span class="code">uiParam</span> parameter to the new height.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseHoverTime"><span class="selflink">GetMouseHoverTime</span></td><td>102</td><td>
 Retrieves the time, in milliseconds, that the mouse pointer has to stay in the hover rectangle for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 The <span class="code">pvParam</span> parameter must point to a UINT variable that receives the time.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseHoverTime"><span class="selflink">SetMouseHoverTime</span></td><td>103</td><td>
 Sets the time, in milliseconds, that the mouse pointer has to stay in the hover rectangle for TrackMouseEvent
 to generate a WM_MOUSEHOVER message. 
 This is used only if you pass HOVER_DEFAULT in the dwHoverTime parameter in the call to TrackMouseEvent. 
 Set the <span class="code">uiParam</span> parameter to the new time.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWheelScrollLines"><span class="selflink">GetWheelScrollLines</span></td><td>104</td><td>
 Retrieves the number of lines to scroll when the mouse wheel is rotated. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt32</span> variable that receives the number of lines. 
 The default value is 3.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWheelScrollLines"><span class="selflink">SetWheelScrollLines</span></td><td>105</td><td>
 Sets the number of lines to scroll when the mouse wheel is rotated. 
 The number of lines is set from the <span class="code">uiParam</span> parameter.
 The number of lines is the suggested number of lines to scroll when the mouse wheel is rolled without using modifier keys.
 If the number is 0, then no scrolling should occur. 
 If the number of lines to scroll is greater than the number of lines viewable,
 and in particular if it is WHEEL_PAGESCROLL (#defined as UINT_MAX), the scroll operation should be interpreted
 as clicking once in the page down or page up regions of the scroll bar.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMenuShowDelay"><span class="selflink">GetMenuShowDelay</span></td><td>106</td><td>
 Retrieves the time, in milliseconds, that the system waits before displaying a shortcut menu when the mouse cursor is over a submenu item. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt16</span> variable that receives the time of the delay.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMenuShowDelay"><span class="selflink">SetMenuShowDelay</span></td><td>107</td><td>
 Sets <span class="code">uiParam</span> to the time, in milliseconds, that the system waits before displaying a shortcut menu when the mouse cursor is
 over a submenu item.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseSpeed"><span class="selflink">GetMouseSpeed</span></td><td>112</td><td>
 Retrieves the current mouse speed. 
 The mouse speed determines how far the pointer will move based on the distance the mouse moves.
 The <span class="code">pvParam</span> parameter must point to an <span class="nolink">Int32</span> variable that receives a value which 
 ranges between 1 (slowest) and 20 (fastest).
 A value of 10 is the default. 
 The value can be set by an end user using the mouse control panel application or by an application using SETMOUSESPEED.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseSpeed"><span class="selflink">SetMouseSpeed</span></td><td>113</td><td>
 Sets the current mouse speed. 
 The <span class="code">pvParam</span> parameter is an <span class="nolink">Int32</span> variable between 1 (slowest) and 20 (fastest). 
 A value of 10 is the default.
 This value is typically set using the mouse control panel application.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetActiveWindowTracking"><span class="selflink">GetActiveWindowTracking</span></td><td>4096</td><td>
 Determines whether active window tracking (activating the window the mouse is on) is on or off. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_29?vb=True|nu=true");</script></span> for on, 
 or <span class="keyword"><span id="LSTEA6790CD_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_30?vb=False|nu=false");</script></span> for off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetActiveWindowTracking"><span class="selflink">SetActiveWindowTracking</span></td><td>4097</td><td>
 Sets active window tracking (activating the window the mouse is on) either on or off. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_31?vb=True|nu=true");</script></span> for on or <span class="keyword"><span id="LSTEA6790CD_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_32?vb=False|nu=false");</script></span> for off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMenuAnimation"><span class="selflink">GetMenuAnimation</span></td><td>4098</td><td>
 Determines whether the menu animation feature is enabled. 
 This master switch must be on to enable menu animation effects.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_33?vb=True|nu=true");</script></span> if animation is enabled 
 and <span class="keyword"><span id="LSTEA6790CD_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_34?vb=False|nu=false");</script></span> if it is disabled.
 If animation is enabled, GETMENUFADE indicates whether menus use fade or slide animation.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMenuAnimation"><span class="selflink">SetMenuAnimation</span></td><td>4099</td><td>
 Enables or disables menu animation. 
 This master switch must be on for any menu animation to occur.
 The <span class="code">pvParam</span> parameter is a <span class="nolink">Boolean</span> variable; 
 set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_35?vb=True|nu=true");</script></span> to enable animation and <span class="keyword"><span id="LSTEA6790CD_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_36?vb=False|nu=false");</script></span> to disable animation.
 If animation is enabled, GETMENUFADE indicates whether menus use fade or slide animation.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetComboboxAnimation"><span class="selflink">GetComboboxAnimation</span></td><td>4100</td><td>
 Determines whether the slide-open effect for combo boxes is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_37?vb=True|nu=true");</script></span> for enabled, 
 or <span class="keyword"><span id="LSTEA6790CD_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_38?vb=False|nu=false");</script></span> for disabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetComboboxAnimation"><span class="selflink">SetComboboxAnimation</span></td><td>4101</td><td>
 Enables or disables the slide-open effect for combo boxes. 
 Set the <span class="code">pvParam</span> parameter to <span class="keyword"><span id="LSTEA6790CD_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_39?vb=True|nu=true");</script></span> to enable the gradient effect, or <span class="keyword"><span id="LSTEA6790CD_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_40?vb=False|nu=false");</script></span> to disable it.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetListboxSmoothScrolling"><span class="selflink">GetListboxSmoothScrolling</span></td><td>4102</td><td>
 Determines whether the smooth-scrolling effect for list boxes is enabled. 
 The <span class="code">pvParam</span> parameter must point toa <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_41?vb=True|nu=true");</script></span> for enabled, 
 or <span class="keyword"><span id="LSTEA6790CD_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_42?vb=False|nu=false");</script></span> for disabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetListboxSmoothScrolling"><span class="selflink">SetListboxSmoothScrolling</span></td><td>4103</td><td>
 Enables or disables the smooth-scrolling effect for list boxes. 
 Set the <span class="code">pvParam</span> parameter to <span class="keyword"><span id="LSTEA6790CD_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_43?vb=True|nu=true");</script></span> to enable the smooth-scrolling effect,
 or <span class="keyword"><span id="LSTEA6790CD_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_44?vb=False|nu=false");</script></span> to disable it.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetGradientCaptions"><span class="selflink">GetGradientCaptions</span></td><td>4104</td><td>
 Determines whether the gradient effect for window title bars is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_45?vb=True|nu=true");</script></span> for enabled, 
 or <span class="keyword"><span id="LSTEA6790CD_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_46?vb=False|nu=false");</script></span> for disabled. 
 For more information about the gradient effect, see the GetSysColor function.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetGradientCaptions"><span class="selflink">SetGradientCaptions</span></td><td>4105</td><td>
 Enables or disables the gradient effect for window title bars. 
 Set the <span class="code">pvParam</span> parameter to <span class="keyword"><span id="LSTEA6790CD_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_47?vb=True|nu=true");</script></span> to enable it, or <span class="keyword"><span id="LSTEA6790CD_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_48?vb=False|nu=false");</script></span> to disable it.
 The gradient effect is possible only if the system has a color depth of more than 256 colors. For more information about
 the gradient effect, see the GetSysColor function.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetKeyboardCues"><span class="selflink">GetKeyboardCues</span></td><td>4106</td><td>
 Determines whether menu access keys are always underlined. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that 
 receives <span class="keyword"><span id="LSTEA6790CD_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_49?vb=True|nu=true");</script></span> if menu access keys are always underlined, 
 and <span class="keyword"><span id="LSTEA6790CD_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_50?vb=False|nu=false");</script></span> if they are underlined only when the menu is activated by the keyboard.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetKeyboardCues"><span class="selflink">SetKeyboardCues</span></td><td>4107</td><td>
 Sets the underlining of menu access key letters. 
 The <span class="code">pvParam</span> parameter is a <span class="nolink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_51?vb=True|nu=true");</script></span> to always underline menu access keys, 
 or <span class="keyword"><span id="LSTEA6790CD_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_52?vb=False|nu=false");</script></span> to underline menu access keys only when the menu is activated from the keyboard.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetHotTracking"><span class="selflink">GetHotTracking</span></td><td>4110</td><td>
 Determines whether hot tracking of user-interface elements, such as menu names on menu bars, is enabled.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_53?vb=True|nu=true");</script></span> for enabled, 
 or <span class="keyword"><span id="LSTEA6790CD_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_54?vb=False|nu=false");</script></span> for disabled.
 Hot tracking means that when the cursor moves over an item, it is highlighted but not selected. 
 You can query this value to decide whether to use hot tracking in the user interface of your application.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetHotTracking"><span class="selflink">SetHotTracking</span></td><td>4111</td><td>
 Enables or disables hot tracking of user-interface elements such as menu names on menu bars. 
 Set the <span class="code">pvParam</span> parameter to <span class="keyword"><span id="LSTEA6790CD_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_55?vb=True|nu=true");</script></span> to enable it, or <span class="keyword"><span id="LSTEA6790CD_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_56?vb=False|nu=false");</script></span> to disable it.
 Hot-tracking means that when the cursor moves over an item, it is highlighted but not selected.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMenuFade"><span class="selflink">GetMenuFade</span></td><td>4114</td><td>
 Determines whether menu fade animation is enabled.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_57?vb=True|nu=true");</script></span>
 when fade animation is enabled and <span class="keyword"><span id="LSTEA6790CD_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_58?vb=False|nu=false");</script></span> when it is disabled. 
 If fade animation is disabled, menus use slide animation.
 This flag is ignored unless menu animation is enabled, which you can do using the SETMENUANIMATION flag.
 For more information, see <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_AnimateWindow.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a>.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMenuFade"><span class="selflink">SetMenuFade</span></td><td>4115</td><td>
 Enables or disables menu fade animation. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_59?vb=True|nu=true");</script></span> to enable the menu fade effect or <span class="keyword"><span id="LSTEA6790CD_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_60?vb=False|nu=false");</script></span> to disable it.
 If fade animation is disabled, menus use slide animation.
 The menu fade effect is possible only if the system has a color depth of more than 256 colors. 
 This flag is ignored unless MENUANIMATION is also set. 
 For more information, see <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_AnimateWindow.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a>.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSelectionFade"><span class="selflink">GetSelectionFade</span></td><td>4116</td><td>
 Determines whether the selection fade effect is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_61?vb=True|nu=true");</script></span> if enabled 
 or <span class="keyword"><span id="LSTEA6790CD_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_62?vb=False|nu=false");</script></span> if disabled.
 The selection fade effect causes the menu item selected by the user to remain on the screen briefly while fading out
 after the menu is dismissed.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSelectionFade"><span class="selflink">SetSelectionFade</span></td><td>4117</td><td>
 The selection fade effect causes the menu item selected by the user to remain on the screen briefly while fading out
 after the menu is dismissed. 
 The selection fade effect is possible only if the system has a color depth of more than 256 colors.
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_63?vb=True|nu=true");</script></span> to enable the selection fade effect or <span class="keyword"><span id="LSTEA6790CD_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_64?vb=False|nu=false");</script></span> to disable it.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetTooltipAnimation"><span class="selflink">GetTooltipAnimation</span></td><td>4118</td><td>
 Determines whether ToolTip animation is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_65?vb=True|nu=true");</script></span> if enabled 
 or <span class="keyword"><span id="LSTEA6790CD_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_66?vb=False|nu=false");</script></span> if disabled. 
 If ToolTip animation is enabled, GETTOOLTIPFADE indicates whether ToolTips use fade or slide animation.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetTooltipAnimation"><span class="selflink">SetTooltipAnimation</span></td><td>4119</td><td>
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_67?vb=True|nu=true");</script></span> to enable ToolTip animation or <span class="keyword"><span id="LSTEA6790CD_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_68?vb=False|nu=false");</script></span> to disable it. 
 If enabled, you can use SETTOOLTIPFADE to specify fade or slide animation.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetCursorShadow"><span class="selflink">GetCursorShadow</span></td><td>4122</td><td>
 Determines whether the cursor has a shadow around it. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_69?vb=True|nu=true");</script></span> if the shadow is enabled, 
 <span class="keyword"><span id="LSTEA6790CD_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_70?vb=False|nu=false");</script></span> if it is disabled. 
 This effect appears only if the system has a color depth of more than 256 colors.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetCursorShadow"><span class="selflink">SetCursorShadow</span></td><td>4123</td><td>
 Enables or disables a shadow around the cursor. 
 The <span class="code">pvParam</span> parameter is a <span class="nolink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_71?vb=True|nu=true");</script></span> to enable the shadow or <span class="keyword"><span id="LSTEA6790CD_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_72?vb=False|nu=false");</script></span> to disable the shadow. 
 This effect appears only if the system has a color depth of more than 256 colors.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseSonar"><span class="selflink">GetMouseSonar</span></td><td>4124</td><td>
 Retrieves the state of the Mouse Sonar feature. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_73?vb=True|nu=true");</script></span> if enabled or
 <span class="keyword"><span id="LSTEA6790CD_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_74?vb=False|nu=false");</script></span> otherwise. 
 For more information, see About Mouse Input on MSDN.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseSonar"><span class="selflink">SetMouseSonar</span></td><td>4125</td><td>
 Turns the Sonar accessibility feature on or off. 
 This feature briefly shows several concentric circles around the mouse pointer when the user presses and releases the CTRL key. 
 The <span class="code">pvParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_75?vb=True|nu=true");</script></span> for on and <span class="keyword"><span id="LSTEA6790CD_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_76?vb=False|nu=false");</script></span> for off. 
 The default is off.
 For more information, see About Mouse Input.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseClickLock"><span class="selflink">GetMouseClickLock</span></td><td>4126</td><td>
 Retrieves the state of the Mouse ClickLock feature. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_77?vb=True|nu=true");</script></span> if enabled, 
 or <span class="keyword"><span id="LSTEA6790CD_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_78?vb=False|nu=false");</script></span> otherwise. 
 For more information, see About Mouse Input.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseClickLock"><span class="selflink">SetMouseClickLock</span></td><td>4127</td><td>
 Turns the Mouse ClickLock accessibility feature on or off. 
 This feature temporarily locks down the primary mouse button when that button is clicked and 
 held down for the time specified by SETMOUSECLICKLOCKTIME. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_79?vb=True|nu=true");</script></span> for on, or <span class="keyword"><span id="LSTEA6790CD_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_80?vb=False|nu=false");</script></span> for off. The default is off. 
 For more information, see Remarks and About Mouse Input on MSDN.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseVanish"><span class="selflink">GetMouseVanish</span></td><td>4128</td><td>
 Retrieves the state of the Mouse Vanish feature. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_81?vb=True|nu=true");</script></span> if enabled or 
 <span class="keyword"><span id="LSTEA6790CD_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_82?vb=False|nu=false");</script></span> otherwise. 
 For more information, see About Mouse Input on MSDN.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseVanish"><span class="selflink">SetMouseVanish</span></td><td>4129</td><td>
 Turns the Vanish feature on or off. 
 This feature hides the mouse pointer when the user types; the pointer reappears when the user moves the mouse. 
 The <span class="code">pvParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_83?vb=True|nu=true");</script></span> for on and <span class="keyword"><span id="LSTEA6790CD_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_84?vb=False|nu=false");</script></span> for off. The default is off.
 For more information, see About Mouse Input on MSDN.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFlatMenu"><span class="selflink">GetFlatMenu</span></td><td>4130</td><td>
 Determines whether native User menus have flat menu appearance. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that returns <span class="keyword"><span id="LSTEA6790CD_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_85?vb=True|nu=true");</script></span> if the 
 flat menu appearance is set, or <span class="keyword"><span id="LSTEA6790CD_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_86?vb=False|nu=false");</script></span> otherwise.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFlatMenu"><span class="selflink">SetFlatMenu</span></td><td>4131</td><td>
 Enables or disables flat menu appearance for native User menus. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_87?vb=True|nu=true");</script></span> to enable flat menu appearance or <span class="keyword"><span id="LSTEA6790CD_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_88?vb=False|nu=false");</script></span> to disable it.
 When enabled, the menu bar uses COLOR_MENUBAR for the menubar background, COLOR_MENU for the menu-popup background, COLOR_MENUHILIGHT
 for the fill of the current menu selection, and COLOR_HILIGHT for the outline of the current menu selection.
 If disabled, menus are drawn using the same metrics and colors as in Windows 2000 and earlier.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDropShadow"><span class="selflink">GetDropShadow</span></td><td>4132</td><td>
 Determines whether the drop shadow effect is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that returns <span class="keyword"><span id="LSTEA6790CD_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_89?vb=True|nu=true");</script></span> if enabled or 
 <span class="keyword"><span id="LSTEA6790CD_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_90?vb=False|nu=false");</script></span> if disabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDropShadow"><span class="selflink">SetDropShadow</span></td><td>4133</td><td>
 Enables or disables the drop shadow effect.
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_91?vb=True|nu=true");</script></span> to enable the drop shadow effect or <span class="keyword"><span id="LSTEA6790CD_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_92?vb=False|nu=false");</script></span> to disable it.
 You must also have CS_DROPSHADOW in the window class style.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetBlockSendInputResets"><span class="selflink">GetBlockSendInputResets</span></td><td>4134</td><td>
 Retrieves a <span class="nolink">Boolean</span> indicating whether an application can reset the screensaver's timer by calling the SendInput function
 to simulate keyboard or mouse input. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_93?vb=True|nu=true");</script></span>
 if the simulated input will be blocked, or <span class="keyword"><span id="LSTEA6790CD_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_94?vb=False|nu=false");</script></span> otherwise.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetBlockSendInputResets"><span class="selflink">SetBlockSendInputResets</span></td><td>4135</td><td>
 Determines whether an application can reset the screensaver's timer by calling the SendInput function to simulate keyboard
 or mouse input. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_95?vb=True|nu=true");</script></span> if the screensaver will not be deactivated by simulated input,
 or <span class="keyword"><span id="LSTEA6790CD_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_96?vb=False|nu=false");</script></span> if the screensaver will be deactivated by simulated input.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetUiEffects"><span class="selflink">GetUiEffects</span></td><td>4158</td><td>
 Determines whether UI effects are enabled or disabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_97?vb=True|nu=true");</script></span>
 if all UI effects are enabled, or <span class="keyword"><span id="LSTEA6790CD_98"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_98?vb=False|nu=false");</script></span> if they are disabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetUiEffects"><span class="selflink">SetUiEffects</span></td><td>4159</td><td>
 Enables or disables UI effects. 
 Set the <span class="code">pvParam</span> parameter to <span class="keyword"><span id="LSTEA6790CD_99"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_99?vb=True|nu=true");</script></span> to enable all UI effects or <span class="keyword"><span id="LSTEA6790CD_100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_100?vb=False|nu=false");</script></span> to disable all UI effects.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetForegroundLockTimeout"><span class="selflink">GetForegroundLockTimeout</span></td><td>8192</td><td>
 Retrieves the amount of time following user input, in milliseconds, during which the system will not allow applications
 to force themselves into the foreground. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt16</span> variable that receives the time.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetForegroundLockTimeout"><span class="selflink">SetForegroundLockTimeout</span></td><td>8193</td><td>
 Sets the amount of time following user input, in milliseconds, during which the system does not allow applications
 to force themselves into the foreground. 
 Set <span class="code">pvParam</span> to the new timeout value.
 The calling thread must be able to change the foreground window, otherwise the call fails.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetActiveWndTrkTimeout"><span class="selflink">GetActiveWndTrkTimeout</span></td><td>8194</td><td>
 Retrieves the active window tracking delay, in milliseconds. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt16</span> variable that receives the time.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetActiveWndTrkTimeout"><span class="selflink">SetActiveWndTrkTimeout</span></td><td>8195</td><td>
 Sets the active window tracking delay. 
 Set <span class="code">pvParam</span> to the number of milliseconds to delay before activating the window under the mouse pointer.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetForegroundFlashCount"><span class="selflink">GetForegroundFlashCount</span></td><td>8196</td><td>
 Retrieves the number of times SetForegroundWindow will flash the taskbar button when rejecting a foreground switch request.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt16</span> variable that receives the value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetForegroundFlashCount"><span class="selflink">SetForegroundFlashCount</span></td><td>8197</td><td>
 Sets the number of times SetForegroundWindow will flash the taskbar button when rejecting a foreground switch request.
 Set <span class="code">pvParam</span> to the number of times to flash.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetCaretWidth"><span class="selflink">GetCaretWidth</span></td><td>8198</td><td>
 Retrieves the caret width in edit controls, in pixels. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt16</span> that receives this value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetCaretWidth"><span class="selflink">SetCaretWidth</span></td><td>8199</td><td>
 Sets the caret width in edit controls. 
 Set <span class="code">pvParam</span> to the desired width, in pixels. 
 The default and minimum value is 1.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseClickLockTime"><span class="selflink">GetMouseClickLockTime</span></td><td>8200</td><td>
 Retrieves the time delay before the primary mouse button is locked. 
 The <span class="code">pvParam</span> parameter must point to <span class="nolink">Int32</span> that receives the time delay. 
 This is only enabled if SETMOUSECLICKLOCK is set to <span class="keyword"><span id="LSTEA6790CD_101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_101?vb=True|nu=true");</script></span>. 
 For more information, see About Mouse Input on MSDN.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseClickLockTime"><span class="selflink">SetMouseClickLockTime</span></td><td>8201</td><td>
 Turns the Mouse ClickLock accessibility feature on or off. 
 This feature temporarily locks down the primary mouse button when that button is clicked and 
 held down for the time specified by SETMOUSECLICKLOCKTIME. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_102?vb=True|nu=true");</script></span> for on, or <span class="keyword"><span id="LSTEA6790CD_103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_103?vb=False|nu=false");</script></span> for off. 
 The default is off. 
 For more information, see Remarks and About Mouse Input on MSDN.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFontSmoothingContrast"><span class="selflink">GetFontSmoothingContrast</span></td><td>8204</td><td>
 Retrieves a contrast value that is used in ClearType™ smoothing. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt32</span> that receives the information.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFontSmoothingContrast"><span class="selflink">SetFontSmoothingContrast</span></td><td>8205</td><td>
 Sets the contrast value used in ClearType smoothing. 
 The <span class="code">pvParam</span> parameter points to a <span class="nolink">UInt32</span> that holds the contrast value.
 Valid contrast values are from 1000 to 2200. The default value is 1400.
 When using this option, the fWinIni parameter must be set to SPIF_SENDWININICHANGE | SPIF_UPDATEINIFILE; otherwise,
 SystemParametersInfo fails.
 SETFONTSMOOTHINGTYPE must also be set to FE_FONTSMOOTHINGCLEARTYPE.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFocusBorderWidth"><span class="selflink">GetFocusBorderWidth</span></td><td>8206</td><td>
 Retrieves the width, in pixels, of the left and right edges of the focus rectangle drawn with DrawFocusRect.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt32</span>.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFocusBorderWidth"><span class="selflink">SetFocusBorderWidth</span></td><td>8207</td><td>
 Sets the height of the left and right edges of the focus rectangle drawn with DrawFocusRect to the value of 
 the <span class="code">pvParam</span> parameter.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFocusBorderHeight"><span class="selflink">GetFocusBorderHeight</span></td><td>8208</td><td>
 Retrieves the height, in pixels, of the top and bottom edges of the focus rectangle drawn with DrawFocusRect.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt32</span>.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFocusBorderHeight"><span class="selflink">SetFocusBorderHeight</span></td><td>8209</td><td>
 Sets the height of the top and bottom edges of the focus rectangle drawn with DrawFocusRect to the 
 value of the <span class="code">pvParam</span> parameter.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetClientAreaAnimation"><span class="selflink">GetClientAreaAnimation</span></td><td>4162</td><td>
 Determines whether animations are enabled or disabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_104?vb=True|nu=true");</script></span> if animations are enabled, 
 or <span class="keyword"><span id="LSTEA6790CD_105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_105?vb=False|nu=false");</script></span> otherwise.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetClientAreaAnimation"><span class="selflink">SetClientAreaAnimation</span></td><td>4163</td><td>
 Turns client area animations on or off. 
 The <span class="code">pvParam</span> parameter is a <span class="nolink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_106?vb=True|nu=true");</script></span> to enable animations and other transient effects in the client area, 
 or <span class="keyword"><span id="LSTEA6790CD_107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_107?vb=False|nu=false");</script></span> to disable them..
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDisableOverlappedContent"><span class="selflink">GetDisableOverlappedContent</span></td><td>4160</td><td>
 Determines whether overlapped content is enabled or disabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_108?vb=True|nu=true");</script></span> if enabled, 
 or <span class="keyword"><span id="LSTEA6790CD_109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_109?vb=False|nu=false");</script></span> otherwise.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDisableOverlappedContent"><span class="selflink">SetDisableOverlappedContent</span></td><td>4161</td><td>
 Turns overlapped content (such as background images and watermarks) on or off. 
 The <span class="code">pvParam</span> parameter is a <span class="nolink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_110?vb=True|nu=true");</script></span> to disable overlapped content, or <span class="keyword"><span id="LSTEA6790CD_111"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_111?vb=False|nu=false");</script></span> to enable overlapped content.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMessageDuration"><span class="selflink">GetMessageDuration</span></td><td>8214</td><td>
 Retrieves the time that notification pop-ups should be displayed, in seconds. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt64</span> that receives the message duration.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMessageDuration"><span class="selflink">SetMessageDuration</span></td><td>8215</td><td>
 Sets the time that notification pop-ups should be displayed, in seconds. 
 The <span class="code">pvParam</span> parameter specifies the message duration.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetCleartype"><span class="selflink">GetCleartype</span></td><td>4168</td><td>
 Determines whether ClearType is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_112"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_112?vb=True|nu=true");</script></span> if ClearType is enabled, or <span class="keyword"><span id="LSTEA6790CD_113"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_113?vb=False|nu=false");</script></span> otherwise.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetCleartype"><span class="selflink">SetCleartype</span></td><td>4169</td><td>
 Turns ClearType on or off. 
 The <span class="code">pvParam</span> parameter is a <span class="nolink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_114"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_114?vb=True|nu=true");</script></span> to enable ClearType, or <span class="keyword"><span id="LSTEA6790CD_115"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_115?vb=False|nu=false");</script></span> to disable it.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSystemlanguageBar"><span class="selflink">GetSystemlanguageBar</span></td><td>4176</td><td>
 Starting with Windows 8: Determines whether the system language bar is enabled or disabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_116"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_116?vb=True|nu=true");</script></span> if the language bar is enabled, or <span class="keyword"><span id="LSTEA6790CD_117"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_117?vb=False|nu=false");</script></span> otherwise.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSystemlanguageBar"><span class="selflink">SetSystemlanguageBar</span></td><td>4177</td><td>
 Starting with Windows 8: Turns the legacy language bar feature on or off. 
 The <span class="code">pvParam</span> parameter is a pointer to a <span class="nolink">Boolean</span> variable. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_118"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_118?vb=True|nu=true");</script></span> to enable the legacy language bar, or <span class="keyword"><span id="LSTEA6790CD_119"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_119?vb=False|nu=false");</script></span> to disable it. 
 The flag is supported on Windows 8 where the legacy language bar is replaced by Input Switcher and therefore turned off by default. 
 Turning the legacy language bar on is provided for compatibility reasons and has no effect on the Input Switcher.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWheelscrollChars"><span class="selflink">GetWheelscrollChars</span></td><td>108</td><td>
 Retrieves the number of characters to scroll when the horizontal mouse wheel is moved. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt32</span> variable that receives the number of lines. 
 The default value is 3.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWheelscrollChars"><span class="selflink">SetWheelscrollChars</span></td><td>109</td><td>
 Sets the number of characters to scroll when the horizontal mouse wheel is moved. 
 The number of characters is set from the <span class="code">uiParam</span> parameter.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetScreensaveSecure"><span class="selflink">GetScreensaveSecure</span></td><td>118</td><td>
 Determines whether the screen saver requires a password to display the Windows desktop. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_120"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_120?vb=True|nu=true");</script></span> if the screen saver requires a password, or <span class="keyword"><span id="LSTEA6790CD_121"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_121?vb=False|nu=false");</script></span> otherwise. 
 The <span class="code">uiParam</span> parameter is ignored.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetScreensaveSecure"><span class="selflink">SetScreensaveSecure</span></td><td>119</td><td>
 Sets whether the screen saver requires the user to enter a password to display the Windows desktop. 
 The <span class="code">uiParam</span> parameter is a <span class="nolink">Boolean</span> variable. 
 The <span class="code">pvParam</span> parameter is ignored. 
 Set <span class="code">uiParam</span> to <span class="keyword"><span id="LSTEA6790CD_122"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_122?vb=True|nu=true");</script></span> to require a password, or <span class="keyword"><span id="LSTEA6790CD_123"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_123?vb=False|nu=false");</script></span> to not require a password.
 If the machine has entered power saving mode or system lock state, an ERROR_OPERATION_IN_PROGRESS exception occurs.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetHungAppTimeout"><span class="selflink">GetHungAppTimeout</span></td><td>120</td><td>
 Retrieves the number of milliseconds that a thread can go without dispatching a message before the system considers it unresponsive. 
 The <span class="code">pvParam</span> parameter must point to an integer variable that receives the value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetHungAppTimeout"><span class="selflink">SetHungAppTimeout</span></td><td>121</td><td>
 Sets the hung application time-out to the value of the <span class="code">uiParam</span> parameter. 
 This value is the number of milliseconds that a thread can go without dispatching a message before the system considers it unresponsive
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWaitToKillTimeout"><span class="selflink">GetWaitToKillTimeout</span></td><td>122</td><td>
 Retrieves the number of milliseconds that the system waits before terminating an application that does not respond to a shutdown request. 
 The <span class="code">pvParam</span> parameter must point to an integer variable that receives the value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWaitToKillTimeout"><span class="selflink">SetWaitToKillTimeout</span></td><td>123</td><td>
 Sets the application shutdown request time-out to the value of the <span class="code">uiParam</span> parameter. 
 This value is the number of milliseconds that the system waits before terminating an application that does not respond to a shutdown request
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWaitToKillServiceTimeout"><span class="selflink">GetWaitToKillServiceTimeout</span></td><td>124</td><td>
 Retrieves the number of milliseconds that the service control manager waits before 
 terminating a service that does not respond to a shutdown request. 
 The <span class="code">pvParam</span> parameter must point to an integer variable that receives the value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWaitToKillServiceTimeout"><span class="selflink">SetWaitToKillServiceTimeout</span></td><td>125</td><td>
 Sets the service shutdown request time-out to the value of the <span class="code">uiParam</span> parameter. 
 This value is the number of milliseconds that the system waits before terminating a service that does not respond to a shutdown request
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetPenWindows"><span class="selflink">SetPenWindows</span></td><td>49</td><td>
 Windows Me/98/95: Pen windows is being loaded or unloaded. 
 The <span class="code">uiParam</span> parameter is <span class="keyword"><span id="LSTEA6790CD_124"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_124?vb=True|nu=true");</script></span> when loading and <span class="keyword"><span id="LSTEA6790CD_125"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_125?vb=False|nu=false");</script></span> when unloading pen windows. 
 The <span class="code">pvParam</span> parameter is null.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetScreensaverRunning"><span class="selflink">GetScreensaverRunning</span></td><td>114</td><td>
 Determines whether a screen saver is currently running on the window station of the calling process.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_126"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_126?vb=True|nu=true");</script></span> if a screen saver is currently running, 
 or <span class="keyword"><span id="LSTEA6790CD_127"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_127?vb=False|nu=false");</script></span> otherwise.
 Note that only the interactive window station, "WinSta0", can have a screen saver running.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetScreensaverRunning"><span class="selflink">SetScreensaverRunning</span></td><td>97</td><td>
 Windows Me/98:  Used internally; applications should not use this flag.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFilterKeys"><span class="selflink">GetFilterKeys</span></td><td>50</td><td>
 Retrieves information about the FilterKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a FILTERKEYS structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(FILTERKEYS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFilterKeys"><span class="selflink">SetFilterKeys</span></td><td>51</td><td>
 Sets the parameters of the FilterKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a FILTERKEYS structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(FILTERKEYS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetToggleKeys"><span class="selflink">GetToggleKeys</span></td><td>52</td><td>
 Retrieves information about the ToggleKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a TOGGLEKEYS structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(TOGGLEKEYS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetToggleKeys"><span class="selflink">SetToggleKeys</span></td><td>53</td><td>
 Sets the parameters of the ToggleKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a TOGGLEKEYS structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(TOGGLEKEYS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseKeys"><span class="selflink">GetMouseKeys</span></td><td>54</td><td>
 Retrieves information about the MouseKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a MOUSEKEYS structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(MOUSEKEYS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseKeys"><span class="selflink">SetMouseKeys</span></td><td>55</td><td>
 Sets the parameters of the MouseKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a MOUSEKEYS structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(MOUSEKEYS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetShowSounds"><span class="selflink">GetShowSounds</span></td><td>56</td><td>
 Determines whether the Show Sounds accessibility flag is on or off.
 If it is on, the user requires an application to present information visually in situations where 
 it would otherwise present the information only in audible form.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_128"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_128?vb=True|nu=true");</script></span> if the feature is on, 
 or <span class="keyword"><span id="LSTEA6790CD_129"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_129?vb=False|nu=false");</script></span> if it is off.
 Using this value is equivalent to calling GetSystemMetrics (SM_SHOWSOUNDS). That is the recommended call.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetShowSounds"><span class="selflink">SetShowSounds</span></td><td>57</td><td>
 Sets the parameters of the SoundSentry accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a SOUNDSENTRY structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(SOUNDSENTRY).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetStickyKeys"><span class="selflink">GetStickyKeys</span></td><td>58</td><td>
 Retrieves information about the StickyKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a STICKYKEYS structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(STICKYKEYS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetStickyKeys"><span class="selflink">SetStickyKeys</span></td><td>59</td><td>
 Sets the parameters of the StickyKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a STICKYKEYS structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(STICKYKEYS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetAccessTimeout"><span class="selflink">GetAccessTimeout</span></td><td>60</td><td>
 Retrieves information about the time-out period associated with the accessibility features. 
 The <span class="code">pvParam</span> parameter must point to an ACCESSTIMEOUT structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ACCESSTIMEOUT).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetAccessTimeout"><span class="selflink">SetAccessTimeout</span></td><td>61</td><td>
 Sets the time-out period associated with the accessibility features. 
 The <span class="code">pvParam</span> parameter must point to an ACCESSTIMEOUT structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ACCESSTIMEOUT).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSerialKeys"><span class="selflink">GetSerialKeys</span></td><td>62</td><td>
 Windows Me/98/95:  Retrieves information about the SerialKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a SERIALKEYS structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(SERIALKEYS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSerialKeys"><span class="selflink">SetSerialKeys</span></td><td>63</td><td>
 Windows Me/98/95:  Sets the parameters of the SerialKeys accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a SERIALKEYS structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(SERIALKEYS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSoundsEntry"><span class="selflink">GetSoundsEntry</span></td><td>64</td><td>
 Retrieves information about the SoundSentry accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a SOUNDSENTRY structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(SOUNDSENTRY).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSoundsEntry"><span class="selflink">SetSoundsEntry</span></td><td>65</td><td>
 Sets the parameters of the SoundSentry accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a SOUNDSENTRY structure that contains the new parameters. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(SOUNDSENTRY).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetAudioDescription"><span class="selflink">GetAudioDescription</span></td><td>116</td><td>
 Determines whether audio descriptions are enabled or disabled. 
 The <span class="code">pvParam</span> parameter is a pointer to an AUDIODESCRIPTION structure. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(AUDIODESCRIPTION).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetAudioDescription"><span class="selflink">SetAudioDescription</span></td><td>117</td><td>
 Turns the audio descriptions feature on or off. 
 The pvParam parameter is a pointer to an AUDIODESCRIPTION structure.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFontSmoothingOrientation"><span class="selflink">GetFontSmoothingOrientation</span></td><td>8210</td><td>
 Not implemented.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFontSmoothingOrientation"><span class="selflink">SetFontSmoothingOrientation</span></td><td>8211</td><td>
 Not implemented.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFontSmoothingType"><span class="selflink">GetFontSmoothingType</span></td><td>8202</td><td>
 Retrieves the type of font smoothing. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">UInt32</span> that receives the information.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFontSmoothingType"><span class="selflink">SetFontSmoothingType</span></td><td>8203</td><td>
 Sets the font smoothing type. 
 The <span class="code">pvParam</span> parameter points to a UINT that contains either FE_FONTSMOOTHINGSTANDARD,
 if standard anti-aliasing is used, or FE_FONTSMOOTHINGCLEARTYPE, if ClearType is used. The default is FE_FONTSMOOTHINGSTANDARD.
 When using this option, the fWinIni parameter must be set to SPIF_SENDWININICHANGE | SPIF_UPDATEINIFILE; otherwise,
 SystemParametersInfo fails.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetTooltipFade"><span class="selflink">GetTooltipFade</span></td><td>4120</td><td>
 If SETTOOLTIPANIMATION is enabled, GETTOOLTIPFADE indicates whether ToolTip animation uses a fade effect or a slide effect.
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_130"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_130?vb=True|nu=true");</script></span> for fade animation 
 or <span class="keyword"><span id="LSTEA6790CD_131"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_131?vb=False|nu=false");</script></span> for slide animation.
 For more information on slide and fade effects, see <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_AnimateWindow.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a>.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetTooltipFade"><span class="selflink">SetTooltipFade</span></td><td>4121</td><td>
 If the SETTOOLTIPANIMATION flag is enabled, use SETTOOLTIPFADE to indicate whether ToolTip animation uses a fade effect or a slide effect. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_132"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_132?vb=True|nu=true");</script></span> for fade animation or <span class="keyword"><span id="LSTEA6790CD_133"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_133?vb=False|nu=false");</script></span> for slide animation. 
 The tooltip fade effect is possible only if the system has a color depth of more than 256 colors. 
 For more information on the slide and fade effects, see the <a href="M_DevCase_Interop_Unmanaged_Win32_NativeMethods_AnimateWindow.htm">AnimateWindow(IntPtr, Int32, WindowAnimation)</a> function.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetActiveWndTrkZorder"><span class="selflink">GetActiveWndTrkZorder</span></td><td>4108</td><td>
 Determines whether windows activated through active window tracking will be brought to the top. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_134"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_134?vb=True|nu=true");</script></span> for on,
 or <span class="keyword"><span id="LSTEA6790CD_135"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_135?vb=False|nu=false");</script></span> for off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetActiveWndTrkZorder"><span class="selflink">SetActiveWndTrkZorder</span></td><td>4109</td><td>
 Determines whether or not windows activated through active window tracking should be brought to the top. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_136"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_136?vb=True|nu=true");</script></span> for on or <span class="keyword"><span id="LSTEA6790CD_137"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_137?vb=False|nu=false");</script></span> for off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetShowIMEui"><span class="selflink">GetShowIMEui</span></td><td>110</td><td>
 Determines whether the IME status window is visible (on a per-user basis). 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable  that 
 receives <span class="keyword"><span id="LSTEA6790CD_138"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_138?vb=True|nu=true");</script></span> if the status window is visible, or <span class="keyword"><span id="LSTEA6790CD_139"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_139?vb=False|nu=false");</script></span> if it is not.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetShowIMEui"><span class="selflink">SetShowIMEui</span></td><td>111</td><td>
 Sets whether the IME status window is visible or not on a per-user basis. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_140"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_140?vb=True|nu=true");</script></span> for on or <span class="keyword"><span id="LSTEA6790CD_141"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_141?vb=False|nu=false");</script></span> for off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWindowsExtension"><span class="selflink">GetWindowsExtension</span></td><td>92</td><td>
 Windows 95:  Determines whether the Windows extension, Windows Plus!, is installed.
 Set the <span class="code">uiParam</span> parameter to 1.
 The <span class="code">pvParam</span> parameter is not used. 
 The function returns <span class="keyword"><span id="LSTEA6790CD_142"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_142?vb=True|nu=true");</script></span> if the extension is installed, or <span class="keyword"><span id="LSTEA6790CD_143"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_143?vb=False|nu=false");</script></span> if it is not.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetHandheld"><span class="selflink">SetHandheld</span></td><td>78</td><td>
 Used internally; applications should not use this value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetLowPowerTimeout"><span class="selflink">GetLowPowerTimeout</span></td><td>79</td><td>
 Retrieves the time-out value for the low-power phase of screen saving. 
 The <span class="code">pvParam</span> parameter must point to an <span class="nolink">Int32</span> variable that receives the value. 
 This flag is supported for 32-bit applications only.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetLowPowerTimeout"><span class="selflink">SetLowPowerTimeout</span></td><td>81</td><td>
 Sets the time-out value, in seconds, for the low-power phase of screen saving. 
 The <span class="code">uiParam</span> parameter specifies the new value.
 The <span class="code">pvParam</span> parameter must be null. 
 This flag is supported for 32-bit applications only.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetPowerOffTimeout"><span class="selflink">GetPowerOffTimeout</span></td><td>80</td><td>
 Retrieves the time-out value for the power-off phase of screen saving. The <span class="code">pvParam</span> parameter must 
 point to an <span class="nolink">Int32</span> variable that receives the value. 
 This flag is supported for 32-bit applications only.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetPowerOffTimeout"><span class="selflink">SetPowerOffTimeout</span></td><td>82</td><td>
 Sets the time-out value, in seconds, for the power-off phase of screen saving. The <span class="code">uiParam</span> parameter specifies the new value.
 The <span class="code">pvParam</span> parameter must be null. 
 This flag is supported for 32-bit applications only.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetLowPowerActive"><span class="selflink">GetLowPowerActive</span></td><td>83</td><td>
 Determines whether the low-power phase of screen saving is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable
 that receives <span class="keyword"><span id="LSTEA6790CD_144"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_144?vb=True|nu=true");</script></span> if enabled, or <span class="keyword"><span id="LSTEA6790CD_145"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_145?vb=False|nu=false");</script></span> if disabled. 
 This flag is supported for 32-bit applications only.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetLowPowerActive"><span class="selflink">SetLowPowerActive</span></td><td>85</td><td>
 Activates or deactivates the low-power phase of screen saving. 
 Set <span class="code">uiParam</span> to 1 to activate, or zero to deactivate.
 The <span class="code">pvParam</span> parameter must be null. 
 This flag is supported for 32-bit applications only.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetPowerOffActive"><span class="selflink">GetPowerOffActive</span></td><td>84</td><td>
 Determines whether the power-off phase of screen saving is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable
 that receives <span class="keyword"><span id="LSTEA6790CD_146"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_146?vb=True|nu=true");</script></span> if enabled, or <span class="keyword"><span id="LSTEA6790CD_147"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_147?vb=False|nu=false");</script></span> if disabled. 
 This flag is supported for 32-bit applications only.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetPowerOffActive"><span class="selflink">SetPowerOffActive</span></td><td>86</td><td>
 Activates or deactivates the power-off phase of screen saving. Set <span class="code">uiParam</span> to 1 to activate, or zero to deactivate.
 The <span class="code">pvParam</span> parameter must be null. 
 This flag is supported for 32-bit applications only.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetHighContrast"><span class="selflink">GetHighContrast</span></td><td>66</td><td>
 Retrieves information about the HighContrast accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a HIGHCONTRAST structure that receives the information. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(HIGHCONTRAST).
 For a general discussion, see remarks.
 Windows NT:  This value is not supported.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetHighContrast"><span class="selflink">SetHighContrast</span></td><td>67</td><td>
 Sets the parameters of the HighContrast accessibility feature. 
 The <span class="code">pvParam</span> parameter must point to a HIGHCONTRAST structure that contains the new parameters. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(HIGHCONTRAST).
 Windows NT: This value is not supported.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetKeyboardPref"><span class="selflink">GetKeyboardPref</span></td><td>68</td><td>
 Determines whether the user relies on the keyboard instead of the mouse, 
 and wants applications to display keyboard interfaces that would otherwise be hidden. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_148"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_148?vb=True|nu=true");</script></span> if the user relies on the keyboard; 
 or <span class="keyword"><span id="LSTEA6790CD_149"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_149?vb=False|nu=false");</script></span> otherwise.
 Windows NT: This value is not supported.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetKeyboardPref"><span class="selflink">SetKeyboardPref</span></td><td>69</td><td>
 Sets the keyboard preference. 
 The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_150"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_150?vb=True|nu=true");</script></span> if the user relies on the keyboard instead of the mouse,
 and wants applications to display keyboard interfaces that would otherwise be hidden; <span class="code">uiParam</span> is <span class="keyword"><span id="LSTEA6790CD_151"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_151?vb=False|nu=false");</script></span> otherwise.
 Windows NT: This value is not supported.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetScreenReader"><span class="selflink">GetScreenReader</span></td><td>70</td><td>
 Determines whether a screen reviewer utility is running. A screen reviewer utility directs textual information to an output device,
 such as a speech synthesizer or Braille display. When this flag is set, an application should provide textual information
 in situations where it would otherwise present the information graphically.
 The <span class="code">pvParam</span> parameter is a pointer to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_152"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_152?vb=True|nu=true");</script></span> if a screen reviewer utility is running, or <span class="keyword"><span id="LSTEA6790CD_153"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_153?vb=False|nu=false");</script></span> otherwise.
 Windows NT:  This value is not supported.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetScreenReader"><span class="selflink">SetScreenReader</span></td><td>71</td><td>
 Determines whether a screen review utility is running. The <span class="code">uiParam</span> parameter specifies <span class="keyword"><span id="LSTEA6790CD_154"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_154?vb=True|nu=true");</script></span> for on, or <span class="keyword"><span id="LSTEA6790CD_155"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_155?vb=False|nu=false");</script></span> for off.
 Windows NT:  This value is not supported.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetAnimation"><span class="selflink">GetAnimation</span></td><td>72</td><td>
 Retrieves the animation effects associated with user actions. 
 The <span class="code">pvParam</span> parameter must point to an ANIMATIONINFO structure that receives the information. 
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ANIMATIONINFO).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetAnimation"><span class="selflink">SetAnimation</span></td><td>73</td><td>
 Sets the animation effects associated with user actions. 
 The <span class="code">pvParam</span> parameter must point to an ANIMATIONINFO structure that contains the new parameters.
 Set the <span class="code">cbSize</span> member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ANIMATIONINFO).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetNonClientMetrics"><span class="selflink">GetNonClientMetrics</span></td><td>41</td><td>
 Retrieves the metrics associated with the nonclient area of nonminimized windows. 
 The <span class="code">pvParam</span> parameter must point to a NONCLIENTMETRICS structure that receives the information. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(NONCLIENTMETRICS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetNonClientMetrics"><span class="selflink">SetNonClientMetrics</span></td><td>42</td><td>
 Sets the metrics associated with the nonclient area of nonminimized windows. 
 The <span class="code">pvParam</span> parameter must point to a NONCLIENTMETRICS structure that contains the new parameters. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(NONCLIENTMETRICS). 
 Also, the lfHeight member of the LOGFONT structure must be a negative value.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMinimizedMetrics"><span class="selflink">GetMinimizedMetrics</span></td><td>43</td><td>
 Retrieves the metrics associated with minimized windows. 
 The <span class="code">pvParam</span> parameter must point to a MINIMIZEDMETRICS structure that receives the information. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(MINIMIZEDMETRICS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMinimizedMetrics"><span class="selflink">SetMinimizedMetrics</span></td><td>44</td><td>
 Sets the metrics associated with minimized windows. 
 The <span class="code">pvParam</span> parameter must point to a MINIMIZEDMETRICS structure that contains the new parameters.
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(MINIMIZEDMETRICS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetIconMetrics"><span class="selflink">GetIconMetrics</span></td><td>45</td><td>
 Retrieves the metrics associated with icons. 
 The <span class="code">pvParam</span> parameter must point to an ICONMETRICS structure that receives the information. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ICONMETRICS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetIconMetrics"><span class="selflink">SetIconMetrics</span></td><td>46</td><td>
 Sets the metrics associated with icons. 
 The <span class="code">pvParam</span> parameter must point to an ICONMETRICS structure that contains the new parameters. 
 Set the cbSize member of this structure and the <span class="code">uiParam</span> parameter to sizeof(ICONMETRICS).
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWorkArea"><span class="selflink">GetWorkArea</span></td><td>48</td><td>
 Retrieves the size of the work area on the primary display monitor. 
 The work area is the portion of the screen not obscured by the system taskbar or by application desktop toolbars.
 The <span class="code">pvParam</span> parameter must point to a RECT structure that receives
 the coordinates of the work area, expressed in virtual screen coordinates.
 To get the work area of a monitor other than the primary display monitor, call the GetMonitorInfo function.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWorkArea"><span class="selflink">SetWorkArea</span></td><td>47</td><td>
 Sets the size of the work area. 
 The work area is the portion of the screen not obscured by the system taskbar or by application desktop toolbars.
 The <span class="code">pvParam</span> parameter is a pointer to a RECT structure that specifies the new work area rectangle,
 expressed in virtual screen coordinates. In a system with multiple display monitors, 
 the function sets the work area of the monitor that contains the specified rectangle.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetFastTaskSwitch"><span class="selflink">GetFastTaskSwitch</span></td><td>35</td><td>
 This flag is obsolete. 
 Previous versions of the system use this flag to determine whether ALT+TAB fast task switching is enabled.
 For Windows 95, Windows 98, and Windows NT version 4.0 and later, fast task switching is always enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetFastTaskSwitch"><span class="selflink">SetFastTaskSwitch</span></td><td>36</td><td>
 This flag is obsolete. 
 Previous versions of the system use this flag to enable or disable ALT+TAB fast task switching.
 For Windows 95, Windows 98, and Windows NT version 4.0 and later, fast task switching is always enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetIconTitleLogFont"><span class="selflink">GetIconTitleLogFont</span></td><td>31</td><td>
 Retrieves the logical font information for the current icon-title font. 
 The <span class="code">uiParam</span> parameter specifies the size of a LOGFONT structure,
 and the <span class="code">pvParam</span> parameter must point to the LOGFONT structure to fill in.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetIconTitleLogFont"><span class="selflink">SetIconTitleLogFont</span></td><td>34</td><td>
 Sets the font that is used for icon titles. 
 The <span class="code">uiParam</span> parameter specifies the size of a LOGFONT structure,
 and the <span class="code">pvParam</span> parameter must point to a LOGFONT structure.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetGridGranularity"><span class="selflink">GetGridGranularity</span></td><td>18</td><td>
 Retrieves the current granularity value of the desktop sizing grid. 
 The <span class="code">pvParam</span> parameter must point to an <span class="nolink">Int32</span> variable that receives the granularity.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetGridGranularity"><span class="selflink">SetGridGranularity</span></td><td>19</td><td>
 Sets the granularity of the desktop sizing grid to the value of the <span class="code">uiParam</span> parameter.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDeskPattern"><span class="selflink">SetDeskPattern</span></td><td>21</td><td>
 Sets the current desktop pattern by causing Windows to read the Pattern= setting from the WIN.INI file.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouse"><span class="selflink">GetMouse</span></td><td>3</td><td>
 Retrieves the two mouse threshold values and the mouse speed.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouse"><span class="selflink">SetMouse</span></td><td>4</td><td>
 Sets the two mouse threshold values and the mouse speed.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.LangDriver"><span class="selflink">LangDriver</span></td><td>12</td><td>
 Not implemented.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetScreensaveActive"><span class="selflink">GetScreensaveActive</span></td><td>16</td><td>
 Determines whether screen saving is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that 
 receives <span class="keyword"><span id="LSTEA6790CD_156"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_156?vb=True|nu=true");</script></span> if screen saving is enabled, or <span class="keyword"><span id="LSTEA6790CD_157"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_157?vb=False|nu=false");</script></span> otherwise.
 Does not work for Windows 7: <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms724947(v=vs.85).aspx" target="_blank">https://msdn.microsoft.com/en-us/library/windows/desktop/ms724947(v=vs.85).aspx</a></td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetLogicalDPIoverride"><span class="selflink">GetLogicalDPIoverride</span></td><td>158</td><td>
 Retrieves a value that determines whether Windows 8 is displaying apps using the default scaling plateau for the hardware or 
 going to the next higher plateau. 
 This value is based on the current "Make everything on your screen bigger" setting, 
 found in the Ease of Access section of PC settings: 1 is on, 0 is off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetLogicalDPIoverride"><span class="selflink">SetLogicalDPIoverride</span></td><td>159</td><td>
 Do not use.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetContactVisualization"><span class="selflink">GetContactVisualization</span></td><td>8216</td><td>
 Retrieves the current contact visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that receives the setting. 
 For more information, see Contact Visualization.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetContactVisualization"><span class="selflink">SetContactVisualization</span></td><td>8217</td><td>
 Sets the current contact visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that identifies the setting. 
 For more information, see Contact Visualization.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetGestureVisualization"><span class="selflink">GetGestureVisualization</span></td><td>8218</td><td>
 Retrieves the current gesture visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that receives the setting. 
 For more information, see Gesture Visualization.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetGestureVisualization"><span class="selflink">SetGestureVisualization</span></td><td>8219</td><td>
 Sets the current gesture visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that identifies the setting. 
 For more information, see Gesture Visualization.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMousewheelRouting"><span class="selflink">GetMousewheelRouting</span></td><td>8220</td><td>
 Retrieves the routing setting for wheel button input.
 The routing setting determines whether wheel button input is sent to the app with focus (foreground) or the app under the mouse cursor.
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that receives the routing option. 
 If the value is zero or MOUSEWHEEL_ROUTING_FOCUS, mouse wheel input is delivered to the app with focus. 
 If the value is 1 or MOUSEWHEEL_ROUTING_HYBRID (default), 
 mouse wheel input is delivered to the app with focus (desktop apps) or the app under the mouse cursor (Windows Store apps). 
 The <span class="code">uiParam</span> parameter is not used.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMousewheelRouting"><span class="selflink">SetMousewheelRouting</span></td><td>8221</td><td>
 Sets the routing setting for wheel button input. 
 The routing setting determines whether wheel button input is sent to the app with focus (foreground) or the app under the mouse cursor.
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that receives the routing option. 
 If the value is zero or MOUSEWHEEL_ROUTING_FOCUS, mouse wheel input is delivered to the app with focus. 
 If the value is 1 or MOUSEWHEEL_ROUTING_HYBRID (default), 
 mouse wheel input is delivered to the app with focus (desktop apps) or the app under the mouse cursor (Windows Store apps). 
 Set the <span class="code">uiParam</span> parameter to zero
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetPenVisualization"><span class="selflink">GetPenVisualization</span></td><td>8222</td><td>
 Retrieves the current pen gesture visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that receives the setting. 
 For more information, see Pen Visualization.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetPenVisualization"><span class="selflink">SetPenVisualization</span></td><td>8223</td><td>
 Sets the current pen gesture visualization setting. 
 The <span class="code">pvParam</span> parameter must point to a ULONG variable that identifies the setting. 
 For more information, see Pen Visualization.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetThreadLocalInputSettings"><span class="selflink">GetThreadLocalInputSettings</span></td><td>4174</td><td>
 Starting with Windows 8: Determines whether the active input settings have Local (per-thread, <span class="keyword"><span id="LSTEA6790CD_158"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_158?vb=True|nu=true");</script></span>) or Global (session, <span class="keyword"><span id="LSTEA6790CD_159"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_159?vb=False|nu=false");</script></span>) scope. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetThreadLocalInputSettings"><span class="selflink">SetThreadLocalInputSettings</span></td><td>4175</td><td>
 Starting with Windows 8: Determines whether the active input settings have Local (per-thread, <span class="keyword"><span id="LSTEA6790CD_160"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_160?vb=True|nu=true");</script></span>) or Global (session, <span class="keyword"><span id="LSTEA6790CD_161"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_161?vb=False|nu=false");</script></span>) scope. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable, casted by PVOID.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDockMoving"><span class="selflink">GetDockMoving</span></td><td>144</td><td>
 Determines whether a window is docked when it is moved to the top, left, or right edges of a monitor or monitor array. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_162"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_162?vb=True|nu=true");</script></span> if enabled, or <span class="keyword"><span id="LSTEA6790CD_163"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_163?vb=False|nu=false");</script></span> otherwise.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDockMoving"><span class="selflink">SetDockMoving</span></td><td>145</td><td>
 Sets whether a window is docked when it is moved to the top, left, or right docking targets on a monitor or monitor array. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_164"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_164?vb=True|nu=true");</script></span> for on or <span class="keyword"><span id="LSTEA6790CD_165"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_165?vb=False|nu=false");</script></span> for off.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetDragFromMaximize"><span class="selflink">GetDragFromMaximize</span></td><td>140</td><td>
 Determines whether a maximized window is restored when its caption bar is dragged. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_166"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_166?vb=True|nu=true");</script></span> if enabled, or <span class="keyword"><span id="LSTEA6790CD_167"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_167?vb=False|nu=false");</script></span> otherwise.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetDragFromMaximize"><span class="selflink">SetDragFromMaximize</span></td><td>141</td><td>
 Sets whether a maximized window is restored when its caption bar is dragged. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_168"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_168?vb=True|nu=true");</script></span> for on or <span class="keyword"><span id="LSTEA6790CD_169"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_169?vb=False|nu=false");</script></span> for off.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseDockThreshold"><span class="selflink">GetMouseDockThreshold</span></td><td>126</td><td>
 Retrieves the threshold in pixels where docking behavior is triggered by using a mouse to drag a window to the edge of a monitor or monitor array. 
 The default threshold is 1. 
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that receives the value.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseDockThreshold"><span class="selflink">SetMouseDockThreshold</span></td><td>127</td><td>
 Sets the threshold in pixels where docking behavior is triggered by using a mouse to drag a window to the edge of a monitor or monitor array. 
 The default threshold is 1. 
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that contains the new value
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseDragoutThreshold"><span class="selflink">GetMouseDragoutThreshold</span></td><td>132</td><td>
 Retrieves the threshold in pixels where undocking behavior is triggered by using a mouse to drag a window from the edge of a monitor or 
 a monitor array toward the center. 
 The default threshold is 20.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseDragoutThreshold"><span class="selflink">SetMouseDragoutThreshold</span></td><td>133</td><td>
 Sets the threshold in pixels where undocking behavior is triggered by using a mouse to drag a window from the edge of a monitor or 
 monitor array to its center. 
 The default threshold is 20. 
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that contains the new value.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetMouseSideMoveThreshold"><span class="selflink">GetMouseSideMoveThreshold</span></td><td>136</td><td>
 Retrieves the threshold in pixels from the top of a monitor or a monitor array where a vertically maximized window is restored when dragged with the mouse. 
 The default threshold is 50.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetMouseSideMoveThreshold"><span class="selflink">SetMouseSideMoveThreshold</span></td><td>137</td><td>
 Sets the threshold in pixels from the top of the monitor where a vertically maximized window is restored when dragged with the mouse. 
 The default threshold is 50. 
 The <span class="code">pvParam</span> parameter must point to a DWORD variable that contains the new value
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetSnapSizing"><span class="selflink">GetSnapSizing</span></td><td>142</td><td>
 Determines whether a window is vertically maximized when it is sized to the top or bottom of a monitor or monitor array. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_170"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_170?vb=True|nu=true");</script></span> if enabled, or <span class="keyword"><span id="LSTEA6790CD_171"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_171?vb=False|nu=false");</script></span> otherwise.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetSnapSizing"><span class="selflink">SetSnapSizing</span></td><td>143</td><td>
 Sets whether a window is vertically maximized when it is sized to the top or bottom of the monitor. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_172"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_172?vb=True|nu=true");</script></span> for on or <span class="keyword"><span id="LSTEA6790CD_173"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_173?vb=False|nu=false");</script></span> for off.
 Use <span class="selflink">GetWinArranging</span>  to determine whether this behavior is enabled.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.GetWinArranging"><span class="selflink">GetWinArranging</span></td><td>130</td><td>
 Determines whether window arrangement is enabled. 
 The <span class="code">pvParam</span> parameter must point to a <span class="nolink">Boolean</span> variable that receives <span class="keyword"><span id="LSTEA6790CD_174"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_174?vb=True|nu=true");</script></span> if enabled, or <span class="keyword"><span id="LSTEA6790CD_175"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_175?vb=False|nu=false");</script></span> otherwise.
 Window arrangement reduces the number of mouse, pen, or touch interactions needed to move and size top-level windows by 
 simplifying the default behavior of a window when it is dragged or sized.
 </td></tr><tr><td /><td target="F:DevCase.Interop.Unmanaged.Win32.Enums.SystemParametersActionFlags.SetWinArranging"><span class="selflink">SetWinArranging</span></td><td>131</td><td>
 Sets whether window arrangement is enabled. 
 Set <span class="code">pvParam</span> to <span class="keyword"><span id="LSTEA6790CD_176"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_176?vb=True|nu=true");</script></span> for on or <span class="keyword"><span id="LSTEA6790CD_177"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEA6790CD_177?vb=False|nu=false");</script></span> for off.
 Window arrangement reduces the number of mouse, pen, or touch interactions needed to move and size top-level windows by 
 simplifying the default behavior of a window when it is dragged or sized.
 </td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection"><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms724947(v=vs.85).aspx" target="_blank">https://msdn.microsoft.com/en-us/library/windows/desktop/ms724947(v=vs.85).aspx</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_DevCase_Interop_Unmanaged_Win32_Enums.htm">DevCase.Interop.Unmanaged.Win32.Enums Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>ElektroStudios 2020</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:ElektroStudios%40ElHacker.net?Subject=DevCase%20Class%20Library%20v3.3">ElektroStudios@ElHacker.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>